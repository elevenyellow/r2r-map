%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: stone-grey-backgr-01.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: victoria-haya
%%CreationDate: 2/3/15
%%BoundingBox: 0 0 1171 1210
%%HiResBoundingBox: 0 0 1170.7603 1209.9102
%%CropBox: 0 0 1170.7603 1209.9102
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 124 128 8%%BeginData: 31692 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD19FFA8FD49FFA8FD30FFA87D527D7DFD04A8FD42FF7C527DA1A8%A8FFA8FD29FFA8527C767C527C767C7DFD0BFFCFFFCAFD08FFA8A8FD28FF%CA767C527C767C527C7DFD16FFA8A87DFD0FFF7676527C5276527C52A7FD%08FFA8A77C7D7CA17CA8FD04FFA17D527C76CFFD12FFA87D527DA8FD0FFF%527C5276527C527652A1FD15FFA87D527C52FD0DFFA87C767D767C767D76%7CA1FD08FFCA7DA17CA17DA17CFFFFCF7C7D767D767D76A17DFD0BFFA8FF%FFFFA87C527C52A1FFA8FD0CFFA87D767C767D767C767DA7FD14FFA87652%7652767DFF7D7DA1FD09FF7D7C527C5276527C52A8A8FD05FFA8A87DA17C%7D7CA17C7D7CFF767C527C767C527C767CA8A77DA17DCFFFFFA87652527D%FFA8765276527652A8767C7DA8FD0AFF7D7D5276527C527652A8A8FD05FF%A8A8A8FD0BFF7D5276527C527D7D7D767D7DFFFFFFA8FFA8A77DA7A1A8A8%A8767C76A87DA1A8FFFFA8527C527C7CA17DA17CA17DA1A17D767D767D76%7D767D7CA87DA7A1A77DA8FF7D52765276A87D5276527C52767D7D767D76%7DA1FFFFFFCAFFA8A77DA1A1A8A87D527C76A77CA1A8FFFFCF7676527DFD%0AFFA8517652765176527C527C527CA8A17CA17CA17CA17CA17CA17DA8A1%A17CA17CA1FFFF5276517652A17CA17C7D7CA17CA7527C527C527C527C52%A87DA17DA17DA17DA77D525152527D517652765176527D527C527C527CA8%A17CA17CA17CA17CA17CA1A1A87DA77C7D7CA1FFFF5176527651FD0AFFA1%7C527C527C527D767D767D76CA7DA17DA77DA17DA77DA17DA7A1A87CA17D%A17CA8A87C527C527C7CA17DA17CA17DA1A8A1767D767D767D76A7A8A7A1%A7A1A7A1A7A1CF7D7C7DA1527C527C527C527C7D7D767D767D76A87DA77D%A17DA77DA17DA77DA17DA87DA17CA17DA8A87C527C527CA1FD09FFA85276%527652767D7C527C76A8A8A17DA17CA17DA17CA17DA17CCFA87D7CA17C7D%7CA85276527652767CA17C7D7CA17DFFFFA8767C527C767CA1FF7DA17DA7%7DA17DA7A1FFFF7D527652765276527652A8527C767C52A8A8A17CA17DA1%7CA17DA17CA17DA8A8A17C7D7CA17CA852765276527CA8FD08FFA876527C%52767DFF767D7CA152A17DA77DA17DA77DA17DA77DA1CFFFA8A17CA17DA1%7C7C5276527C527DA7A17DA17DCA7DA1A8CA7C7DA1A85276A8A8A1A77DA7%A1A77DA7FFFF527C5276527C527676CFA87D767D7C7D7CA87DA17DA77DA1%7DA77DA17DA7FFFFA8A17DA17CA17D76527C5276527DFD09FF7D7D76A1A8%A8A87C52A7515251767DA7A1A77DA8A8A8A7A8A1A87DA87D7D7CA17D7D51%76527651767CA8A1A8A7A8767D767C7CFFFF7D5152515276A77DA17DA17D%A1A1FFA87D7DFF7D7D767DA1A87DA8527C52A15152517C7DA77DA7A1A7A7%A8A1A77DA8A1A87DA17C7D7C7D52765176527676FD0AFF7D7D767D76FF76%7D7D7C5276527C527DA8FF7D7D767D767D767D76A1A1CAA8A87DA7A17C76%A87DA17CA17DFF7D7D7C7D7C7D7CA87D7C5276527DA8CAA7CAA8A7767D7D%7C527C7CCAFFFF767D767DA17D767D7D76527C5276527DA8FF7DA1767D76%7D767D76A1A1A8A8A87DA77D7C76A8A8A8A1A7A1FD07FF7C527C767CA87D%7CFF5276525251765252A17C767C527C767C527C76FFA87C5276527D7DFF%7D7D7C7D767D7D7D767D767C767D76A1527652A8CAA77DA17CA876525176%525251765276A77C767C52A17D7C76FF5252517652525176A77C527C767C%527C767C52FFA87C527C527C7DFFA87D767D7C7D7DFD06FF7C7D767D76CA%FFCFA8CA767652765276527CA77D767D767D767D76A1FFA1527C767C527C%7DA77CA17C7D7CA17D7D767D7C7D767D7CA1A8A8FFCA7DA77DA17DA87D76%52765276527652A7767D767D7CFFA8CAA8CF7C7652765276527CA77D767D%767D767D767DFFA8767C527C767C7DA87C7D7CA17C7DA8FD05FFA1527C52%7CA1A77CA17DA17D7C51525152517DA8A8A1A17CA17D7D7C76A876527C52%76527C7D7D767D767D76A1767C767D767C767D765251A87DA17CA17CA17C%A77D52515251525152A77C527C527CFFA87DA17CA17D525152515251A1A8%A87DA17D7D7CA17C52A17C5276527C52767D7D767D767D76A8FD05FF7D7D%767D76A87DA7A1A77DA7A1A7527C527DA7A77DA1A87D527D527C527DA87D%767C767D7CA87CA17CA17CA77D7D7C7D7C7D7C7D7CA1527C7CA77DA77DA1%7DA77DA8A87D5276527C52FF767D767D76CFA1A77DA7A1A77DA75276527D%A8A17DA7A87D7C7D5276527DA87D767D767C76CF7CA17CA17CA1A8FD05FF%A8767C527C7DA17DA17DA17DA17DA7A8A8A8A17CA17DA851765252517652%A8A8A87C7D7DFFA17D767D7C7DA8A8767C767D767C767DA87D51767DA17C%A17DA17CA17DA8FFA852525176CA7C527C767CA1A17DA17DA17DA17DA8A8%A7A8A17DA17CA852525176525251CAA8A7767D7DFFA87D7C7D767D7DFD06%FFA1A87C7D76A7A1A17DA7A1A17DA7A1A1A8A77DA17DA7A7765276527652%A17676527652767DA87C7D7CA1A17D52A17C7D767D7C7DA8FF7D7652767D%A87DA77DA8A8CAA87D767DA7A8A8A8A7A87D7D76CA7DA7A1A17DA7A1A17D%A7FFA77DA77DA1A77652765276527D527652765276A8FF7CA17C7D7CFD06%FFA1A77DA8A7A8A8A17DA17CA17DA17CA17DA87CA17CA17DFF5252515251%A851525152515251A77C7D767D7D76515252A87DA17DA77CA17DA8515251%527DFFA8CAA8A87C7C527C527C7DCA7DA77DA8A1FFA8A17CA17DA17CA17D%A17DA87CA17CA17DFF5252515251A851525152515251A8A87D767D76A8FD%05FFCAA8A1A8A1A8A1CAA1A77DA7A1A77DA7A1FFA8CAA7A8A1FFFFFF7D7D%7DA8CA7D5276527C5276A8A17CA17D7D5276527CA1FF7DA77DA17DA77D7D%527C5276FFA7767D767D767D767D76A8A1A8A1A8A1A8A7FFA1A7A1A77DA7%A1A77DFFA8A8A1A8A7FFFFFF7D7D7DA8FF7D527C5276527CA8A17CA17CA8%FD06FFA8A1A77DA7A1A77DA87DA17DA17DA17DFFA7A77DA8A1A77DA8A87D%517652A8A8A8A1A77DA87DA8767D7C7D51765252517D7DA17CA17DA17CA1%A1A17C7D7DFF527C767C527C767C527C7DA77DA7A1A77DA7A8CF7DA17DA1%7DA17DCAA7A8A1A77DA8A1A7A87D525251A8A8A8A1A8A1A77DA87C7D76A7%FD07FFA7A8A1A7A1A8A1A7A8CAA7A8A1A8A7A8A8FFA1A8A1A8A1A8A1A8A8%76527DFFA17DA7A1A17DA7A77D7DA152765276527652A77DA17DA77DA17D%A87C765276A87D767D767D767D767D76A8A1A7A1A8A1A7A1A8FFA8A1A8A7%A8A7CFFFFFA1A8A1A8A1A8A1A8A776527CFFA7A1A17DA7A1A1A7A17CA1FD%08FFA87DA77DA77DA77DCA5252515251525152A8A7A1A77DA7A1A77DCA52%7DA8FF7DA17CA17DA17CA1A87D51525152515251527DA17CA17CA17CA1A8%52515251A8767C527C527C527C527C7DA77DA77DA77DA77DCF7C76515251%525152A7A77DA7A1A77DA7A1A8527DA8FF7CA17DA17CA17DA8A1A8FD09FF%A8A8A1A8A1A8A1A8FFA85276527C527652A8A8A8A1A8A7A8A1CAFD05FFA8%7DA7A1A77DA7A1CF7D7C5276527C527C7CA87DA17DA77DA1A1FF5276527D%A8CA767D767D767D767D76FFA1A8A1A8A1A8A1A8CAA8527C5276527C527D%A8A8A7A8A1A8A7A8FD05FFCAA1A77DA7A1A8FD0CFFCA7DA7A1A77DA8A8A7%A1A87D76517652527DFFA8A8A1A8A1A8FFFFA17D767D7DA7A1A77DA17DA8%A8A87D7D767D7DA8A1A8A8A77DA17CA7A7FFA8A8A8FFA8CAA8A87C7D767C%52A17DA8A8A8A7A87DA7A1A7A1A8A17D767D525251767DFFA8A8A7A8A1CA%FFFF7DA87DA77DFD04A8FFA8A8A1A8A7A8A8FD07FFCAA7CAA8CA7DA7A1A1%7DA7A1A87DA87DCAA1A8A1A8A1A8A1CAA876527652765276A1FFCAA8A1A8%A1A7A1A8A87D767D767D767D7DA8FFA85276527DFFA77DA77DA17DA7A87D%7C7D52765276A8FFFFFFA1A17DA7A1A1A1FFFFCFA8FFA1A8A1A8A1A8A1CF%A876527652765276A8FFA8A8A1A7A1A8A1A7FD09FF7DA7A1A17CA17DA17C%A7FFA8527CA8A77DA7A1A77DA7A1A852525176527D7DA8FFCF7DA77DA77D%A77DA7527C527C527C527C527D7D52515252A87CA17CA17CA17CA8515251%5251525176A8FF7DA17DA17CA17DA1FFA85276A8A7A1A77DA7A1A77DCF52%525176767D52A8FFA77DA77DA77DA7A1FD08FF7CA17CCA7DA7A1A77DA7A7%A8527C52FFA1A8A7A8A1A8A7A8A8FFA8A8A1A7A1A7A8FFA8A8A1A8A1A8A1%A87D7D767D767D767D767D76A7527652A7A1A17DA77DA17DA7A176527C52%76527DA1A17CCAA1A77DA7A1A7A1CF527652FFA7A8A1A8A7A8A1A8CFFFA8%CAA7A77DA7A8FFA1A8A1A8A1A8A1CAFD07FF7C7D76A1A17D7DA8A1A8A8FF%7C52527DA8CFA7A8A1A77DA8A1CF7DA17DA17DA17DA1A8CFA1A77DA7A1A7%7DA1767C527C767C527C767C7D7D767D7DA77DA17CA17DA17CA852525176%52527D7D7CFD047DA8A1A8A8FF76765276A1FFA7A87DA8A1A77DFFA7A17D%A17DA17DA1A8A87DA7A1A77DA7A8FD06FF7DA17C7DA7A75276527652767C%FFA17D527CA8FFA8A77DA7A7FFA8A17DA7A1A17DA7A1A8FFA8A1A7A1A8A1%CA7D7D767D767D767D767D7CCA527652767CA77DA17DA77DA8FF7D527652%767D7D7CA17DA85276527652767DFFA17D527DA8FFA8A77DA8A8FFA8A7A1%A17DA7A1A17DA8CAA7A1A8A1A7A1FD06FF7D7D767D76FF52525152515251%7D52525152517DA8A17CA17CA1A8A17DA17CA17DA17CA17DFFFD04A87DA7%FFA1527C527C52A8A8FFA8A8A87D51525152A8A8A1A17D7D767D7D765152%7C7D767D76A8765251525152517D52525152517CA8A17CA17CA1A8A17CA1%7DA17CA17DA17CA87DA8A7A87DCAFD05FFA8A17CA17CA1FFA87D76527C52%A7527C5276527C52A87DA77DA1A1FFA1A77DA7A1A77DA7A1A7A87D767D7D%A8A8A17CA87D7D7DCAA7A87DA77DA1A1A8527652A8FFA77C7D7C7D7CFD04%7DA77CA17CA1CAA8767C527652A17C76527C527652A87DA17DA7A1FF7DA7%A1A77DA7A1A77DA77D7D767DA1A8FD05FFA87D7C7D767D7CFF7D7C527C7D%FFA152517652525176A1A17CA17DA87CA8A1A17DA17DA17DA17DA8527C76%7C7CA85252517CA1FFA1A17DA17CA17DA17CA752527DA8767C767D767C76%7DA8A7767D7C7D76A8A776527DA1FF7D765252517652527DA17DA17DA87D%A87DA17DA17DA17DA17DA1767C527CA8FD05FFA87CA17C7D7CA1A87C527C%767C52A87C76527DA1A8A8FFA1A1A1A8527652767DA77DA7A1A17DA7A87D%767D767DA8765276527652A8A1A77DA17DA77DA1A17C527D767D7C7D767D%7C7D76A87C7D7CA17C7D7D7C767C527C76A87676527D7D7DA1CA7DA7A1A8%527652767DA7A1A17DA7A1A17D7D767D76A8FD05FF7D7D767D767D76A852%76527C527652A87CA1527C527C52A17DA8525251525152527D7DA17DA1A8%CF527C527C52A7515251525152517D7DA17CA17CA17CA87D527D7C767D76%7C767D767C7D7D767D767D76A7527C5276527C52A8527D767C527C7C7D7D%CF52525152515251A17DA17CA1A8A1527C527C7DFD05FFCF7CA17CA17CA1%CA7D767D767C767DA8FF767D767D767D767D76A85276527C5276527DA8FF%A7A7FF7D767D767D7D7C5276527C5276527DA1A17DA77DA1FFFFA8A87D7D%7C7D7C7D7C7D7CA77CA17CA17CA1A8A1767C767D767CA8FF767D767D767D%767D76A8527C5276527C527DA8FFA8FFA77D767D76A7FD06FFA1767D7C7D%7CFFA8A7767C52767CFFA87C527C767C527C767C52A8525251765252517D%A87C52A8767C527C76CA7676525251765252517DA7A17CA1A8FF7D765276%7D7D767C767D767C7DA17C7D767D7CA8A8A77676527C7CFFA87C767C527C%767C527C76A8517652525176527DA87C7CA8527C767C7DFD07FFA8A1A8A8%A87C7C527D7CA8A8A87DA17D7D767D76A17DA1A1A8A8FF7D7D5276527652%A8767D7CA1767D767DFFFFA87D52767CA87D7D7DA8A7A8A8A75276527652%A8A8A17C7D767D7CA8A8A17C7D7CA87D76527D7DA8A8CFA1A17C7D767D76%7D7DA17DA8FFCF7D7C5276527652A8767DA87D767D7DCAFD09FFA8765276%517652767DA17C7D7CA1A8A8A8A77CA77DA77DA17CA17CA1525251527D7C%527CA1A8A8A15276527DA8A7A1FFA8A17DA17DA17DA17DA151525176A8FF%A8A1767C76A1A1A17DA8A8765176527651767D7D7CA17CA1A8CFA8A87DA7%A1A77DA17CA17DA1525251767D7C52FFA8A8527652A1FD09FF7C7C527C52%7C52A87DA17CA17DCAFFFF7DA17DA77DA17DA77DA17DA7A8A87C7D767D76%FF7D7C527C527C527C527DFFFFA1A7A1A7A1A7A1A7A8A8527DA17D767DA8%FFA7A8A8A17CA17DA8767C527C527C52A77CA17DA17CCFFFCF7DA77DA17D%A77DA17DA77DA17DA17D7D767DA87C527C527C52FD0AFF527652765276A8%A17C7D7CA17CFF7DA17DA17CA17DA17CA17DA17CFF7C7C527C767C7D7652%76527652765276A7FFCFA77DA17DA77DA17DA7A8A1527C767C527CA7FFA8%A17C7D7CA17C7D527652765276A87D7CA17C7D7CFFA1A17CA17DA17CA17D%A17CA17DFF7C7C767C527C527652765276A8FD09FFA15276527C52FFA1A1%7DA17CA1A8A17DA77DA17DA77DA17DA77DA1A17D767D767D76A1527C5276%527C527C7D7D52A1A8A7A1A77DA7A1A77DFF767D767D767D767D76A87CA1%7DA17CA17D7D527C527652FFA7A17CA17DA1A7A77DA17DA77DA17DA77DA1%7DA7A77D767D767D527C5276527C52FD0AFFA1765276517DFFFF7CA17C7D%7DA1A8A87CA17CA17CA17CA17CA1A1A8527C527C527C7C76517652765176%7D52515251A87DA17DA17DA17DA17D7C527C527C527C527CA17D7CA17C7D%7CA17D765176527CFFFF7C7D7CA17DA1A7A87DA17CA17CA17CA17CA17DA8%527C527C7D76517652765176A8FD0AFF527C76A7A7A8A8FF7DA77C7D767C%7CA8A7A87DA7A8A1527C527DFFA87D7D767D76A7527C527C527CA7FF527C%5276A7FFA1A7A1A7A1A7A87D767D767D767D767D76A87CA17DA17CA17DA7%527C76A1A1A8A8CA7CA87D7C767D7DA8A7A87DA7A7A75276527DFFA8767D%76CF527C527C527CA7FD0BFFCFA87D527C767C7DFF7D76527C5276527C52%A1A176525251767CCAA1A8A7A8767CA8765276527676FFFFA151767DA8A7%CAA8A87DA7A7A8527C767C527C767C52A1A87D7CA17C7D7CA17CA8A17D76%7C527C7CCA7D7C5276527C527652A8A7765176525276FFFFA87DA8CA7D52%76527676FD0CFFA87D767D767D767DA8A1767C527C767C527C7676527652%7652A77DA17DA77DA8A8FF7D76527C7CFFA8A8A8FFFFA77DA17DA77DA7A8%FFA8A87D7D767D767D7C7D7CA8A8A17CA17DA17CA1A17D767D767D767DCA%7D527C767C527C767C767C52765276527DA8A77DA17DA7CA7C527C7DFD0D%FF7C527C527C527C52A1767C5276527C527652A151525152517D7CA17CA1%7CA17CCF7DA7527D7DCA7C7C767D7CA17DA17CA17CA17CA17CA17CA17D7D%527C7C765152517DA17D7CA17DA77D7C527C527C527C52CF7C76527C5276%527C527D51525152517DA1A17CA17CA17CA87C7C7DFD0EFF767D767D767D%767D76A8767C767D767C767DFF76527C7DFFA1A77DA17DA77DA1A87C5276%52CF7C7D7C7D7C7D7C7D7DA17DA77DA17DA77DA17DA77DCFA87D5276527C%527676A8A8FFA87D767D767D767D767DA8A7767D767C767D767CA87C5276%52CFFFA17DA77DA17DA77D76527CA1FD0AFFA8A17DA8767C767C527C767C%7D7D76A77DA87D7C7DA87D7DA8FFA7A17CA17DA17CA17DA85176527D767D%767C767D767C767D7DA17CA17DA17CA17DA17CA17DA85176525251765252%517DFFA8527C767C527C767C52FF7D7C76A77DA77D7D7DFF7DA1A1A8A8CA%7DA17CA17DA17D7D525251FD0BFF7D767D76A17D7D767D767D7D7D767D7C%7D76CAFFA77DA7A1A7CAA87DA17DA77DA17DA8A8765276A17D767D7C7D76%7D7C7D76CAA1A17DA77DA17DA77DA17DA7A77652765276527652767DFFA8%7D767D767D767D76A7A17D7C7D767D7CA8FFFFA1A77DA7A1A7A1A77DA1A8%A8A8FF7C76527DFD0AFFA8527C527C527CA1A8FD047D767C767D767C7DA8%7DA17DA17DA7A1A17CA17CA17CA1A8FF515251FF767C767D767C767D767C%76FFA1A17CA17CA17CA17CA17CA77652515251525152527D527C7C7D527C%527C527CA17C767D767C767D7DFF7DA17DA17DA17DA17DCAA8525152A87D%51527DFD0AFF7D7D767D767D767D7CCAFFA87C7D7C7D7C7D7CA1A7A7A1A7%A1A7A1FF7DA17DA77DA1A1FFFF7D527DFFA77C7D7C7D7C7D7C7D7C7DA87D%7DA87DA17DA77DA17DA7A8FF767C5276527C7DFF767D767D76A77C7D767D%7D7D7C7D7C7D7C7D7CA1A8A7A1A7A1A7A1A7A1A7FFA1527C527DCA7C52FD%0AFFA87C767C527C767C527C76A87D7D767C767D767C7DA77DA17DA77DA1%A8A17DA17CA1A1A87CA1A8767DFFA87C767D767C767D767C76A7525252A8%A8A87DA7A1A77C7D7CA7767D527DA8FFA17C527C767C527D7DA8A87D767C%767D767C767D7DA87DA77DA17DA77DA17DFF5252517652CFA17DFD0AFFA8%767D767D767D767D767D7DA8767D7C7D767D7CCFA8A7A1A77DA7A1FFA1A7%7DA7A8A77DA17CA8FD04FF7D7D767D7C7D7DA7A7A87D7652767C7D7C7D76%7D7C7D767D7C7D767D7CFFFF7D767D767D767D767D7DCF767D7C7D767D7C%7D76CFA7A77DA7A1A77DA7A1A7A87652765276A8CF7CA8FD09FF7D7C527C%527C527C527C52A1CFA87DA77DA17DA7A8FF7DA17DA17DA7FFFF7DA7A87D%7CA17C7D7DFFA8FFFFFF767C767D527C527C527D7D7D7CA1767D767C767D%767C767D767C767DA8A8527C527C527C527C527CA17C767D7DA77DA77DA8%A8FF7DA17DA17DA17DA1A8A75152515251A87C7D7CA1FD08FFA1767D767D%767D767D767D7DFFA1A17DA17CA17DA1A7A7A1A7A1FD04A8FFA8A17CA17D%A17CCAA87652A7A8FFA8A1767D767D767D767DA8FFA77D7C7D7C7D7C7D7C%7D7C7D7C7D7CFFA77D767D767D767D767D76CAA1FFA7A17CA17DA17CA1A7%CFA1A7A1A7A1A7A8FF7C7C5276527C7DA17CA17DA8FD07FF7D7C527C767C%527C767C52A87D7D7CA17C7D7CA17C7DA8A87DA7767C76A8A8A17C7D7CA1%7C7DA77D525251767DA1527C767C527C767C527CA8FF767D767C767D767C%767D767C76A7FFA8527C767C527C767C527DFFFF7DA17C7D7CA17C7D7CA1%A8A87DA77DA87D7C7CA15176525251A87C7D7CA17CA1A8FD06FF767D767D%767D767D767DA1A17DA17CA17DA17CA17DA7A87D767D767DA7A17CA17DA1%7CA17DFF5276527652A1767D767D767D767D767D76A8FFFFA1A17C7D767D%7C7D767D7CA1FFFFA87D767D767D767D767D7DFFA8A17CA17DA17CA17DA1%7CA7FFA8A17D767D767D7D76527652767DA17DA17CA17DFD07FFA8527C52%7C527C527DA87D7CA17C7D7CA17C7D7CA17CA8527C527C7DA87C7D7CA17C%7D7CA1CFFF525251527D7C527C527C527C527C527C7DFF767D7DA87DA17D%A1A1A77DA8A8FFFFFF7D7C527C527C527C76A8A8A17C7D7CA17C7D7CA17C%7D7CA8527C527C527C52A851525152527D7CA17C7D7CA7FD08FFA87DA77D%7D7DCFFFCA7CA17DA17CA17DA17CA17DA1A77D767D7DFF7DA17CA17DA17C%A7FFFFA8A8A17DA8A1767D767D767D767D767D76FF7C7D7C7D7CFFFFFFCA%A8A1A8A1A7A1FFFFFF767D767D7DA8A8FFFFCF7DA17CA17DA17CA17DA17C%A17D7D767D767D76CFFFFF7D7C7CCF7CA17DA17CA1FD07FFA1A1A1A8A8FF%A8FFA8FFA87D7DA8A8A8A1A17C7D7CA17CA8A1A8A7A8A8A17C7D7CA17CA1%A7A17C7D7CA17CA8527C767C527C767C527C76A87D7D767C767D7CFFA8A7%7DA17DA77DA17DA8CFFFA8A87D7D7CA17DA8A8A17CA7A7A8A1A17CA17C7D%7CA87D7C527C7DA8A8FFA8CFA8FFA87D7CA17C7D7DFD07FFA17DA7A1A17D%A7A1A17DCFFF7C527C7DA7A1CAA8A8A8FFA87D7CA17CA87DA17DA17CA8FF%FF7CA17DA17CA1A77D767D767D767D767D76A8A87D767D7C7D76A8A8A7A1%A7A1A7A1A7A1A7A1A8FFFF7CA17DA17CA17DA1A1FF7C76527CA1CFA8CAA8%A8A1A87DA17CA17DA17CA17DA17DCF7DA17CA17DCAFD06FFCA7DA17CA17D%A17CA17DA17DA8515251525152515251527DA1767D767D7CA87CA17CA8FF%FFFF7D7CA17C7D7CA8527C527C527C527C52A1A87D767C767D767CA8A77D%A17DA77DA17DA77DA17DA7A87D7CA17C7D7CA17C7D7D525152515251FFA1%A17C7D7CA17C7D7CA17C7D7CA17CA8A1A17C7D7CA1A8FD06FFA8A77DA7A1%A77DA7A1A77DA75276527C5276527C5276527DA8A17CA17CA1A87D527D7D%CFFFFFA1A17DA17CA1A8A8767D767D767D7CA8FFA77C7D7C7D7C7D7CCAA1%A7A1A8A1A7A1A8A1A7A1A8A1A87CA17DA17CA17DA17D7D5276527C5276A1%A17DA17CA17DA17CA17DA17CA17DA1FFFF7DA17CA17DFD07FFCA7DA17DA1%7DA17DA17DA17D7D5252517652525176525251A77C7D767D7C7D7C765252%517CA8A87CA17DA8A7FFFFA87DA17DA8A8FFFF7D767D767C767D76A1A1A7%7DA17DA77DA17DA77DA17DA7A87D7CA17C7D7CA17CA85176525251767C7D%7CA17C7D7CA17C7D7CA17C7D7CA1A7A8A8A17C7D7CA7FD07FFA8A7A1A17D%A7A1A17DA7A1A1A176527652765276527652767CA17C7D7CA17CA8527652%765276A8FFFFFFA17D52FFFFCA7DA17C7DA8A87C7D767D7C7D7DA8FFA8A1%A7A1A7A1A7A1A7A1A7A1A7A8FF7DA17CA17DA17CA87D765276527652A87D%A17CA17DA17CA17DA77CA17DA1A1A17DA87CA17DA1A8FD08FF7DA17DA17C%A17DA17CA17DA87D765152515251525152517D767D767D767DA152515251%52527DA7CA76525152A8A8767D767D76A8FFA87DA17DA8A8FFFFFFA8A8A8%CAA8A8A7A8A7A87DA8A7A8A1A87C7D7CA17C7DA85251525152517CFFA87C%7D7CA17CA8A8FFFFA87CA1A1A77CA1A17D7CA17CCFFD09FFA7A8A8CAA8FF%A8CAA7A7A8FFFFFF7DA8A1A87DA8A1A8A8A17CA17CA17DFF527C5276A8FF%A1A17D7D527652A8A1A17CA17CA1A17D5276527C5276527C7DCAFFFFA7A1%7CA17CA17CA17CA17CA17DFFA7A8A7A8FFA85276527C52A8A8FFFFCAA1A8%A1A77C7D76A7A8FFFFFF7CA17DA1A1A17DA1FD09FFA1A77DA17DA77DA17D%A77DA17DFFA8A87D7D767C767D7DCF767D7C7D7CFFFF7D51767DA17CA17C%7D7D7652527CA77C7D767D7C7D5176525251765252517652A8A17D7C7D76%7D7C7D767D7C7D76A7A8A77DA77DA17DA87DA7A1A852527DFFA87D527C76%7C527C767CA8FFA87D7CA17CA87CA1A1FD08FFA8A7A1A7A1A7A1A7A1A7A1%A7A1A7A87D7C7D767D7C7D76A8FFFFA7A8A1A8A8FFFFA8A1A17DA17CA17D%A17D76527CA1A17C7D7CA17D765276527652765276527652A87CA17C7D7C%A17C7D7CA17C7DA8A7A1A7A1A7A1A7A1A8A8A7527652FFA87D767D767D76%7D767D767DFFCA7DA17CA1A8A17DFFFFCFFD06FFA87DA17DA77DA17DA77D%A17DA77DA1767D767C767D76A7A8A8767C527C527C7DFF7C7D7CA17C7D7C%A17CCA7D5251A8767D767D76A85252515251525152515251527D7D767D76%7D767D767D767D7CA77DA77DA17DA77DA17DA7A87C51A87D7C527C527C52%7C527C527C52FF7DA17C7D7CA8FFA8525251527DFD04FFA7A7A1A8A1A7A1%A8A1A7A1A8A1CA7D7D7C7D7C7D7CA8FFA1767D767D767D767DA8A17CA17D%A17CA17DA7FFCAA1A8A8A77CA17CA17DCA527C5276527C5276527C52A87C%A17CA17CA17CA17CA17CA8A1A8A1A7A1A8A1A7A1A8A1A8A8CFA77D767D76%7D767D767D767D767DFFA17DA17CA1A8A8527C5276527C7CFD04FF7DA17D%A77DA17DA77DA17DA8A87C767D767C76A1A87C527C767C527C767C52A87C%7D7CA17C7D7CA1A8A17CA17C7DA77D7C7D76A1FFA87DA87D7D5276525251%A8A87D767D7C7D767D7C7D7CA87DA17DA77DA17DA77DA17DA7A1FFA87C76%7C527C767C527C767C527C7CFF7CA17C7D7CA85252517652525176A8FD04%FFA7A7A1A7A1A7A1A7A1A7FFA87C7D767D7C7DA87D767D767D767D767D76%7D7DA17DA17CA17DA1A8A77DA17CA17DCA7CA8A77DA8A77DA17CA7A7CFA8%CFA8A8A8CFA87D7CA1A1A17CA7A7FFA8A7A1A7A1A7A1A7A1A7A1A7A1CAFF%7D767D767D767D767D767D767D76A8A8A17CA17DA17D7652765276527652%A8FD05FFA8A77DA77DA17DA8FFFFA87D767C767D7DA1527C527C527C527C%527C52A87DA17CA8A1CAA8A77CA17C7D7CA1A8FF527C76A87CA17C7D7CA1%7C7D7CA17C7D7CFFA8A1527C527C527DA8A87DA77DA17DA77DA17DA7A1A8%A8CF527C527C527C527C527C527C527CA8A17C7D7CA17C7D515251525152%51527DFD08FFA8A8A1CAA8A8A8CFA8A17C7D7DFF767D767D767D767D767D%767D7D7C52A7A8FFA8FF7CA17DA17CA17DFF767D767D7DA17DA17CA17DA1%7CA17DA17CA87D7D767D767D767D767DA8A8A1A7A1A8A8A8A7A87D7D7C7D%7D7D767D767D767D767D767D767D7DFF7DA17CA17DA17C7C5276527C5276%52FD08FFA87D767C767D767C767D7DA8A8FFA87C527C767C527C767C527C%7D5251765252517DA87D7CA17C7D7CA8767C527C76A87DA17C7D7CA17C7D%7CA17CA1767C767C527C767C527C767D7DA87D7D767D767C767D767C767D%767C527C767C527C767C527C76A87CA17C7D7CA17D765176525251765276%FD07FFA87D767D7C7D767D7C7D767D7C7DA8FF767D767D767D767D767D76%A852765276527652CA7DA17CA17DA7A87D767D7CA1A8FF7CA17DA17CA17D%A17CA17D7D767D767D767D767D767D76CA7D7D7C7D767D7C7D767D7C7D76%A1767D767D767D767D767D76A1CFA17CA17DA17CA852765276527652767D%FD07FFA7767C767D767C767D767C767D76A1FFA8527C527C527C527C52A8%A876515251525152A1A17C7D7CA1A8FF527D7DA17DA17DA87CA17C7D7CA1%7C7D7D7D527C527C527C527C527C527C7D7C767D767C767D767C767D767C%767D527C527C527C527C527CA8CAA77D7CA17C7DA15251525152515251FD%08FF7D7D7C7D7C7D7C7D7C7D7C7D7C7D7CFFA8A8767D767D767D7CA87DA1%A87C527C527652CA7DA17CA7527652FFA8A7A1A7A1A7A8A87DA17CA7A1A8%A8FF767D767D767D767D767D767D76A17C7D7C7D7C7D7C7D7C7D7C7D7C7D%A8A87C7D767D767D76A7A8A17C7DA8A77DA17CFF5276527C5276527DFD08%FF7D767C767D767C767D767C767D767C5276527DA8A87DA77DA1767C767D%A8525176527DA7A17CA151765252A8A77DA17DA77DA7A8A87C7C767D767C%7D7C767C527C767C527C767C527C7D7C767D767C767D767C767D767C76A8%7652A1FFA8A87DA17D7C767D767CA8A17CA1FF76525251765252A1FD08FF%7D7D7CA17C7D7C7D7CA77DA17DA8A77C52767DA1767D7C7D767D7C7D76A8%FFA852A8FFFF7CCA5276527652FF7DA7A1A77DA7A1A8767D7C7D767D7CA1%767D767D767D767D767D767D76CA7C7D767D7C7D767D7DA17DA77DA8A876%527CA87D7C7D767D7C7D767D7CA8CFCA7DFF7D765276527676FD07FFA876%525152517CA8CAA1A17CA17CA17CA7A17C51A8767C767D767C767D767C76%FFA75252FFFFFF7D52515251A8FFA17DA17DA17DA17D7C767D767C767D76%A7527C527C527C527C527C527DA87C5152517DA8A87DA77CA17CA17CA77D%7D51A8767D767C767D767C767D76FF7D5252A85152515251A8FD06FFA852%76527C5276527DA8A17DA77DA17DA77DA17DA8FFA77C7D7C7D7C7D7C7D7C%7DA87D527CA8FFFFA1527652A8A7A1A7A7A1A7A1A7A1A87C7D7C7D7C7D7C%A8FFA8767D767D767D767D767D7D7C5276527C527DA8A77DA17DA77DA17D%A77DA7FFA87C7D7C7D7C7D7C7D7C7DA8A15276A8A8527652A8FD06FFA851%7652525176525251A87DA17CA17DA17CA17DA17CA8A87C767D767C767D76%7C76A8525251A8FFFFA8A8A1A77CA17DFF7DA77DA17DA8A87C767D767C76%7D7D7C527D7D7D527C767C527C767651765252517652A77CA17DA17CA17D%A17CA17DA8A87D767C767D767C767D76A8517652A7FFFFA8A87CA1A1FD04%FFA17652765276527652767DA77DA17DA77DA17DA77DA17DA87D7D767D7C%7D767D7C7D7D7652767DA15276A1A77DA17DA7FFFFA1A7A1A87DCA7DA17C%7D7C7D7D7D767D767D76A1767D767D767D5276527652765276A1A77DA77D%A17DA77DA17DA77DA77D7D7C7D767D7C7D767D7D7652767DA17DA77DA17D%A7CAFFFFFFA8765251525152515251A8A8A17CA17CA17CA17CA17CA17CA7%767C767D767C767D767D5152517D7D5251A77CA17CA1A8A87C5251FF7D76%527C76FD057D527C527C527C527D527C527CA87651525152515251A8A8A1%7CA17CA17CA17CA17CA17CA1767D767C767D767C7D7D5152517D7CA17CA1%7CA17CFD07FFA85276527C52A17D7DA1A17DA77DA17DA77DA17DA77DA77C%7D7C7D7C7D7CFFA87D7D7DA8A8527DA1A77DA1A77D5276527C7D7C767D76%7C767D767C7D7D767D767D767D76FFA7A8A1A8A77D527C527652FD047DA7%7DA17DA77DA17DA77DA17DA8A7A17C7D7C7DA8FFA17D527DA8A17DA77DA1%7DCAFD09FF7D52527D767C527C76A77DCAA7A77CA17DA17CA17DFFA8A87C%7DA1A1527652767CFFA87D7DA77CA17D7651765252517D5276527C527652%7C52A8527C767C527C767C7DA17C7D7CA17C7D5276527D767C767C76A8A7%A8A1A77DA17CA17DA17DFFFFFFA1A8FFA85276527DFFFF7DA17CA17DA8FD%0BFFA87D767D767D767D767D7DFFA8A8A7CAA1A8A1A87D7DA8FFFFA8527C%5276527C76FFFFFFA8A1A1A852765276527C7D7C767C527C767C527DFF7D%767D767D767DA8A17CA17DA17CA17DFFA87D767D767D767D767D7DFFA7CA%A8A8A1A77DA77D7DA8FFFFFF5276527C52A8FFFFA8A8A8FD0DFFA1527C52%7C527C527C52A17DA17DA17DA8A8FF52525152A8FF5276517652765176A8%A1527C7DFF7D52515251A1A7A87DA17676527C52767DA1A77C527C527D76%767D7D7CA17C7D7CA1A1A1527C527C527C527C52A7A1A17DA17DA8A8FF52%525152A8FF5276527651767CFFA87C527CA7FD0CFF767D767D767D767D76%7DA8A7A1A7A1A7A1A7A87C5276527D7D7C527C527C527C52A8767D767DA7%FFA1A77DA87DA17DA77DA8A8A8767DA1A17DA1FFFFA87C527C52A17CA17D%A17CA17DA8767D767D767D767D767DA8A7A1A7A1A7A1A8A876527C527DA1%7C527C527C527CFFA7767D767DFD0CFF7C767C527C767C527CA1A17DA77D%A17DA77DA87D7652767D7652765276527652767D7C527C767D7DA17DA17C%A17DA17CA17DA17DCA7D7D7CA17CA8FF7D52765276527D7CA17C7D7CA17D%7C527C767C527C767C7DA77DA17DA77DA17DA87D5251767D765276527652%7652FF527C767C52FD0CFFA8A8767D767D767D76FFA1A77DA7A1A77DA7A1%FFA1A87D76527C5276527C52767CA8767D767DA8A17DA77DA17DA77DA17D%A77DA1A8A17DA17CA17DA87C7C5276527C7DA17CA17DA17CA8A8A8767D76%7D767D76FF7DA7A1A77DA7A1A77DFFA1A87D7C5276527C5276527DFF7D76%7D76A1FD0BFFA8CAA8A8527C527C7D7DA8A87DA17DA17DA17DA1A8FF7D76%527651765276517652CF7C7C527C7DFF7DA17CA17CA17CA17CA17CA17DFF%A7A17C7D7CA1A17651765276517C7D7D7CA17C7DA8CFA8A1527C527C767D%A8A87DA17DA17DA17DA1A8FFA1765176527651765276A8CF527C52A1CAFD%0AFFA87D7C7DA7CAA7FFA876527CA7A7A1A7A1A7A1A7A1CFFFFF7DA87D7C%527C52A8A8FFCFA7767D7D7C527D7DA77DA17DA77DA17DA77DCAFFFFA1A1%7CA17DA8527C527C527C52A8A8A17DA1A8A17C7DA8CAA7CAA87D527CA8A8%A1A7A1A7A1A7A1CFFFCA7DA1767C527C52A7A8FFA87D76A8FD0BFFA87D76%7C767D7CCAA8765252517652A8A1A77DA17DA8FFA876767DFFA8A87DA17D%7D767D7D7C7D76517652767DA8A8FFFD04A87DA77D7C52A17C7D7CA8A876%5276527676A77DA17DCAA87D767D767C7CFFA8525176525252A87DA17DA7%7DA7A8FF7D527DFFA8A87DA87D7D52FF767CA8FD0BFFCF767D7C7D767D7C%A8527652767DFFA8A77DCAA17652765276527652A7FFA1767D767D7DA876%A87D7652765276527CA8A1767D767D767D767D76A8A8FF7D7C7CA7A1A1A8%A17CA17C7D7CFF7C7D767D7C7D76CA767652767DCFA8A8A1CAA176527652%76527652A8FFA1767D767DA87D76FD0CFFA87C767D767C767D767D527DA8%FFA1A17CA17CA85252515251525152517D527C527C52A1A87DA8FF525251%52515251767D7C527C527C527C527C7DFF5276527C52767DCA767D767D76%7D7D7D767C767D767C76A1527DA8FFA7A17CA17CA7525251525152515251%7D7D7C527C52A8A8A8FD0DFF7C7D7C7D7C7D7C7D7CA87D7DCAA77DA17DA7%7DA77D7C5276527C527652A7767D767D7DFFA8A8A1A87D7C5276527C527D%A8A1767D767D767D76CAFF7C767D767C767DA1A17CA17CA17CA77C7D7C7D%7C7D7C7D7CA87DA7FFA17DA77DA17DA87C76527C5276527C52A1767D767D%A7FFA8A8A8FD0AFFA87C767D767C767D767C767652A87CA17DA17CA17DA7%7D765252517652A17D7C767C52A1A8A17DA17DA17D7D5252517676CA7DA8%A8A87DA77D7D517D7D76527C5276527D7D7D767D7C7D7D7D767C767D767C%767D765251A87DA17CA17DA17CA77D525176525251A17D7C527C76A77DA1%7DA17DCAFD09FF7C7D767D7C7D767D7CA852767DA17DA77DA17DA77DA7A8%A752765276A1A8767D767D7DA7A1A17DA7A1A17DA87D7C52CA7DA17DA77D%765276527652A8A87D527C767DA8A17C7D7CA17CCA767D7C7D767D7C7D7C%A852767DA77DA17DA77DA17DA8A8A1527652767DA8767D767D7DA17DA7A1%A1A7FD09FFA1767C767D767C76CFA85251527DA17CA17CA17CA17DA87DA8%7D5251A87D7D527C52A17CA17DA17CA17DA17CA7A8FF7CA17CA17C7D5152%515251527CA87DA17C7D7DFF767D767D76A8A77D767D767C767D76CAA852%51527DA17CA17CA17CA17CCFA1A87D5251A87D7D527C52A17DA17CA17DA7%FD07FFCFCFA8A87C7D7C7D7DA8A8FF527C5276A8CAA7A8A8FFFFA8767D76%7DA7FFA8A8A8CFA7A8A8A7A1A77DA7A1A77DA7A1CAA1A77DA17DA87D7652%7C52767D7D5276527C5276FFA17CA17CA87C7652A77C7D7C7D7DA8A8FF52%76527CA8CA7DA8A8FFA8A8767D767DA7FFFD04A8A1A7A8A77DA7A1A77DFD%06FFA87C527CA1FFA7A77DA17CA17D7D51765252A8CAFD047D767C527C76%7CA8A7A1A77DA7A1A7A1A17DA17DA17DA17DA1A8A17CA17DA1A8FF525251%767DA751765252517652A8767D7CA15276525252FFA1A77DA17DA17CA152%525176A8A87DA17D7D527C767C527CA8A77DA7A1A77DFF7DA17DA17DA1FD%06FF7D767D76A1FFA77DA77DA17DA7A1A1527652A8767D767D767D767D76%7D76A8A1A8A1A7A1A8A1CA7DA7A1A17DA7A1A1A8CAA7A8A1A8A8CFA8FF7D%A17D7DFFA8FD047D527DA17D7CA17D7652765276A8A77DA17DA77DA17DA1%527652A1767D767D767D767D767D76CAA1A7A1A8A1A7A8CAA1A17DA7FD07%FF527C527C7CA87CA17CA17CA17CA1A75251767D7C527C527C527C527C52%7CA1A77DA77DA77DA7A1A87CA17DA17CA7A8FF7DA7A1A77DA7A1A7A85251%5252CF7DA17CA17DA1A77D767D7D525152515251A77CA17CA17CA17CA1A1%52517C7D7C527C527C527C527C527CA1A77DA77DA77DA8FFCAA1A8A8FD07%FFCF767D76A1A8A17DA77DA17DA7A1A8527C527D7D7D767D767D767D767D%7CA8A1A8A1A8A1A8A1A8FFA8A1A17D7D52767DA8A7A8A1A8A7A8A1CA7D76%52FFA8A77DA7A1A77DA7A8A8A77C5276527C52767DA77DA17DA77DA17DCA%5276527D7D7D767D767D767D767D76A8A1A8A1A8A1A8A7A85276527C52A1%A8FD05FFA8767C527D7DA17CA17DA17CCA7D52517652FF7D7C767C527C76%7C52A8A1A77DA7A1A77DA7A8FF5176525251765276A8A8A1A77DA8A1A7A1%CAFD04A87DA17DA17DA17DFFFFA8517652525176527D7DA17DA17CA17DA8%7D76525252FF7D7C527C767C527C76A17DA7A1A77DA7A1A8517652525176%5276FD07FF7D7D76A8A8A8A1A8A1A8FFA87DA8A1A8A8A8A1A87DA77DA17D%A8FFFFA8A8A1A8A1A8A1CAA87D52765276527DA8FFA7A8A1A8A1A8A8FFA8%FF7D7652A7A7A17DA7A8CAA7CAFFA8767D7DA8A8FFFFFFA8A8A1A8A1A8FF%A87CA77DA8A1A8A1A77DA17DA17DA1FFCFA7A8A1A7A1FFFFA85276527652%767DFD04FFA8A77DA87D7DA8FFFFFFA8A87DA77DA8A87D527C527C527C52%A8FD04FFA8FFA8A77DA17CA17CA17D7D7DFFA17C517DFFFF7DA8A7A8A1A1%7DA1A77D515252FFA8A87DA7A1A77DFF7C5251525152517C7DFFFFCFA1A7%7DA7A1A8A87C527C527C527C52A1A8A7527C52FF7CA17CA17CA7A8A852A1%A8A8A8FD05FF7C527C5276527C7DFFA1A8A1A8A1A8A1A8767D767D767D76%7D76FF7D7D527CA8A87DA77DA17DA77DA1527C5276527C52FFA8A7A1A77D%A7A1A77DCF7D76527DA8A8A1A8A7A8A1A8CA76527C5276527C5276A7FFA1%A8A1A8A1A8A1A8767D767D767D767D76A8527C5276A8A77DA17DA77DA17D%7D767DA7FD06FF525251765252517CA7A77DA7A1A77DA77C7C527C767C52%7C767CA176525251CA7DA17CA17DA17CA17D525176525251767DFF7DA17D%A17DA17DA1A87D525251A8A1A77DA8A1A77DFF525251765252517C7CA77D%A7A1A77DA7A1A7767C767C527C767C527C7D52517652FF7CA17DA17CA17D%A17D7C767C7DFD06FFA8A77C7D7DA1FFA8A1A7A1A8A1A7A77D767D767D76%7D767D76A852765276A8A77DA17DA77DA17DA852765276527676A87CA77D%A7A1A17DA7A1FF52765276A8A8A1A8A1A8A1A8A7FFA8A8A1A8A7A8A7FFFF%A7A1A8A1A7A1A8A17D767D767D767D767D76A152765276CAA17DA77DA17D%A77DFF767D767DA1FD07FFA87DA1A1FF7DA77DA77DA77DA8527C527C527C%527C527CA1A1527D7DA87CA17CA17CA17CA17D525152515252A1767D7DA7%7DA8A1A77DCAFF52515251A87DA7A1A77DA7A1A7A8A77DA17CA17DA1A1FF%7DA77DA77DA77DA8527C527C527C527C527C7CA87C7D7DFF7CA17CA17CA1%7CA1A87C527C527CFD06FFA87DA7A1A7A8CFA1A8A1A8A1A8A87D767D767D%767D767D76CA7D7C527652A77DA17DA77DA1A1FF5276527C52A87CA17CA8%527C5276527C7CFFA8A87DA8CAFFFFA8A1A8A8CACAA8A1A77DA7A1A77DA7%CFCAA1A8A1A8A1A8A87D767D767D767D767D76CA7D76527C52A77DA77DA1%7DA7A7FF767D767D7DFD06FF7DA17DA17DA7CFA8A7A87DA7A7CA527C767C%527DA7CAA8CAA8A8527652527DA87DA17CA77DA17D7D525251A87C7D767D%A852517652525176A77D51765276FFA87DA17CA17DA87DA17DA17DA17DA1%7DA8FFA8A1A8A1A7A7FF767C527C767C7DA87DA8A8FF525251767DA77CA1%7DA17DA1A7A8527C7DFD07FFA7A1A17DA7A1A1767D7DA8A1FFA1A87D7D76%A7A8CAA1A77DA7A1A85276527DFFFF7C7D767D7C7D7C7D52A87CA17C7D7D%FF5276527652767D7C5276527652A87DA77DA17DCAA7A17DA7A1A17DA7A1%A1A1A7767D7DA8A1FF7DA87D7D76A7A8CAA7A77DA1A1CA5276527DFFFF7C%7D7C7D767D7DFD0AFF7CA17DA17CA17D7C527C52A8765251527DFFA8A17C%A17CA17CA17CA1525251FF7C7D767C767D767C76FF7C7D767D767DA8A17C%7D7DA8A852515251525152A7A17CA17CA87DA8A1A17CA17DA17CA17DA152%7C527C52A87C5251767DFFA8A17CA17CA17CA17CA7525251FF7D7C767D76%7C767D7CFD09FFA8A1A77DA7A7A1767D767DA7A15276527C52A8A7A77DA1%7DA77DA17DA852767D7D7C7D7C7D7C7D7C7DA7A17CA17CA17DA1767C767D%76A8767C5276527C52CFA1A77DA87D7C52767DA8A1A77DA7A1A7A77D767D%767DA87D527C527652A8A8A17DA77DA17DA77DA7527C7D7D7C7D7C7D7C7D%7C7DFD09FFA8A77DA17DA87D7C527C76A7527652525176527DA1A17DA17C%A17DA1A876527D767D767C767D767C76A17C7D767D7CA1767C5276527C52%7D52767C7D7C7D7DA7A1A8A8525176525252A17DA17DA17DFF767C767C52%A8525251765252517DA1A17CA17DA17CA1A852517D767C767D767C767D76%FD0CFFCAFFFFA8767D767D7D76527652765276527CA1A77DA17DA7A1FFA8%FFA87D767D7C7D767D7C7D7CA17C7D7CA17CA8527C767C527C76FFA17D76%7D767D767D76A17D7652765276527CA8CAA8FFFFA1767D767D7D76527652%765276527DA7A17DA77DA17DFFA8FFA17D7C7D767D7C7D767DFD0FFFA17C%527C52A17D525152515251525152A7A17CA17CFFA87D51527D7C767D767C%767D76A7767D767D767DFFA8527C527652A7FF7D527C527C527C527C52A8%5252515251525152A8FFFFFF767C527C527D7D525152515251525176A7A1%7CA17DCFA87D51527D7D767C767D767C76CFFD0FFF767D767DA7FFCAA752%7652FD047DFFFFCFA8FF7D76527C527DA8A17C7D7C7D7C7DFFA77CA17CA1%A8FFFFFFA8A8A1FFFFFFA17D767D767D767D76A7A7FF7D7C5276527C527D%FFFFFF7D767D767D7DFFA8A1527C527D7C7D7DFFFFCFA8FF7D7C5276527D%CF7D7C7D7C7D7C7DFD0FFFA8A7A1CAA8FD04FFA87DCFFD08FFA8A8525251%7676FFA8A8767C767DA1FFFFFFA8CFA8FD0BFFA8A8A1A8A8FD08FFCA7D52%51767DFFFFFF7DA7A1CAA8FD04FFA87CCAFD09FFA75276525252FFFFA176%7D767C7DFD26FF52767DFD05FF7DA1A1FD21FFA87D7DFD1BFF52767DFD05%FF7DA1A1FD28FFA8FD49FFA8FD0EFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:tiff="http://ns.adobe.com/tiff/1.0/">
         <tiff:Make>NIKON CORPORATION</tiff:Make>
         <tiff:Model>NIKON D90</tiff:Model>
         <tiff:XResolution>1000000/10000</tiff:XResolution>
         <tiff:YResolution>1000000/10000</tiff:YResolution>
         <tiff:ResolutionUnit>2</tiff:ResolutionUnit>
         <tiff:NativeDigest>256,257,258,259,262,274,277,284,530,531,282,283,296,301,318,319,529,532,306,270,271,272,305,315,33432;B43D718179A04BF4102DE8045297CE84</tiff:NativeDigest>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:exif="http://ns.adobe.com/exif/1.0/">
         <exif:ExifVersion>0221</exif:ExifVersion>
         <exif:ExposureTime>1/160</exif:ExposureTime>
         <exif:ShutterSpeedValue>7321928/1000000</exif:ShutterSpeedValue>
         <exif:FNumber>38/10</exif:FNumber>
         <exif:ApertureValue>3851999/1000000</exif:ApertureValue>
         <exif:ExposureProgram>4</exif:ExposureProgram>
         <exif:DateTimeOriginal>2015-01-01T17:07:01.00+02:00</exif:DateTimeOriginal>
         <exif:DateTimeDigitized>2015-01-01T17:07:01.00+02:00</exif:DateTimeDigitized>
         <exif:ExposureBiasValue>0/6</exif:ExposureBiasValue>
         <exif:MaxApertureValue>38/10</exif:MaxApertureValue>
         <exif:SubjectDistance>282/100</exif:SubjectDistance>
         <exif:MeteringMode>5</exif:MeteringMode>
         <exif:LightSource>10</exif:LightSource>
         <exif:FocalLength>220/10</exif:FocalLength>
         <exif:SensingMethod>2</exif:SensingMethod>
         <exif:FileSource>3</exif:FileSource>
         <exif:SceneType>1</exif:SceneType>
         <exif:FocalLengthIn35mmFilm>33</exif:FocalLengthIn35mmFilm>
         <exif:CustomRendered>0</exif:CustomRendered>
         <exif:ExposureMode>0</exif:ExposureMode>
         <exif:WhiteBalance>1</exif:WhiteBalance>
         <exif:SceneCaptureType>0</exif:SceneCaptureType>
         <exif:GainControl>2</exif:GainControl>
         <exif:Contrast>0</exif:Contrast>
         <exif:Saturation>0</exif:Saturation>
         <exif:Sharpness>0</exif:Sharpness>
         <exif:SubjectDistanceRange>0</exif:SubjectDistanceRange>
         <exif:DigitalZoomRatio>1/1</exif:DigitalZoomRatio>
         <exif:PixelXDimension>1570</exif:PixelXDimension>
         <exif:PixelYDimension>967</exif:PixelYDimension>
         <exif:ColorSpace>65535</exif:ColorSpace>
         <exif:NativeDigest>36864,40960,40961,37121,37122,40962,40963,37510,40964,36867,36868,33434,33437,34850,34852,34855,34856,37377,37378,37379,37380,37381,37382,37383,37384,37385,37386,37396,41483,41484,41486,41487,41488,41492,41493,41495,41728,41729,41730,41985,41986,41987,41988,41989,41990,41991,41992,41993,41994,41995,41996,42016,0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,22,23,24,25,26,27,28,30;176D370236AB240DF4AE2D70A8BBB789</exif:NativeDigest>
         <exif:ISOSpeedRatings>
            <rdf:Seq>
               <rdf:li>1800</rdf:li>
            </rdf:Seq>
         </exif:ISOSpeedRatings>
         <exif:Flash rdf:parseType="Resource">
            <exif:Fired>False</exif:Fired>
            <exif:Return>0</exif:Return>
            <exif:Mode>0</exif:Mode>
            <exif:Function>False</exif:Function>
            <exif:RedEyeMode>False</exif:RedEyeMode>
         </exif:Flash>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:ModifyDate>2015-02-03T22:20:11+02:00</xmp:ModifyDate>
         <xmp:CreateDate>2015-02-03T22:20:11+02:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:Rating>0</xmp:Rating>
         <xmp:MetadataDate>2015-02-03T22:20:11+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>248</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAD4AwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qlOv+a/L+gRq+q3iW&#xA;5k3jioXkangiBmp70pgMgEiJKJ0fWtK1myW90y5W5tmJHNaggjqGVgGU+xGINqRSNwodiqH1G9js&#xA;dPur2QVjtYnmcDusalj+rEqHzW3mXXP0xNq8d5LDfzsWkljYqaH9n/VHQDMbiN25NCqT21/NjzvA&#xA;vFr1Jx29WKMkfSoU4fEKOAPVvy48yap5g0B77URGJkneFTEpUMqqpqQSd6semXQNhpmKLKckxQWs&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:aux="http://ns.adobe.com/exif/1.0/aux/">
         <aux:SerialNumber>6959034</aux:SerialNumber>
         <aux:LensInfo>180/10 1050/10 35/10 56/10</aux:LensInfo>
         <aux:Lens>18.0-105.0 mm f/3.5-5.6</aux:Lens>
         <aux:LensID>158</aux:LensID>
         <aux:ImageNumber>14607</aux:ImageNumber>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:crs="http://ns.adobe.com/camera-raw-settings/1.0/">
         <crs:RawFileName>DSC_0165.NEF</crs:RawFileName>
         <crs:Version>5.7</crs:Version>
         <crs:ProcessVersion>5.0</crs:ProcessVersion>
         <crs:WhiteBalance>Auto</crs:WhiteBalance>
         <crs:Temperature>4450</crs:Temperature>
         <crs:Tint>0</crs:Tint>
         <crs:Exposure>0.00</crs:Exposure>
         <crs:Shadows>5</crs:Shadows>
         <crs:Brightness>+50</crs:Brightness>
         <crs:Contrast>+25</crs:Contrast>
         <crs:Saturation>0</crs:Saturation>
         <crs:Sharpness>25</crs:Sharpness>
         <crs:LuminanceSmoothing>0</crs:LuminanceSmoothing>
         <crs:ColorNoiseReduction>25</crs:ColorNoiseReduction>
         <crs:ChromaticAberrationR>0</crs:ChromaticAberrationR>
         <crs:ChromaticAberrationB>0</crs:ChromaticAberrationB>
         <crs:VignetteAmount>0</crs:VignetteAmount>
         <crs:ShadowTint>0</crs:ShadowTint>
         <crs:RedHue>0</crs:RedHue>
         <crs:RedSaturation>0</crs:RedSaturation>
         <crs:GreenHue>0</crs:GreenHue>
         <crs:GreenSaturation>0</crs:GreenSaturation>
         <crs:BlueHue>0</crs:BlueHue>
         <crs:BlueSaturation>0</crs:BlueSaturation>
         <crs:FillLight>0</crs:FillLight>
         <crs:Vibrance>0</crs:Vibrance>
         <crs:HighlightRecovery>0</crs:HighlightRecovery>
         <crs:Clarity>0</crs:Clarity>
         <crs:Defringe>0</crs:Defringe>
         <crs:HueAdjustmentRed>0</crs:HueAdjustmentRed>
         <crs:HueAdjustmentOrange>0</crs:HueAdjustmentOrange>
         <crs:HueAdjustmentYellow>0</crs:HueAdjustmentYellow>
         <crs:HueAdjustmentGreen>0</crs:HueAdjustmentGreen>
         <crs:HueAdjustmentAqua>0</crs:HueAdjustmentAqua>
         <crs:HueAdjustmentBlue>0</crs:HueAdjustmentBlue>
         <crs:HueAdjustmentPurple>0</crs:HueAdjustmentPurple>
         <crs:HueAdjustmentMagenta>0</crs:HueAdjustmentMagenta>
         <crs:SaturationAdjustmentRed>0</crs:SaturationAdjustmentRed>
         <crs:SaturationAdjustmentOrange>0</crs:SaturationAdjustmentOrange>
         <crs:SaturationAdjustmentYellow>0</crs:SaturationAdjustmentYellow>
         <crs:SaturationAdjustmentGreen>0</crs:SaturationAdjustmentGreen>
         <crs:SaturationAdjustmentAqua>0</crs:SaturationAdjustmentAqua>
         <crs:SaturationAdjustmentBlue>0</crs:SaturationAdjustmentBlue>
         <crs:SaturationAdjustmentPurple>0</crs:SaturationAdjustmentPurple>
         <crs:SaturationAdjustmentMagenta>0</crs:SaturationAdjustmentMagenta>
         <crs:LuminanceAdjustmentRed>0</crs:LuminanceAdjustmentRed>
         <crs:LuminanceAdjustmentOrange>0</crs:LuminanceAdjustmentOrange>
         <crs:LuminanceAdjustmentYellow>0</crs:LuminanceAdjustmentYellow>
         <crs:LuminanceAdjustmentGreen>0</crs:LuminanceAdjustmentGreen>
         <crs:LuminanceAdjustmentAqua>0</crs:LuminanceAdjustmentAqua>
         <crs:LuminanceAdjustmentBlue>0</crs:LuminanceAdjustmentBlue>
         <crs:LuminanceAdjustmentPurple>0</crs:LuminanceAdjustmentPurple>
         <crs:LuminanceAdjustmentMagenta>0</crs:LuminanceAdjustmentMagenta>
         <crs:SplitToningShadowHue>0</crs:SplitToningShadowHue>
         <crs:SplitToningShadowSaturation>0</crs:SplitToningShadowSaturation>
         <crs:SplitToningHighlightHue>0</crs:SplitToningHighlightHue>
         <crs:SplitToningHighlightSaturation>0</crs:SplitToningHighlightSaturation>
         <crs:SplitToningBalance>0</crs:SplitToningBalance>
         <crs:ParametricShadows>0</crs:ParametricShadows>
         <crs:ParametricDarks>0</crs:ParametricDarks>
         <crs:ParametricLights>0</crs:ParametricLights>
         <crs:ParametricHighlights>0</crs:ParametricHighlights>
         <crs:ParametricShadowSplit>25</crs:ParametricShadowSplit>
         <crs:ParametricMidtoneSplit>50</crs:ParametricMidtoneSplit>
         <crs:ParametricHighlightSplit>75</crs:ParametricHighlightSplit>
         <crs:SharpenRadius>+1.0</crs:SharpenRadius>
         <crs:SharpenDetail>25</crs:SharpenDetail>
         <crs:SharpenEdgeMasking>0</crs:SharpenEdgeMasking>
         <crs:PostCropVignetteAmount>0</crs:PostCropVignetteAmount>
         <crs:GrainAmount>0</crs:GrainAmount>
         <crs:ConvertToGrayscale>False</crs:ConvertToGrayscale>
         <crs:ToneCurveName>Medium Contrast</crs:ToneCurveName>
         <crs:CameraProfile>Adobe Standard</crs:CameraProfile>
         <crs:CameraProfileDigest>B7B8C440442EB398B6EDDACCED96AAB3</crs:CameraProfileDigest>
         <crs:HasSettings>True</crs:HasSettings>
         <crs:HasCrop>False</crs:HasCrop>
         <crs:AlreadyApplied>True</crs:AlreadyApplied>
         <crs:ToneCurve>
            <rdf:Seq>
               <rdf:li>0, 0</rdf:li>
               <rdf:li>32, 22</rdf:li>
               <rdf:li>64, 56</rdf:li>
               <rdf:li>128, 128</rdf:li>
               <rdf:li>192, 196</rdf:li>
               <rdf:li>255, 255</rdf:li>
            </rdf:Seq>
         </crs:ToneCurve>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:photoshop="http://ns.adobe.com/photoshop/1.0/">
         <photoshop:SidecarForExtension>NEF</photoshop:SidecarForExtension>
         <photoshop:ColorMode>3</photoshop:ColorMode>
         <photoshop:ICCProfile>Adobe RGB (1998)</photoshop:ICCProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">wall-stone-grey</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xmpMM:InstanceID>xmp.iid:73DD19F733206811994CD4BF6590B37A</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:73DD19F733206811994CD4BF6590B37A</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>xmp.did:4062599F0C2068118462CA0EAFF0E139</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4062599F0C2068118462CA0EAFF0E139</stEvt:instanceID>
                  <stEvt:when>2015-01-03T01:59:09+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Photoshop CS4 Macintosh</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from image/tiff to image/jpeg</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>derived</stEvt:action>
                  <stEvt:parameters>converted from image/tiff to image/jpeg</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4162599F0C2068118462CA0EAFF0E139</stEvt:instanceID>
                  <stEvt:when>2015-01-03T01:59:09+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Photoshop CS4 Macintosh</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4262599F0C2068118462CA0EAFF0E139</stEvt:instanceID>
                  <stEvt:when>2015-01-03T02:01:51+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Photoshop CS4 Macintosh</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4362599F0C2068118462CA0EAFF0E139</stEvt:instanceID>
                  <stEvt:when>2015-01-03T02:01:51+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Photoshop CS4 Macintosh</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:04801174072068118A6DC6EF2A4213D7</stEvt:instanceID>
                  <stEvt:when>2015-01-03T02:54:34+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:05801174072068118A6DC6EF2A4213D7</stEvt:instanceID>
                  <stEvt:when>2015-01-03T02:55:36+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:06801174072068118A6DC6EF2A4213D7</stEvt:instanceID>
                  <stEvt:when>2015-01-03T02:56:19+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:07801174072068118A6DC6EF2A4213D7</stEvt:instanceID>
                  <stEvt:when>2015-01-03T02:56:32+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:08801174072068118A6DC6EF2A4213D7</stEvt:instanceID>
                  <stEvt:when>2015-01-03T02:57+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0A801174072068118A6DC6EF2A4213D7</stEvt:instanceID>
                  <stEvt:when>2015-01-03T03:02:09+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7078990E182268118A6DC6EF2A4213D7</stEvt:instanceID>
                  <stEvt:when>2015-01-03T03:03:26+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7278990E182268118A6DC6EF2A4213D7</stEvt:instanceID>
                  <stEvt:when>2015-01-03T03:04:53+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7478990E182268118A6DC6EF2A4213D7</stEvt:instanceID>
                  <stEvt:when>2015-01-03T03:06:07+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7578990E182268118A6DC6EF2A4213D7</stEvt:instanceID>
                  <stEvt:when>2015-01-03T03:08:01+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7678990E182268118A6DC6EF2A4213D7</stEvt:instanceID>
                  <stEvt:when>2015-01-03T03:15:18+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7878990E182268118A6DC6EF2A4213D7</stEvt:instanceID>
                  <stEvt:when>2015-01-03T20:32:55+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:98DB9473252268118A6DC6EF2A4213D7</stEvt:instanceID>
                  <stEvt:when>2015-01-03T20:40:50+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F67F117407206811994CD4BF6590B37A</stEvt:instanceID>
                  <stEvt:when>2015-02-03T22:17:54+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:72DD19F733206811994CD4BF6590B37A</stEvt:instanceID>
                  <stEvt:when>2015-02-03T22:19:25+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:73DD19F733206811994CD4BF6590B37A</stEvt:instanceID>
                  <stEvt:when>2015-02-03T22:20:11+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:72DD19F733206811994CD4BF6590B37A</stRef:instanceID>
            <stRef:documentID>xmp.did:72DD19F733206811994CD4BF6590B37A</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:4062599F0C2068118462CA0EAFF0E139</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1170.760254</stDim:w>
            <stDim:h>1209.910156</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1209.91 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1209.91 li
1170.76 1209.91 li
1170.76 0 li
cp
clp
[1 0 0 1 0 0 ]ct
697.868 836.047 mo
721.52 837.202 724.252 819.374 731.175 797.419 cv
734.636 785.286 742.135 775.465 742.712 762.753 cv
743.29 750.045 738.098 739.066 731.175 728.667 cv
721.944 713.645 716.177 709.023 699.447 710.757 cv
683.871 711.911 671.756 706.712 657.334 713.645 cv
643.489 720 627.913 723.469 620.991 738.487 cv
616.375 748.889 614.646 765.644 615.799 777.197 cv
617.53 794.53 637.144 803.197 651.565 807.819 cv
661.373 811.286 667.718 815.908 675.218 822.841 cv
682.717 829.195 688.26 832.851 695.183 836.317 cv
697.868 836.047 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.545098 .498039 .443137 rgb
f
679.602 845.194 mo
677.722 854.88 639.471 881.201 617.55 866.178 cv
601.397 855.201 586.954 815.908 614.068 805.509 cv
631.375 799.152 675.303 815.871 680.944 836.584 cv
679.602 845.194 li
cp
f
614.021 789.742 mo
611.713 783.387 612.117 776.167 609.81 768.657 cv
606.925 760.568 600.996 761.575 591.766 765.043 cv
584.843 766.774 585.224 765.594 577.725 766.173 cv
571.379 766.749 565.034 765.594 558.688 766.173 cv
551.188 766.749 545.997 767.327 539.65 772.527 cv
531.575 778.304 531.575 780.614 533.882 789.282 cv
535.036 796.215 535.612 812.969 540.227 817.591 cv
547.15 823.946 555.444 818.729 564.098 820.464 cv
575.058 823.351 582.008 829.755 592.968 821.667 cv
599.314 817.046 615.174 792.63 614.021 789.742 cv
cp
.580392 .529412 .470588 rgb
f
602.457 756.349 mo
612.904 751.367 635.674 713.236 630.261 707.815 cv
622.079 699.623 600.2 709.269 588.157 709.623 cv
570.274 709.623 520.54 686.441 510.155 708.974 cv
504.964 719.374 513.617 729.774 518.232 739.018 cv
524.578 751.15 529.77 761.549 544.193 763.859 cv
566.113 767.905 602.457 756.349 602.457 756.349 cv
cp
.647059 .592157 .52549 rgb
f
544.073 1044.73 mo
553.591 1040.75 559.03 1033.98 553.591 1025.62 cv
546.792 1015.67 548.152 1008.11 532.742 1008.5 cv
518.691 1008.5 479.712 996.565 471.553 1012.09 cv
467.476 1019.25 474.273 1026.42 477.9 1032.79 cv
482.886 1041.14 486.964 1048.31 498.296 1049.9 cv
515.519 1052.69 544.073 1044.73 544.073 1044.73 cv
cp
.756863 .713726 .658824 rgb
f
652.009 708.99 mo
642.78 711.3 634.126 704.946 632.395 695.703 cv
630.437 684.594 627.045 668.638 629.51 658.147 cv
634.126 636.194 687.199 641.394 703.928 641.971 cv
717.197 642.548 731.618 637.926 744.887 639.082 cv
761.04 640.238 751.232 658.725 747.194 668.548 cv
740.849 684.146 729.312 697.436 713.158 703.212 cv
697.005 709.567 682.007 704.946 665.854 707.257 cv
658.354 707.833 651.433 711.878 645.086 708.412 cv
652.009 708.99 li
cp
.615686 .560784 .498039 rgb
f
764.268 1012.63 mo
769.054 1008.96 769.325 1002.15 765.432 997.646 cv
761.256 992.911 753.758 984.123 747.986 981.392 cv
735.298 975.017 716.923 1003.41 710.607 1011.95 cv
705.656 1018.76 697.675 1024.1 693.01 1031.14 cv
687.207 1039.61 700.227 1042.04 706.681 1043.91 cv
716.906 1046.92 728.037 1046.44 737.271 1040.7 cv
746.792 1035.19 763.483 1045.71 771.002 1038.6 cv
774.249 1035.11 765.924 1013.48 766.713 1008.96 cv
764.268 1012.63 li
cp
.443137 .411765 .372549 rgb
f
745.876 757.468 mo
751.067 743.023 745.059 748.496 756.595 736.363 cv
768.134 724.23 786.595 729.429 801.591 727.118 cv
818.9 724.808 840.067 713.144 857.375 720.075 cv
867.756 724.121 867.146 735.95 875.223 744.038 cv
882.145 750.974 887.716 774.969 877.909 779.013 cv
872.716 780.747 862.742 781.427 856.972 781.427 cv
850.626 781.427 843.705 781.427 836.783 781.427 cv
820.053 781.427 817.639 786.85 800.909 787.427 cv
795.718 787.427 781.924 779.317 776.732 779.895 cv
771.541 780.472 762.441 778.114 758.366 780.889 cv
755.639 782.747 749.724 784.567 748.569 784.567 cv
744.897 785.672 740.962 780.355 743.917 773.9 cv
745.876 757.468 li
cp
.580392 .529412 .470588 rgb
f
768.786 849.499 mo
763.593 846.611 758.407 850.224 751.485 846.179 cv
739.948 839.248 727.255 831.158 728.409 816.714 cv
730.14 792.449 769.368 770.494 788.981 788.404 cv
801.672 799.382 813.209 812.671 803.98 829.425 cv
797.635 840.401 782.054 853.852 768.786 849.229 cv
768.786 849.499 li
cp
.443137 .411765 .372549 rgb
f
966.46 893.021 mo
963.504 891.378 960.552 893.434 956.611 891.133 cv
950.044 887.188 942.82 882.583 943.477 874.359 cv
944.462 860.548 966.792 848.051 977.958 858.245 cv
985.18 864.492 991.75 872.058 986.495 881.596 cv
982.882 887.845 974.013 895.499 966.46 892.869 cv
966.46 893.021 li
cp
f
745.9 733.058 mo
735.423 743.078 736.518 727.017 733.012 718.823 cv
728.397 709.001 738.828 690.607 744.02 681.94 cv
753.828 666.921 763.587 653.537 782.046 651.226 cv
794.162 650.07 809.161 652.38 820.122 657.001 cv
832.813 661.625 854.733 667.981 857.042 681.846 cv
860.503 702.067 853.615 709.792 838.039 715.568 cv
825.347 719.614 802.149 721.988 788.881 722.563 cv
777.342 723.143 780.255 726.651 763.446 728.955 cv
758.59 729.621 746.208 731.552 745.632 733.864 cv
745.9 733.058 li
cp
.729412 .678431 .615686 rgb
f
612.723 701.741 mo
621.512 702.318 625.163 689.095 624.688 679.796 cv
623.37 653.926 607.189 648.862 596.204 645.397 cv
584.669 641.932 568.74 642.508 556.656 642.508 cv
545.122 642.508 525.897 639.043 514.912 644.819 cv
500.082 652.331 508.87 668.507 514.362 678.907 cv
522.052 693.928 527.545 692.772 542.924 693.351 cv
557.206 693.928 570.937 696.239 584.669 699.705 cv
592.909 702.016 605.767 707.454 612.907 701.676 cv
612.723 701.741 li
cp
.443137 .411765 .372549 rgb
f
589.262 863.843 mo
597.916 854.023 593.634 844.467 597.096 832.335 cv
583.827 823.667 574.841 829.179 561.572 826.29 cv
554.65 823.98 545.997 824.558 538.496 822.247 cv
532.151 819.936 528.113 813.579 520.613 815.891 cv
513.114 818.779 502.153 844.777 504.461 852.289 cv
508.499 865 534.458 866.732 544.842 869.044 cv
551.188 870.777 560.479 878.7 566.825 878.7 cv
571.44 878.7 575.135 876.918 584.038 870.378 cv
584.038 870.378 583.493 870.2 589.262 863.843 cv
cp
.513726 .466667 .415686 rgb
f
1074.7 1010.71 mo
1068.4 1000.81 1068.54 998.16 1060.65 992.83 cv
1056.75 989.414 1040.61 994.146 1036.34 990.598 cv
1032.82 987.312 1029.99 976.081 1024.44 976.188 cv
1018.73 976.751 1007.2 1001.22 1006.64 1007.69 cv
1005.77 1018.67 998.229 1040.88 1005.45 1042.76 cv
1035.13 1050.49 1079.64 1053.46 1074.7 1010.71 cv
cp
.741176 .694118 .639216 rgb
f
881.489 749.67 mo
874.931 740.412 864.743 729.328 867.646 717.538 cv
870.496 704.742 879.838 690.583 888.973 682 cv
899.566 672.327 909.071 661.194 921.893 655.447 cv
934.213 649.729 948.258 647.963 961.718 644.712 cv
976.691 641.378 987.507 645.348 999.605 654.311 cv
1011.19 663.296 1011.71 672.877 1009.92 686.63 cv
1006.97 707.02 996.525 728.823 985.833 746.088 cv
980.25 754.986 973.064 760.85 963.103 763.408 cv
954.147 765.912 944.238 764.248 937.215 765.131 cv
937.215 765.131 897.199 769.563 881.489 749.67 cv
cp
.545098 .498039 .443137 rgb
f
830.403 787.113 mo
815.406 788.847 805.016 792.716 811.938 810.051 cv
817.129 824.495 826.936 836.051 841.359 841.827 cv
852.898 847.028 865.588 844.137 877.125 846.449 cv
888.664 848.183 913.002 856.794 924.541 857.372 cv
932.616 857.372 956.895 862.321 956.32 850.766 cv
908.862 772.466 856.364 784.225 830.403 787.113 cv
cp
.682353 .623529 .552941 rgb
f
528.758 795.891 mo
527.063 790.994 531.363 785.486 530.787 780.436 cv
530.787 778.751 526.171 774.822 525.018 772.017 cv
523.865 768.65 525.018 765.843 524.441 762.475 cv
522.133 745.638 510.019 741.145 494.443 745.075 cv
478.291 749.004 471.368 756.862 465.599 771.455 cv
455.792 799.521 487.586 832.848 512.969 818.254 cv
512.969 818.254 532.205 805.847 528.758 795.891 cv
cp
.713726 .658824 .596078 rgb
f
502.053 742.456 mo
507.219 740.319 508.976 730.324 506.09 723.391 cv
501.476 710.681 489.36 707.79 476.093 710.681 cv
467.439 712.412 453.596 727.434 451.863 736.101 cv
451.288 738.411 453.018 752.854 454.749 754.589 cv
457.633 758.632 461.368 762.925 467.481 754.153 cv
473.25 747.798 480.708 745.921 489.36 742.456 cv
496.861 739.566 502.053 742.456 502.053 742.456 cv
cp
.545098 .498039 .443137 rgb
f
812.515 912.392 mo
807.9 911.813 802.131 911.238 797.516 909.503 cv
788.862 906.036 788.862 897.948 783.094 893.903 cv
777.326 890.438 773.286 895.06 768.095 889.281 cv
762.904 884.082 765.21 878.881 767.519 872.527 cv
768.095 870.217 769.826 866.75 770.979 863.861 cv
772.71 858.662 769.826 860.394 773.864 856.35 cv
778.48 851.15 788.862 848.261 794.632 844.796 cv
801.554 840.172 805.016 833.817 813.668 832.661 cv
822.323 831.508 826.936 836.128 832.706 840.75 cv
837.322 844.218 841.936 848.261 847.128 849.993 cv
851.743 851.15 859.243 848.84 862.704 851.729 cv
872.51 860.394 856.935 878.305 852.898 886.394 cv
851.167 890.438 850.589 897.948 847.128 900.837 cv
842.513 905.459 837.899 903.149 832.706 904.882 cv
825.207 907.77 817.708 915.28 810.208 911.238 cv
812.515 912.392 li
cp
f
754.251 903.149 mo
762.326 896.216 762.904 896.793 762.904 886.394 cv
762.904 880.616 764.057 873.682 762.904 867.905 cv
760.019 856.35 743.29 838.44 731.175 836.707 cv
721.368 834.974 704.061 839.018 693.678 840.75 cv
676.948 843.639 682.717 853.461 686.179 865.017 cv
689.063 876.571 687.332 888.705 695.984 897.948 cv
702.908 905.459 713.869 914.124 723.099 917.014 cv
730.598 918.747 745.597 919.325 748.481 909.503 cv
748.481 909.503 749.634 907.77 754.251 903.149 cv
cp
.647059 .592157 .52549 rgb
f
702.958 917.706 mo
697.188 918.283 691.42 920.593 685.651 921.75 cv
677.575 922.904 675.844 925.215 669.499 929.836 cv
658.538 937.349 662 927.525 652.769 925.792 cv
647.578 924.637 641.231 932.147 634.31 926.371 cv
630.848 922.904 629.693 912.504 631.425 908.46 cv
632.578 904.416 636.04 902.685 637.193 898.06 cv
638.348 894.017 636.04 889.396 636.616 885.351 cv
637.771 870.329 658.538 865.708 672.383 862.818 cv
682.19 861.086 681.612 861.661 683.343 871.484 cv
685.075 880.151 687.382 887.083 690.843 894.594 cv
693.729 901.526 696.035 903.839 701.227 909.039 cv
703.534 911.928 702.958 917.706 702.958 917.706 cv
cp
.478431 .435294 .388235 rgb
f
622.671 920.514 mo
623.825 920.514 601.327 933.225 592.673 929.757 cv
587.481 927.447 563.829 895.093 564.983 888.159 cv
565.561 884.115 581.136 876.604 584.598 873.715 cv
589.212 869.672 596.135 860.429 602.481 860.429 cv
610.557 860.429 612.864 869.672 615.172 876.027 cv
615.749 878.916 616.326 884.115 618.633 886.427 cv
620.941 889.315 626.132 888.737 627.287 891.049 cv
632.478 898.56 624.402 911.271 626.709 918.202 cv
622.671 920.514 li
cp
.647059 .592157 .52549 rgb
f
429.581 585.63 mo
430.023 584.588 433.415 609.771 426.825 616.256 cv
422.651 620.059 383.016 629.019 376.906 625.319 cv
373.306 623.249 372.175 606.309 370.771 602.077 cv
368.717 596.36 362.634 586.568 365.065 580.84 cv
368.159 573.547 377.78 575.005 384.669 575.356 cv
387.62 575.943 392.754 577.414 395.823 576.216 cv
399.436 575.239 400.879 570.331 403.505 570.173 cv
412.591 568.364 421.509 580.526 428.945 581.098 cv
429.581 585.63 li
cp
f
872.208 912.907 mo
880.683 923.421 894.845 924.442 908.161 926.543 cv
920.279 928.399 945.849 928.622 948.569 912.245 cv
950.92 897.676 939.018 876.422 927.532 868.424 cv
920.35 863.818 914.722 860.784 906.327 859.063 cv
899.729 857.712 890.871 852.134 884.738 854.64 cv
873.066 859.773 862.642 880.216 860.307 891.652 cv
860.307 891.652 867.196 906.859 872.208 912.907 cv
cp
.713726 .658824 .596078 rgb
f
872.894 1013.57 mo
887.158 1013.43 891.293 1015.57 894.078 1018.56 cv
897.398 1022.72 896.437 1035.21 896.24 1040.98 cv
896.302 1049.19 858.357 1049.19 856.472 1046.92 cv
848.484 1037.51 849.647 1019.1 858.853 1013.18 cv
861.563 1011.65 872.894 1013.57 872.894 1013.57 cv
cp
.443137 .411765 .372549 rgb
f
476.326 705.924 mo
478.424 704.804 479.84 700.936 482.724 701.513 cv
486.186 702.091 488.493 704.978 491.954 706.136 cv
502.338 709.023 502.338 703.824 506.376 695.736 cv
512.145 685.336 509.26 688.803 503.493 678.98 cv
499.453 672.624 508.324 637.265 504.862 630.909 cv
499.67 619.932 471.763 624.672 459.071 631.026 cv
442.342 639.692 445.803 658.181 450.996 672.048 cv
452.726 676.67 454.458 683.603 457.918 687.646 cv
461.38 692.268 460.007 705.281 464.64 707.266 cv
464.64 707.266 469.635 709.498 476.326 705.924 cv
cp
.615686 .560784 .498039 rgb
f
856.935 908.925 mo
848.858 900.26 848.282 901.993 837.899 907.77 cv
832.128 911.238 824.629 913.549 821.167 919.9 cv
815.976 928.569 820.591 931.458 826.936 936.079 cv
835.591 943.014 836.167 945.322 845.974 940.701 cv
853.474 937.813 878.28 932.613 880.01 923.947 cv
880.01 923.369 880.01 922.792 879.433 922.215 cv
879.433 922.215 867.319 919.325 856.935 908.925 cv
cp
.443137 .411765 .372549 rgb
f
1016.63 920.408 mo
1005.6 920.879 1002.05 915.235 994.356 912.454 cv
987.465 910.062 979.183 915.79 973.6 913.06 cv
957.352 904.145 992.936 885.372 997.082 877.136 cv
1005.95 862.899 1009.81 853.544 1026 843.38 cv
1066.82 817.878 1081.17 908.454 1046.76 910.211 cv
1046.76 910.211 1031.07 919.647 1016.63 920.408 cv
cp
.478431 .435294 .388235 rgb
f
1021.95 830.864 mo
1034.64 818.731 1036.37 806.021 1030.02 790.999 cv
1025.98 780.599 1015.6 758.068 1004.06 754.021 cv
994.833 751.135 980.411 766.732 968.873 768.467 cv
956.181 770.201 943.49 769.623 930.799 773.666 cv
923.299 775.978 921.569 775.978 923.875 785.221 cv
926.184 792.154 931.952 797.355 934.836 803.71 cv
939.451 814.687 940.606 829.132 952.142 834.332 cv
958.489 837.219 966.566 837.797 972.912 838.951 cv
979.833 840.107 984.449 844.151 990.794 845.887 cv
997.14 847.62 1003.48 845.887 1006.95 840.107 cv
1006.95 840.107 1017.91 834.909 1021.95 830.864 cv
cp
.580392 .529412 .470588 rgb
f
873.365 683.136 mo
888.409 672.105 895.252 656.479 889.483 648.969 cv
886.599 644.925 858.03 658.997 854.293 662.957 cv
849.727 667.8 862.375 686.792 869.874 684.479 cv
873.365 683.136 li
cp
.443137 .411765 .372549 rgb
f
1073.01 828.132 mo
1074.98 801.729 1064.45 779.952 1051.05 779.27 cv
1044.04 778.662 1032.9 822.476 1033.73 830.16 cv
1034.74 839.55 1066.83 843.372 1071.25 833.144 cv
1073.01 828.132 li
cp
f
404.102 911.834 mo
420.401 906.107 433.756 887.949 430.613 879.77 cv
424.377 861.645 398.259 851.858 387.932 870.69 cv
384.971 876.095 374.889 930.851 388.765 940.359 cv
402.641 949.868 404.102 911.834 404.102 911.834 cv
cp
.545098 .498039 .443137 rgb
f
382.394 817.642 mo
382.14 836.312 390.484 851.188 399.945 851.091 cv
404.907 851.218 410.873 819.898 409.961 814.526 cv
408.846 807.959 386.092 806.649 383.422 814.039 cv
382.394 817.642 li
cp
.443137 .411765 .372549 rgb
f
568.881 1033.8 mo
586.456 1027.57 597.494 1014.57 594.123 1005.72 cv
592.521 1001.02 561.12 1006.27 556.404 1008.99 cv
550.641 1012.31 557.305 1034.14 565.151 1034.09 cv
568.881 1033.8 li
cp
f
401.528 794.143 mo
402.155 780.517 417.769 767.125 427.768 759.211 cv
441.76 747.475 457.743 759.684 454.895 778.124 cv
453.935 783.177 448.591 790.668 443.695 792.354 cv
443.695 792.354 399.789 824.604 401.528 794.143 cv
cp
f
505.3 838.167 mo
506.562 840.826 501.924 826.343 500.942 824.805 cv
494.353 815.146 446.395 838.11 441.518 851.849 cv
440.125 855.773 436.922 866.709 440.285 870.628 cv
440.985 871.049 455.96 873.827 457.779 873.966 cv
469.953 875.069 483.651 865.662 493.019 860.323 cv
505.46 853.02 505.3 838.167 505.3 838.167 cv
cp
f
548.708 911.113 mo
556.785 908.225 567.746 893.781 562.554 884.537 cv
557.361 875.292 530.248 871.826 521.018 868.938 cv
515.826 867.205 508.904 864.316 503.711 863.737 cv
496.212 863.737 490.444 868.359 483.521 871.248 cv
469.099 876.448 456.984 874.138 443.139 875.871 cv
434.486 877.026 434.486 878.76 435.063 886.848 cv
435.639 893.203 436.216 904.18 439.101 909.382 cv
443.716 918.625 466.791 918.625 477.175 918.625 cv
489.289 918.625 502.558 917.469 515.25 916.891 cv
526.209 916.314 543.516 920.935 551.016 913.425 cv
552.747 911.113 553.9 909.958 555.054 907.07 cv
548.708 911.113 li
cp
.682353 .623529 .552941 rgb
f
814.823 986.922 mo
823.476 985.188 835.013 970.745 836.744 962.656 cv
841.359 948.214 822.323 937.813 812.515 929.725 cv
802.131 921.059 790.016 914.703 779.057 907.192 cv
771.556 901.413 770.979 900.26 762.326 906.036 cv
755.403 910.081 753.097 914.703 749.058 921.059 cv
742.712 933.77 744.444 936.079 745.597 949.945 cv
746.75 963.813 743.29 975.366 756.558 984.611 cv
768.673 993.854 776.749 997.899 791.171 993.854 cv
800.402 990.967 821.167 989.233 822.898 978.256 cv
814.823 986.922 li
cp
.580392 .529412 .470588 rgb
f
620.22 978.796 mo
618.269 977.564 604.391 985.658 602.367 988.722 cv
599.756 992.183 599.353 998.827 601.949 1003.02 cv
605.32 1009.24 610.988 1006.69 618.407 1006.78 cv
630.123 1006.52 642.294 1006.8 653.547 1009.82 cv
658.686 1011.02 665.058 1014.79 668.057 1012.34 cv
672.228 1009.1 669.184 1000.54 669.192 996.712 cv
669.068 993.822 671.495 984.113 670.264 981.548 cv
667.536 978.292 654.26 978.334 650.483 978.758 cv
643.65 978.273 637.595 979.813 630.893 978.388 cv
623.673 976.891 620.22 978.796 620.22 978.796 cv
cp
.443137 .411765 .372549 rgb
f
1068.72 659.797 mo
1072.78 686.253 1072.78 705.382 1068.47 720.926 cv
1063.94 737.217 1061.27 773.742 1047.18 778.24 cv
1034.84 782.492 1022.75 756.126 1010.44 750.302 cv
990.841 741.183 1005.53 732.425 1012.23 720.038 cv
1025.64 695.209 1032.95 587.754 1061.81 628.458 cv
1068.72 659.797 li
cp
.647059 .592157 .52549 rgb
f
719.364 991.642 mo
749.042 961.92 749.239 943.014 730.202 925.68 cv
720.395 915.858 693.016 920.544 684.939 928.632 cv
671.094 941.92 689.392 956.365 680.785 970.838 cv
677.518 976.329 682.006 983.336 683.159 983.915 cv
679.121 995.47 660.76 1030.13 686.721 1024.93 cv
698.835 1022.04 719.364 991.642 719.364 991.642 cv
cp
.615686 .560784 .498039 rgb
f
1009.98 978.756 mo
1015.18 980.489 1019.79 953.913 1019.21 948.137 cv
1018.06 930.803 999.599 933.69 989.215 923.869 cv
974.216 909.427 970.755 926.183 954.026 927.336 cv
945.95 927.915 917.683 924.447 924.028 935.425 cv
928.067 942.358 941.334 952.18 948.257 957.38 cv
956.91 963.736 967.294 967.778 977.101 972.979 cv
990.947 979.335 1013.44 994.933 1016.33 967.778 cv
1009.98 978.756 li
cp
.443137 .411765 .372549 rgb
f
462.578 968.069 mo
469.5 968.069 478.73 975.58 485.076 973.271 cv
490.845 971.535 502.752 962.484 501.599 956.129 cv
500.445 951.508 489.115 939.181 486.23 935.138 cv
475.846 921.85 463.154 925.316 449.31 918.96 cv
437.195 913.76 429.119 899.316 415.851 910.294 cv
383.544 935.138 462.578 968.069 462.578 968.069 cv
cp
f
1000.23 1016.68 mo
999.56 1010.69 1007.56 997.295 1002.74 992.99 cv
998.999 990.056 982.905 981.168 978.148 979.754 cv
961.801 975.664 952.609 992.293 937.788 995.803 cv
925.041 999.159 901.75 991.459 898.021 1008.29 cv
887.784 1047.77 974.526 1048.31 990.613 1044.55 cv
990.613 1044.55 1001.89 1031.47 1000.23 1016.68 cv
cp
.545098 .498039 .443137 rgb
f
585.224 949.945 mo
593.877 938.392 592.146 925.103 577.725 919.9 cv
565.61 915.858 547.727 922.792 535.036 923.369 cv
527.536 923.947 520.036 923.369 512.538 924.525 cv
508.499 925.103 497.538 925.103 494.078 926.835 cv
487.731 930.302 492.346 933.19 496.384 940.125 cv
500.423 947.057 501.576 949.37 510.23 951.102 cv
584.697 966.017 585.224 949.945 585.224 949.945 cv
cp
f
895.359 765.013 mo
888.513 767.823 884.182 774.041 886.653 779.988 cv
888.846 784.84 896.799 786.397 900.856 789.391 cv
903.338 791.054 905.401 793.223 908.096 794.637 cv
909.531 795.416 912.852 798.219 914.536 798.349 cv
917.724 798.463 917.381 796.029 918.691 791.984 cv
920.001 787.938 920.498 786.638 918.506 783.673 cv
901.391 758.161 895.359 765.013 895.359 765.013 cv
cp
.443137 .411765 .372549 rgb
f
467.248 1040.9 mo
473.819 1033.73 472.388 1025.59 461.252 1022.54 cv
451.9 1020.17 438.193 1024.59 428.431 1025.06 cv
422.664 1025.49 416.891 1025.21 411.129 1025.99 cv
408.025 1026.38 399.593 1026.48 396.943 1027.58 cv
392.085 1029.77 395.658 1031.49 398.817 1035.71 cv
401.975 1039.93 395.11 1045.55 401.781 1046.54 cv
459.19 1054.99 467.248 1040.9 467.248 1040.9 cv
cp
f
677.575 959.793 mo
679.39 965.396 671.265 970.421 666.949 973.253 cv
654.88 979.321 642.312 976.139 630.621 970.527 cv
619.57 965.421 601.242 957.68 605.937 943.169 cv
611.138 928.018 629.472 925.87 642.749 930.133 cv
661.582 937.235 678.362 941.669 677.099 965.666 cv
677.575 959.793 li
cp
.513726 .466667 .415686 rgb
f
871.583 946.39 mo
879.082 930.213 895.233 924.436 909.655 932.523 cv
916.578 935.99 923.5 940.034 928.117 945.812 cv
935.037 953.901 940.23 959.099 948.306 966.61 cv
967.92 985.099 940.806 982.786 929.269 984.521 cv
916 986.253 906.193 995.499 893.502 986.832 cv
878.503 975.854 857.398 976.217 871.583 946.39 cv
cp
.682353 .623529 .552941 rgb
f
847.292 999.836 mo
843.878 989.582 835.005 963.605 839.101 954.036 cv
841.148 948.567 849.339 943.099 854.799 947.199 cv
859.578 949.933 861.626 964.289 862.992 969.075 cv
867.086 980.012 898.021 995.803 892.679 1010.07 cv
892.679 1010.07 852.753 1014.19 847.292 999.836 cv
cp
.443137 .411765 .372549 rgb
f
1026.94 971.501 mo
1025.07 960.349 1020.05 932.039 1026.87 923.414 cv
1030.42 918.413 1061.01 911.872 1066.59 917.338 cv
1071.64 921.261 1070.13 943.1 1070.74 948.248 cv
1073.27 960.257 1074.63 978.001 1070.74 988.67 cv
1070.74 988.67 1030.37 987.279 1026.94 971.501 cv
cp
.545098 .498039 .443137 rgb
f
589.84 996.165 mo
593.301 991.543 597.338 988.077 601.954 984.611 cv
610.03 978.256 614.068 977.678 608.299 967.856 cv
606.569 964.967 598.493 952.258 595.031 951.679 cv
590.417 950.522 578.879 961.501 573.109 962.656 cv
560.418 966.122 544.266 956.301 543.111 972.478 cv
541.958 985.767 545.419 1003.1 561.572 1004.25 cv
572.533 1004.83 589.84 996.165 589.84 996.165 cv
cp
.443137 .411765 .372549 rgb
f
484.27 988.077 mo
486.577 980.566 492.923 975.366 498.691 969.589 cv
505.614 962.656 510.23 958.033 520.036 958.612 cv
524.652 959.19 536.19 960.345 538.496 964.967 cv
540.227 967.856 538.496 982.301 537.921 985.767 cv
536.766 994.433 533.305 996.743 525.805 1000.79 cv
512.538 1008.3 504.461 1002.52 490.616 1000.21 cv
487.731 999.632 484.847 999.632 481.962 998.478 cv
481.962 998.478 483.116 991.543 484.27 988.077 cv
cp
.682353 .623529 .552941 rgb
f
476.489 981.826 mo
474.058 972.894 461.083 970.457 453.784 966.395 cv
437.565 958.274 413.239 940.408 394.589 950.153 cv
371.072 963.147 377.561 990.76 388.913 1008.63 cv
397.021 1021.62 397.021 1024.87 414.051 1023.24 cv
424.593 1022.43 437.565 1021.62 448.107 1018.37 cv
461.083 1013.5 466.758 1003.75 475.679 993.196 cv
475.679 993.196 478.922 989.136 476.489 981.826 cv
cp
.698039 .643137 .572549 rgb
f
417.283 764.293 mo
417.86 764.293 443.311 742.534 449.08 732.132 cv
453.119 726.355 455.426 717.112 457.733 710.757 cv
460.618 702.091 459.464 699.779 452.542 693.425 cv
443.311 684.18 425.823 681.166 414.285 689.832 cv
402.17 699.653 384.283 720.403 383.706 734.269 cv
383.129 741.779 383.773 752.957 384.306 760.691 cv
385.505 778.106 385.004 791.714 398.096 779.907 cv
417.283 764.293 li
cp
.647059 .592157 .52549 rgb
f
800.752 993.744 mo
794.805 995.747 786.897 998.063 781.253 1000.15 cv
773.708 1003.17 772.803 1005.28 772.469 1013.65 cv
771.501 1025.26 775.692 1040.59 788.216 1043.46 cv
801.857 1046.07 831.289 1049.75 841.04 1042.17 cv
846.473 1038.24 847.819 1028.9 850.537 1022.55 cv
855.791 1012.04 844.008 979.158 800.752 993.744 cv
cp
.682353 .623529 .552941 rgb
f
637.221 1011.81 mo
631.12 1011.65 623.198 1011.24 617.308 1011.2 cv
609.302 1011.28 607.374 1012.31 602.482 1017.1 cv
595.273 1023.64 590.352 1033.49 599.292 1037.95 cv
609.324 1042.49 632.026 1051.18 644.397 1048.94 cv
651.127 1047.86 657.405 1042.72 663.186 1039.64 cv
673.394 1034.69 681.606 1012.94 637.221 1011.81 cv
cp
.698039 .643137 .572549 rgb
f
415.621 852.307 mo
415.621 852.307 416.199 852.307 416.774 852.307 cv
415.621 852.307 li
cp
.443137 .411765 .372549 rgb
f
422.921 858.411 mo
422.188 857.664 li
426.31 859.728 431.99 858.454 435.287 855.096 cv
440.493 850.456 441.795 841.838 447.652 836.531 cv
454.16 829.902 460.018 824.598 463.272 815.979 cv
465.875 810.013 469.78 798.742 462.621 794.101 cv
454.811 788.798 446.349 797.414 440.493 800.731 cv
426.175 808.687 411.206 817.97 409.255 836.531 cv
408.603 843.824 412.509 861.728 422.921 858.411 cv
cp
.682353 .623529 .552941 rgb
f
749.139 479.918 mo
730.788 479.021 728.669 492.855 723.296 509.888 cv
720.612 519.303 714.793 526.923 714.345 536.785 cv
713.898 546.646 717.926 555.163 723.296 563.232 cv
730.459 574.887 734.935 578.475 747.915 577.129 cv
760 576.232 765.787 575.837 776.976 570.458 cv
787.719 565.528 803.417 567.266 808.786 555.612 cv
812.367 547.545 813.71 534.544 812.816 525.578 cv
811.473 512.131 796.254 505.406 785.064 501.82 cv
777.457 499.13 772.532 495.545 766.713 490.166 cv
760.894 485.234 756.595 482.399 751.223 479.71 cv
749.139 479.918 li
cp
.545098 .498039 .443137 rgb
f
769.541 444.1 mo
771.421 434.414 812.44 410.688 834.362 425.71 cv
850.514 436.688 841.741 493.426 814.628 503.825 cv
797.322 510.18 749.787 478.884 752.137 464.296 cv
754.486 449.709 769.541 444.1 769.541 444.1 cv
cp
f
829.663 497.708 mo
819.037 511.861 817.018 528.312 819.326 535.823 cv
822.21 543.912 848.147 527.719 857.377 524.251 cv
864.298 522.519 863.918 523.7 871.417 523.123 cv
877.763 522.544 884.108 523.7 890.455 523.123 cv
897.955 522.544 903.145 521.967 909.491 516.767 cv
917.568 510.99 917.568 508.678 915.259 500.013 cv
914.106 493.08 913.53 476.325 908.915 471.703 cv
901.993 465.347 893.698 470.565 885.043 468.833 cv
874.083 465.943 867.135 459.537 856.174 467.627 cv
849.828 472.249 831.531 495.221 829.663 497.708 cv
cp
.580392 .529412 .470588 rgb
f
553.072 636.462 mo
535.329 639.191 519.451 633.389 513.686 627.935 cv
507.659 621.715 534.286 606.632 541.675 600.208 cv
546.429 594.993 545.18 594.782 549.149 588.534 cv
552.588 583.291 554.452 577.25 557.891 572.005 cv
561.86 565.759 564.771 561.517 572.41 558.394 cv
581.368 554.034 583.469 555.096 590.285 561.079 cv
596.056 565.264 611.018 573.46 613.099 579.589 cv
615.695 588.519 607.145 593.325 604.745 601.634 cv
602.337 612.479 604.968 621.454 592.582 627.257 cv
585.468 630.645 556.189 635.984 553.072 636.462 cv
cp
f
846.685 532.945 mo
836.238 537.927 813.468 576.057 818.881 581.479 cv
827.063 589.671 848.943 580.026 860.985 579.67 cv
878.869 579.67 928.603 602.852 938.987 580.319 cv
944.178 569.92 935.524 559.52 930.91 550.277 cv
924.564 538.143 919.372 527.745 904.951 525.435 cv
883.03 521.389 846.685 532.945 846.685 532.945 cv
cp
.647059 .592157 .52549 rgb
f
905.069 244.568 mo
895.551 248.548 890.113 255.315 895.551 263.674 cv
902.35 273.624 900.99 281.187 916.402 280.789 cv
930.453 280.789 969.429 292.729 977.589 277.207 cv
981.668 270.042 974.87 262.877 971.243 256.509 cv
966.256 248.15 962.179 240.986 950.847 239.394 cv
933.624 236.608 905.069 244.568 905.069 244.568 cv
cp
.756863 .713726 .658824 rgb
f
684.875 276.666 mo
680.088 280.335 679.818 287.139 683.709 291.647 cv
687.886 296.383 695.384 305.17 701.156 307.902 cv
713.844 314.277 732.218 285.88 738.536 277.347 cv
743.486 270.533 751.467 265.198 756.132 258.156 cv
761.937 249.682 748.916 247.253 742.461 245.38 cv
732.236 242.372 721.106 242.854 711.871 248.592 cv
702.35 254.103 685.659 243.586 678.14 250.691 cv
674.894 254.188 683.218 275.812 682.428 280.33 cv
684.875 276.666 li
cp
.443137 .411765 .372549 rgb
f
698.627 531.828 mo
693.436 546.27 699.446 540.798 687.908 552.931 cv
676.371 565.063 657.91 559.865 642.912 562.177 cv
625.605 564.487 618.682 566.22 601.375 559.287 cv
590.992 555.243 577.356 553.343 569.281 545.254 cv
562.358 538.322 556.788 514.325 566.595 510.281 cv
571.787 508.547 581.762 507.867 587.531 507.867 cv
593.876 507.867 600.799 507.867 607.721 507.867 cv
624.451 507.867 626.866 502.444 643.595 501.866 cv
648.787 501.866 662.58 509.977 667.772 509.399 cv
672.963 508.821 682.062 511.181 686.138 508.404 cv
688.865 506.547 694.781 504.726 695.934 504.726 cv
699.608 503.622 703.542 508.938 700.587 515.395 cv
698.627 531.828 li
cp
.580392 .529412 .470588 rgb
f
680.357 439.795 mo
685.549 442.683 701.048 451.311 707.97 455.356 cv
719.508 462.289 735.436 455.972 734.283 470.415 cv
732.552 494.68 679.774 518.8 660.161 500.889 cv
647.469 489.913 635.932 476.625 645.162 459.869 cv
651.508 448.891 667.089 435.443 680.357 440.065 cv
680.357 439.795 li
cp
.443137 .411765 .372549 rgb
f
482.682 396.272 mo
485.638 397.916 488.589 395.86 492.53 398.161 cv
499.097 402.107 506.322 406.712 505.666 414.934 cv
504.68 428.747 482.35 441.245 471.185 431.049 cv
463.961 424.8 457.393 417.236 462.647 407.699 cv
466.259 401.451 475.129 393.795 482.682 396.425 cv
482.682 396.272 li
cp
f
618.222 636.792 mo
605.89 644.541 610.279 629.025 608.537 620.308 cv
606.043 609.778 620.057 593.821 626.931 586.355 cv
639.637 573.578 651.959 562.395 670.517 563.772 cv
682.62 565.03 696.833 570.252 706.615 576.939 cv
718.091 583.971 738.25 594.519 737.648 608.554 cv
736.864 629.042 728.523 635.25 712.074 637.836 cv
698.809 639.294 675.598 637.044 662.483 634.992 cv
651.063 633.282 653.191 637.295 636.253 636.235 cv
631.359 635.929 618.834 635.379 617.792 637.529 cv
618.222 636.792 li
cp
.729412 .678431 .615686 rgb
f
859.879 425.451 mo
851.227 435.272 855.508 444.828 852.046 456.96 cv
865.315 465.627 874.302 460.116 887.571 463.004 cv
894.493 465.314 903.145 464.737 910.645 467.048 cv
916.992 469.359 921.03 475.715 928.528 473.403 cv
936.028 470.514 946.99 444.516 944.682 437.005 cv
940.643 424.294 914.684 422.562 904.299 420.25 cv
897.955 418.518 888.664 410.594 882.316 410.594 cv
877.702 410.594 874.007 412.378 865.104 418.917 cv
865.104 418.917 865.649 419.095 859.879 425.451 cv
cp
.513726 .466667 .415686 rgb
f
374.446 278.588 mo
380.744 288.488 380.599 291.134 388.493 296.463 cv
392.388 299.879 408.531 295.147 412.805 298.696 cv
416.323 301.981 419.148 313.214 424.698 313.107 cv
430.41 312.542 441.941 288.072 442.505 281.602 cv
443.372 270.622 450.913 248.41 443.692 246.531 cv
414.015 238.803 369.499 235.83 374.446 278.588 cv
cp
.741176 .694118 .639216 rgb
f
540.88 533.173 mo
546.326 540.863 554.789 550.07 552.376 559.861 cv
550.01 570.49 542.251 582.249 534.664 589.379 cv
525.866 597.412 517.972 606.657 507.322 611.431 cv
497.09 616.181 485.425 617.646 474.245 620.35 cv
461.81 623.117 452.825 619.819 442.779 612.377 cv
433.151 604.913 432.725 596.956 434.21 585.533 cv
436.659 568.598 445.336 550.49 454.215 536.148 cv
458.853 528.759 464.821 523.888 473.095 521.764 cv
480.534 519.684 488.763 521.067 494.597 520.333 cv
494.597 520.333 527.832 516.651 540.88 533.173 cv
cp
.545098 .498039 .443137 rgb
f
618.738 502.181 mo
633.737 500.447 644.127 496.576 637.203 479.244 cv
632.013 464.8 622.205 453.244 607.783 447.467 cv
596.246 442.267 583.554 445.157 572.017 442.845 cv
560.479 441.111 536.139 432.5 524.602 431.922 cv
516.525 431.922 492.247 426.973 492.823 438.528 cv
540.281 516.828 592.778 505.068 618.738 502.181 cv
cp
.682353 .623529 .552941 rgb
f
919.3 504.808 mo
922.885 508.954 918.419 515.784 920.516 520.471 cv
920.95 522.101 928.284 524.292 930.587 526.603 cv
933.039 529.458 932.183 532.577 933.842 535.634 cv
941.35 551.122 959.098 551.238 979.409 541.998 cv
1000.51 532.556 1007.96 522.536 1012.09 506.401 cv
1018.27 475.822 966.129 454.673 935.144 477.655 cv
935.144 477.655 912.011 496.378 919.3 504.808 cv
cp
.713726 .658824 .596078 rgb
f
947.125 552.884 mo
940.452 555.019 938.183 565.017 941.91 571.949 cv
947.87 584.66 963.519 587.548 980.656 584.66 cv
991.833 582.926 1009.72 567.906 1011.95 559.238 cv
1012.7 556.928 1010.46 542.484 1008.23 540.75 cv
1004.5 536.707 999.675 532.416 991.778 541.187 cv
984.328 547.541 974.696 549.417 963.519 552.884 cv
953.83 555.772 947.125 552.884 947.125 552.884 cv
cp
.545098 .498039 .443137 rgb
f
636.627 376.902 mo
641.242 377.479 647.011 378.058 651.626 379.791 cv
660.279 383.258 660.279 391.347 666.048 395.389 cv
671.817 398.857 675.855 394.235 681.047 400.011 cv
686.239 405.212 683.931 410.411 681.624 416.768 cv
681.047 419.078 679.316 422.544 678.163 425.434 cv
676.432 430.632 679.316 428.9 675.278 432.943 cv
670.663 438.144 660.279 441.033 654.511 444.5 cv
647.588 449.122 644.127 455.476 635.473 456.632 cv
626.82 457.787 622.205 453.166 616.437 448.543 cv
611.821 445.077 607.207 441.033 602.014 439.3 cv
597.399 438.144 589.901 440.455 586.438 437.566 cv
576.632 428.9 592.207 410.989 596.246 402.9 cv
597.976 398.857 598.554 391.347 602.014 388.457 cv
606.629 383.835 611.244 386.146 616.437 384.412 cv
623.936 381.523 631.435 374.013 638.935 378.058 cv
636.627 376.902 li
cp
f
694.893 386.146 mo
686.816 393.079 686.239 392.501 686.239 402.9 cv
686.239 408.678 685.085 415.611 686.239 421.39 cv
689.123 432.943 705.853 450.854 717.967 452.588 cv
727.774 454.321 745.081 450.276 755.464 448.543 cv
772.193 445.654 766.424 435.832 762.964 424.277 cv
760.08 412.724 761.809 400.59 753.157 391.347 cv
746.233 383.835 735.273 375.169 726.044 372.28 cv
718.544 370.547 703.544 369.969 700.66 379.791 cv
700.66 379.791 699.507 381.523 694.893 386.146 cv
cp
.647059 .592157 .52549 rgb
f
743.805 619.237 mo
745.099 629.668 744.285 629.808 753.064 635.679 cv
757.942 638.941 763.147 643.787 768.676 646.12 cv
780.061 650.315 804.629 646.935 812.933 638.139 cv
819.935 631.206 826.292 614.96 830.693 605.604 cv
837.7 590.478 826.148 589.586 814.437 585.854 cv
803.053 581.656 793.785 573.408 781.096 575.17 cv
770.845 576.514 757.338 580.462 749.687 586.278 cv
743.99 591.349 735.033 603.123 741.696 610.995 cv
741.696 610.995 742.507 612.905 743.805 619.237 cv
cp
f
746.184 371.589 mo
751.954 371.012 757.722 368.701 763.491 367.545 cv
771.566 366.39 773.298 364.079 779.643 359.457 cv
790.605 351.945 787.143 361.768 796.373 363.502 cv
801.565 364.656 807.911 357.146 814.833 362.924 cv
818.294 366.39 819.449 376.79 817.717 380.833 cv
816.564 384.878 813.103 386.611 811.948 391.234 cv
810.795 395.277 813.103 399.899 812.526 403.943 cv
811.372 418.966 790.605 423.587 776.759 426.476 cv
766.952 428.209 767.529 427.632 765.799 417.81 cv
764.067 409.143 761.759 402.209 758.299 394.699 cv
755.415 387.767 753.107 385.455 747.915 380.256 cv
745.607 377.367 746.184 371.589 746.184 371.589 cv
cp
.478431 .435294 .388235 rgb
f
826.47 368.78 mo
825.318 368.78 847.815 356.07 856.468 359.536 cv
861.661 361.847 885.314 394.201 884.16 401.134 cv
883.582 405.179 868.005 412.689 864.545 415.578 cv
859.93 419.623 853.006 428.866 846.662 428.866 cv
838.585 428.866 836.279 419.623 833.97 413.268 cv
833.393 410.379 832.816 405.179 830.509 402.867 cv
828.201 399.979 823.01 400.557 821.856 398.245 cv
816.665 390.735 824.741 378.024 822.433 371.092 cv
826.47 368.78 li
cp
.647059 .592157 .52549 rgb
f
576.934 376.388 mo
568.459 365.873 554.298 364.852 540.98 362.75 cv
528.865 360.895 503.293 360.673 500.572 377.048 cv
498.221 391.618 510.125 412.871 521.611 420.87 cv
528.793 425.476 534.42 428.512 542.816 430.231 cv
549.413 431.583 558.271 437.162 564.405 434.655 cv
576.075 429.521 586.5 409.079 588.836 397.641 cv
588.836 397.641 581.946 382.433 576.934 376.388 cv
cp
.713726 .658824 .596078 rgb
f
576.246 275.722 mo
561.984 275.858 557.848 273.724 555.065 270.737 cv
551.745 266.576 552.704 254.087 552.903 248.314 cv
552.84 240.103 590.785 240.107 592.669 242.369 cv
600.658 251.779 599.497 270.191 590.288 276.117 cv
587.58 277.643 576.246 275.722 576.246 275.722 cv
cp
.443137 .411765 .372549 rgb
f
406.281 565.103 mo
392.551 557.914 389.739 553.747 388.678 549.46 cv
387.735 543.771 395.363 532.306 398.656 526.88 cv
403.006 518.986 439.333 538.469 439.922 541.602 cv
442.516 554.71 431.512 571.743 419.511 572.69 cv
416.1 572.761 406.281 565.103 406.281 565.103 cv
cp
f
592.207 380.369 mo
600.284 389.034 600.861 387.301 611.244 381.523 cv
617.013 378.058 624.513 375.747 627.974 369.392 cv
633.165 360.725 628.551 357.836 622.205 353.214 cv
613.552 346.281 612.975 343.97 603.168 348.592 cv
595.668 351.48 570.862 356.681 569.132 365.347 cv
569.132 365.925 569.132 366.502 569.709 367.08 cv
569.709 367.08 581.823 369.969 592.207 380.369 cv
cp
f
432.512 368.886 mo
443.545 368.414 447.095 374.059 454.784 376.84 cv
461.678 379.231 469.958 373.504 475.544 376.233 cv
491.791 385.151 456.208 403.923 452.061 412.16 cv
443.19 426.395 439.333 435.75 423.137 445.915 cv
382.319 471.415 367.977 380.841 402.38 379.084 cv
402.38 379.084 418.068 369.647 432.512 368.886 cv
cp
.478431 .435294 .388235 rgb
f
427.333 454.75 mo
414.641 466.885 412.911 479.595 419.257 494.617 cv
423.294 505.017 433.679 527.548 445.216 531.592 cv
454.446 534.482 468.869 518.882 480.406 517.149 cv
493.098 515.415 505.789 515.993 518.48 511.948 cv
525.979 509.638 527.71 509.638 525.403 500.395 cv
523.096 493.46 517.326 488.261 514.441 481.905 cv
509.827 470.928 508.674 456.485 497.135 451.285 cv
490.79 448.396 482.714 447.818 476.369 446.663 cv
469.446 445.507 464.831 441.463 458.485 439.729 cv
452.139 437.997 445.792 439.729 442.332 445.507 cv
442.332 445.507 431.371 450.708 427.333 454.75 cv
cp
.580392 .529412 .470588 rgb
f
376.128 461.162 mo
374.16 487.565 384.688 509.341 398.087 510.024 cv
405.097 510.631 416.242 466.818 415.416 459.135 cv
414.404 449.743 382.309 445.923 377.895 456.152 cv
376.128 461.162 li
cp
.443137 .411765 .372549 rgb
f
400.564 649.601 mo
412.861 673.188 433.401 686.491 445.227 680.297 cv
451.547 677.271 437.882 634.145 433.105 627.988 cv
427.268 620.464 397.784 633.435 399.422 644.42 cv
400.564 649.601 li
cp
f
1045.04 377.459 mo
1028.74 383.186 1015.39 401.346 1018.53 409.523 cv
1024.77 427.648 1050.88 437.437 1061.21 418.603 cv
1064.17 413.2 1074.25 358.442 1060.38 348.934 cv
1046.5 339.425 1045.04 377.459 1045.04 377.459 cv
cp
.545098 .498039 .443137 rgb
f
880.259 255.488 mo
862.687 261.724 851.648 274.721 855.019 283.576 cv
856.62 288.278 888.022 283.024 892.738 280.304 cv
898.501 276.98 891.837 255.151 883.99 255.206 cv
880.259 255.488 li
cp
.443137 .411765 .372549 rgb
f
1059.08 486.702 mo
1073.49 501.211 1071.44 531.783 1069.39 550.69 cv
1067.26 577.822 1036.47 582.819 1019.13 561.008 cv
1014.57 554.837 1012.05 541.422 1015.48 534.386 cv
1015.48 534.386 1027.23 453.9 1059.08 486.702 cv
cp
f
943.842 451.127 mo
942.58 448.467 947.218 462.95 948.2 464.49 cv
954.79 474.149 1002.75 451.185 1007.62 437.445 cv
1009.02 433.521 1012.22 422.585 1008.86 418.666 cv
1008.16 418.248 993.182 415.467 991.362 415.328 cv
979.189 414.224 965.491 423.633 956.125 428.97 cv
943.681 436.273 943.842 451.127 943.842 451.127 cv
cp
f
900.434 378.181 mo
892.357 381.07 881.397 395.513 886.588 404.758 cv
891.781 414.001 918.894 417.467 928.125 420.356 cv
933.315 422.09 940.239 424.978 945.431 425.557 cv
952.929 425.557 958.699 420.934 965.622 418.045 cv
980.042 412.846 992.158 415.156 1006 413.424 cv
1014.65 412.269 1014.65 410.534 1014.08 402.446 cv
1013.5 396.091 1012.93 385.114 1010.04 379.914 cv
1005.43 370.669 982.351 370.669 971.968 370.669 cv
959.853 370.669 946.584 371.825 933.893 372.403 cv
922.932 372.981 905.626 368.358 898.125 375.869 cv
896.395 378.181 895.242 379.336 894.087 382.226 cv
900.434 378.181 li
cp
.682353 .623529 .552941 rgb
f
634.319 302.372 mo
625.667 304.105 614.129 318.548 612.398 326.638 cv
607.783 341.082 626.82 351.48 636.627 359.57 cv
647.011 368.235 659.125 374.59 670.086 382.101 cv
677.585 387.879 678.163 389.034 686.816 383.258 cv
693.738 379.213 696.046 374.59 700.084 368.235 cv
706.43 355.524 704.7 353.214 703.544 339.348 cv
702.392 325.482 705.853 313.927 692.584 304.683 cv
680.47 295.439 672.393 291.395 657.971 295.439 cv
648.741 298.328 627.974 300.061 626.244 311.038 cv
634.319 302.372 li
cp
.580392 .529412 .470588 rgb
f
828.923 310.497 mo
830.875 311.73 844.751 303.637 846.775 300.572 cv
849.386 297.111 849.789 290.467 847.193 286.273 cv
843.823 280.053 838.155 282.605 830.735 282.517 cv
819.02 282.776 806.85 282.497 795.594 279.474 cv
790.456 278.27 784.084 274.5 781.086 276.948 cv
776.914 280.188 779.958 288.754 779.949 292.582 cv
780.074 295.472 777.646 305.18 778.879 307.746 cv
781.606 311.002 794.882 310.96 798.66 310.536 cv
805.493 311.021 811.547 309.482 818.25 310.906 cv
825.468 312.403 828.923 310.497 828.923 310.497 cv
cp
.443137 .411765 .372549 rgb
f
729.777 297.652 mo
700.1 327.374 699.903 346.281 718.941 363.614 cv
728.747 373.435 756.127 368.751 764.203 360.662 cv
778.049 347.374 759.75 332.928 768.357 318.457 cv
771.625 312.965 767.137 305.958 765.983 305.379 cv
770.022 293.824 788.382 259.163 762.422 264.363 cv
750.307 267.252 729.777 297.652 729.777 297.652 cv
cp
.615686 .560784 .498039 rgb
f
439.159 310.538 mo
433.967 308.805 429.352 335.38 429.929 341.159 cv
431.083 358.491 449.543 355.603 459.927 365.424 cv
474.925 379.868 478.388 363.113 495.117 361.958 cv
503.193 361.379 531.46 364.846 525.114 353.869 cv
521.076 346.936 507.808 337.114 500.885 331.915 cv
492.231 325.56 481.849 321.516 472.042 316.314 cv
458.196 309.959 435.697 294.36 432.813 321.516 cv
439.159 310.538 li
cp
.443137 .411765 .372549 rgb
f
986.564 321.225 mo
979.643 321.225 970.412 313.714 964.067 316.025 cv
958.297 317.758 946.391 326.81 947.544 333.165 cv
948.696 337.787 960.027 350.112 962.912 354.157 cv
973.296 367.445 985.988 363.978 999.833 370.333 cv
1011.95 375.533 1020.02 389.978 1033.29 379 cv
1065.6 354.157 986.564 321.225 986.564 321.225 cv
cp
f
448.91 272.612 mo
449.583 278.607 441.586 292 446.396 296.303 cv
450.144 299.239 466.237 308.126 470.995 309.541 cv
487.341 313.629 496.533 297 511.354 293.491 cv
524.102 290.134 547.393 297.834 551.123 281.007 cv
561.357 241.523 474.617 240.981 458.53 244.748 cv
458.53 244.748 447.252 257.825 448.91 272.612 cv
cp
.545098 .498039 .443137 rgb
f
863.918 339.348 mo
855.264 350.903 856.997 364.191 871.417 369.392 cv
883.534 373.435 901.416 366.502 914.106 365.925 cv
921.607 365.347 929.106 365.925 936.606 364.77 cv
940.643 364.191 951.604 364.191 955.064 362.459 cv
961.411 358.991 956.795 356.104 952.757 349.17 cv
948.719 342.236 947.567 339.926 938.913 338.192 cv
864.446 323.277 863.918 339.348 863.918 339.348 cv
cp
f
554.253 524.752 mo
561.099 521.94 565.43 515.723 562.959 509.776 cv
560.766 504.922 552.814 503.368 548.756 500.375 cv
546.272 498.71 544.211 496.542 541.517 495.129 cv
540.081 494.347 536.76 491.547 535.077 491.415 cv
531.888 491.301 532.23 493.736 530.921 497.78 cv
529.611 501.827 520.945 516.614 524.257 517.941 cv
554.797 530.176 554.253 524.752 554.253 524.752 cv
cp
.443137 .411765 .372549 rgb
f
880.565 641.489 mo
895.77 628.973 896.539 608.659 897.945 598.216 cv
898.769 589.858 885.876 594.036 881.476 591.442 cv
878.616 590.215 877.021 587.503 873.529 587.017 cv
871.699 586.694 868.443 583.817 865.521 585.124 cv
859.846 587.897 849.839 583.196 843.458 593.127 cv
837.077 603.063 815.161 650.919 819.625 652.372 cv
855.829 664.158 880.565 641.489 880.565 641.489 cv
cp
f
984.682 246.018 mo
978.111 253.189 979.541 261.329 990.677 264.384 cv
1000.03 266.752 1013.74 262.329 1023.5 261.856 cv
1029.27 261.43 1035.04 261.714 1040.8 260.935 cv
1043.9 260.542 1052.34 260.439 1054.99 259.343 cv
1059.85 257.156 1056.27 255.427 1053.11 251.209 cv
1049.96 246.993 1049.05 245.586 1042.38 244.604 cv
984.968 236.149 984.682 246.018 984.682 246.018 cv
cp
f
771.566 329.501 mo
769.751 323.896 777.877 318.873 782.193 316.042 cv
794.262 309.974 806.832 313.155 818.521 318.767 cv
829.572 323.872 847.899 331.614 843.206 346.124 cv
838.004 361.276 819.669 363.422 806.393 359.16 cv
787.561 352.059 770.78 347.625 772.044 323.628 cv
771.566 329.501 li
cp
.513726 .466667 .415686 rgb
f
577.561 342.904 mo
570.061 359.082 553.909 364.859 539.488 356.77 cv
532.565 353.304 525.642 349.26 521.026 343.483 cv
514.104 335.394 508.913 330.194 500.836 322.683 cv
481.222 304.195 508.335 306.506 519.874 304.773 cv
533.142 303.04 542.948 293.797 555.64 302.462 cv
570.639 313.439 591.743 313.078 577.561 342.904 cv
cp
.682353 .623529 .552941 rgb
f
601.851 289.458 mo
605.264 299.711 614.137 325.688 610.042 335.258 cv
607.994 340.728 599.804 346.196 594.342 342.095 cv
589.565 339.36 587.517 325.005 586.152 320.22 cv
582.057 309.281 551.123 293.491 556.464 279.224 cv
556.464 279.224 596.39 275.103 601.851 289.458 cv
cp
.443137 .411765 .372549 rgb
f
422.201 317.794 mo
424.075 328.947 429.089 357.255 422.271 365.879 cv
418.719 370.88 388.127 377.421 382.558 371.956 cv
377.507 368.035 379.008 346.194 378.402 341.045 cv
375.869 329.038 374.511 311.293 378.402 300.624 cv
378.402 300.624 418.774 302.014 422.201 317.794 cv
cp
.545098 .498039 .443137 rgb
f
859.303 293.127 mo
855.842 297.75 851.804 301.217 847.188 304.683 cv
839.112 311.038 835.074 311.617 840.843 321.438 cv
842.572 324.327 850.649 337.037 854.112 337.615 cv
858.726 338.771 870.263 327.793 876.033 326.638 cv
888.723 323.171 904.876 332.994 906.032 316.816 cv
907.184 303.527 903.723 286.195 887.571 285.039 cv
876.61 284.462 859.303 293.127 859.303 293.127 cv
cp
.443137 .411765 .372549 rgb
f
964.873 301.217 mo
962.565 308.728 956.218 313.927 950.451 319.705 cv
943.528 326.638 938.913 331.26 929.106 330.682 cv
924.491 330.104 912.952 328.948 910.645 324.327 cv
908.915 321.438 910.645 306.994 911.221 303.527 cv
912.376 294.861 915.837 292.55 923.337 288.506 cv
936.606 280.995 944.682 286.773 958.528 289.084 cv
961.411 289.661 964.295 289.661 967.18 290.816 cv
967.18 290.816 966.025 297.75 964.873 301.217 cv
cp
.682353 .623529 .552941 rgb
f
972.653 307.467 mo
975.083 316.401 988.059 318.837 995.358 322.899 cv
1011.58 331.02 1035.9 348.885 1054.55 339.141 cv
1078.07 326.147 1071.58 298.534 1060.23 280.668 cv
1052.12 267.674 1052.12 264.425 1035.09 266.05 cv
1024.55 266.862 1011.58 267.674 1001.03 270.922 cv
988.059 275.796 982.384 285.541 973.462 296.099 cv
973.462 296.099 970.219 300.158 972.653 307.467 cv
cp
.698039 .643137 .572549 rgb
f
968.837 587.653 mo
968.374 587.317 934.665 589.94 923.688 594.921 cv
916.921 597.204 909.427 603.277 903.697 607.031 cv
896.092 612.305 895.608 614.83 897.284 623.969 cv
899.049 636.771 911.247 649.388 925.794 649.162 cv
941.511 648.346 985.447 620.944 993.431 632.422 cv
1019.71 670.203 1050.98 601.156 1055.27 594.639 cv
1064.94 579.964 1011.48 584.473 993.763 586.313 cv
968.837 587.653 li
cp
.647059 .592157 .52549 rgb
f
648.391 295.552 mo
654.337 293.546 662.245 291.231 667.889 289.149 cv
675.434 286.126 676.34 284.011 676.673 275.64 cv
677.643 264.032 673.45 248.707 660.926 245.831 cv
647.285 243.229 617.852 239.541 608.102 247.124 cv
602.669 251.053 601.323 260.394 598.605 266.741 cv
593.352 277.259 605.134 310.134 648.391 295.552 cv
cp
.682353 .623529 .552941 rgb
f
811.92 277.486 mo
818.022 277.642 825.945 278.055 831.835 278.096 cv
839.839 278.016 841.77 276.986 846.66 272.19 cv
853.869 265.653 858.792 255.806 849.85 251.348 cv
839.818 246.801 817.118 238.112 804.745 240.355 cv
798.015 241.433 791.739 246.568 785.957 249.656 cv
775.748 254.606 767.536 276.353 811.92 277.486 cv
cp
.698039 .643137 .572549 rgb
f
1033.52 436.988 mo
1033.52 436.988 1032.94 436.988 1032.37 436.988 cv
1033.52 436.988 li
cp
.443137 .411765 .372549 rgb
f
1007.01 480.572 mo
1006.61 479.612 li
1009.66 483.022 1016.93 487.753 1021.26 485.826 cv
1027.85 483.4 1030.82 475.031 1038.27 472.226 cv
1046.83 468.422 1058.27 479.054 1064.55 472.226 cv
1069.23 467.626 1073.14 442.11 1068.25 435.208 cv
1063 427.453 1051.88 432.396 1045.18 433.355 cv
1028.87 435.562 1011.45 438.764 1002.6 455.302 cv
999.232 461.84 996.079 479.882 1007.01 480.572 cv
cp
.682353 .623529 .552941 rgb
f
59.6826 465.773 mo
39.6465 464.779 37.3325 480.13 31.4678 499.032 cv
28.5371 509.478 22.1846 517.934 21.6958 528.877 cv
21.2065 539.821 25.605 549.271 31.4678 558.225 cv
39.2876 571.159 44.1733 575.139 58.3452 573.646 cv
71.5386 572.651 81.8008 577.127 94.0171 571.159 cv
105.745 565.687 118.939 562.703 124.802 549.77 cv
128.711 540.816 130.178 526.39 129.2 516.442 cv
127.734 501.519 111.121 494.059 98.9028 490.079 cv
90.5962 487.094 85.2202 483.113 78.8682 477.145 cv
72.5156 471.674 67.8213 468.527 61.957 465.542 cv
59.6826 465.773 li
cp
.545098 .498039 .443137 rgb
f
68.6289 446.417 mo
70.5093 436.732 108.759 410.41 130.681 425.433 cv
146.833 436.411 161.275 475.703 134.162 486.103 cv
116.855 492.458 72.9268 475.741 67.2861 455.026 cv
68.6289 446.417 li
cp
f
135.418 498.942 mo
137.726 505.298 137.322 512.517 139.629 520.028 cv
142.514 528.115 148.444 527.108 157.673 523.642 cv
164.595 521.908 164.214 523.091 171.714 522.512 cv
178.06 521.935 184.405 523.091 190.751 522.512 cv
198.251 521.935 203.443 521.356 209.788 516.158 cv
217.865 510.38 217.865 508.068 215.557 499.402 cv
214.403 492.469 213.826 475.715 209.212 471.092 cv
202.289 464.738 193.995 469.956 185.342 468.221 cv
174.381 465.333 167.431 458.927 156.47 467.016 cv
150.125 471.638 134.264 496.055 135.418 498.942 cv
cp
.580392 .529412 .470588 rgb
f
146.982 532.333 mo
136.535 537.316 113.765 575.447 119.178 580.867 cv
127.36 589.062 149.239 579.416 161.282 579.061 cv
179.166 579.061 228.9 602.243 239.284 579.709 cv
244.475 569.311 235.822 558.91 231.207 549.667 cv
224.86 537.533 219.669 527.134 205.247 524.824 cv
183.326 520.779 146.982 532.333 146.982 532.333 cv
cp
.647059 .592157 .52549 rgb
f
205.367 243.958 mo
195.848 247.938 190.409 254.705 195.848 263.064 cv
202.646 273.014 201.287 280.576 216.697 280.179 cv
230.749 280.179 269.727 292.12 277.886 276.596 cv
281.964 269.433 275.166 262.268 271.54 255.899 cv
266.553 247.541 262.475 240.376 251.144 238.783 cv
233.921 235.998 205.367 243.958 205.367 243.958 cv
cp
.756863 .713726 .658824 rgb
f
136.716 586.942 mo
127.926 586.365 124.276 599.589 124.75 608.887 cv
126.07 634.756 142.249 639.82 153.236 643.287 cv
164.77 646.752 180.698 646.176 192.783 646.176 cv
204.317 646.176 223.542 649.642 234.527 643.865 cv
249.358 636.354 240.568 620.177 235.077 609.777 cv
227.387 594.756 221.894 595.911 206.515 595.333 cv
192.233 594.756 178.502 592.444 164.77 588.978 cv
156.531 586.667 143.673 581.229 136.532 587.007 cv
136.716 586.942 li
cp
.443137 .411765 .372549 rgb
f
160.177 424.841 mo
151.523 434.661 155.806 444.217 152.343 456.35 cv
165.612 465.016 174.599 459.505 187.867 462.393 cv
194.79 464.703 203.443 464.125 210.943 466.438 cv
217.288 468.748 221.326 475.104 228.826 472.793 cv
236.325 469.904 247.286 443.906 244.978 436.395 cv
240.94 423.685 214.98 421.952 204.597 419.639 cv
198.251 417.907 188.96 409.983 182.614 409.983 cv
177.999 409.983 174.304 411.767 165.401 418.306 cv
165.401 418.306 165.946 418.484 160.177 424.841 cv
cp
.513726 .466667 .415686 rgb
f
220.681 492.792 mo
222.375 497.689 218.076 503.197 218.652 508.248 cv
218.652 509.932 223.267 513.86 224.421 516.667 cv
225.575 520.035 224.421 522.84 224.998 526.208 cv
227.305 543.047 239.42 547.539 254.996 543.608 cv
271.148 539.679 278.071 531.82 283.839 517.229 cv
293.647 489.164 261.854 455.836 236.47 470.43 cv
236.47 470.43 217.234 482.837 220.681 492.792 cv
cp
.713726 .658824 .596078 rgb
f
247.387 546.228 mo
242.22 548.363 240.464 558.36 243.348 565.294 cv
247.963 578.003 260.078 580.893 273.346 578.003 cv
281.999 576.27 295.845 561.249 297.575 552.583 cv
298.152 550.272 296.42 535.829 294.691 534.095 cv
291.806 530.052 288.07 525.759 281.957 534.531 cv
276.188 540.885 268.731 542.763 260.078 546.228 cv
252.578 549.117 247.387 546.228 247.387 546.228 cv
cp
.545098 .498039 .443137 rgb
f
46.4814 370.979 mo
52.25 370.401 58.019 368.091 63.7881 366.935 cv
71.8638 365.779 73.5942 363.469 79.9399 358.847 cv
90.9009 351.335 87.4395 361.158 96.6709 362.891 cv
101.862 364.047 108.207 356.535 115.13 362.313 cv
118.591 365.779 119.746 376.179 118.015 380.224 cv
116.861 384.268 113.4 386.001 112.246 390.623 cv
111.091 394.667 113.4 399.289 112.823 403.333 cv
111.668 418.354 90.9009 422.977 77.0562 425.866 cv
67.249 427.599 67.8262 427.021 66.0952 417.2 cv
64.3647 408.533 62.0571 401.6 58.5962 394.09 cv
55.7109 387.156 53.4048 384.845 48.2124 379.646 cv
45.9048 376.756 46.4814 370.979 46.4814 370.979 cv
cp
.478431 .435294 .388235 rgb
f
126.768 368.17 mo
125.614 368.17 148.113 355.459 156.766 358.926 cv
161.958 361.236 185.61 393.591 184.456 400.524 cv
183.879 404.568 168.303 412.079 164.841 414.968 cv
160.227 419.012 153.303 428.256 146.958 428.256 cv
138.882 428.256 136.574 419.012 134.267 412.656 cv
133.69 409.768 133.114 404.568 130.806 402.257 cv
128.499 399.368 123.307 399.947 122.152 397.635 cv
116.961 390.125 125.037 377.413 122.729 370.481 cv
126.768 368.17 li
cp
.647059 .592157 .52549 rgb
f
319.858 703.055 mo
319.416 704.097 316.024 678.913 322.614 672.427 cv
326.788 668.625 382.793 633.256 388.904 636.955 cv
392.505 639.026 407.599 673.529 409.004 677.76 cv
411.058 683.475 386.804 702.114 384.374 707.845 cv
381.279 715.136 371.66 713.678 364.77 713.326 cv
361.819 712.74 356.685 711.27 353.616 712.468 cv
350.002 713.443 348.559 718.353 345.934 718.51 cv
336.848 720.32 327.929 708.156 320.496 707.587 cv
319.858 703.055 li
cp
f
273.114 582.759 mo
271.016 583.881 269.6 587.748 266.715 587.172 cv
263.253 586.593 260.945 583.706 257.486 582.549 cv
247.101 579.661 247.101 584.86 243.063 592.948 cv
237.295 603.347 240.178 599.882 245.947 609.704 cv
249.986 616.059 241.115 651.42 244.578 657.773 cv
249.768 668.752 277.676 664.012 290.367 657.656 cv
307.097 648.99 303.636 630.503 298.443 616.637 cv
296.713 612.015 294.982 605.08 291.521 601.037 cv
288.059 596.416 289.432 583.402 284.799 581.417 cv
284.799 581.417 279.804 579.185 273.114 582.759 cv
cp
.615686 .560784 .498039 rgb
f
345.337 376.849 mo
329.038 382.575 315.683 400.735 318.826 408.914 cv
325.062 427.039 352.931 423.046 370.351 435.953 cv
388.472 449.381 381.574 334.675 359.528 343.766 cv
343.915 350.205 345.337 376.849 345.337 376.849 cv
cp
.545098 .498039 .443137 rgb
f
180.558 254.879 mo
162.983 261.113 151.945 274.111 155.315 282.965 cv
156.918 287.668 188.319 282.413 193.035 279.695 cv
198.798 276.37 192.134 254.54 184.288 254.595 cv
180.558 254.879 li
cp
.443137 .411765 .372549 rgb
f
244.14 450.518 mo
242.876 447.858 247.516 462.34 248.497 463.88 cv
255.086 473.539 303.044 450.574 307.921 436.835 cv
309.315 432.909 312.517 421.974 309.155 418.056 cv
308.454 417.636 293.479 414.856 291.66 414.718 cv
279.486 413.615 265.788 423.022 256.42 428.36 cv
243.979 435.665 244.14 450.518 244.14 450.518 cv
cp
f
200.73 377.57 mo
192.655 380.459 181.693 394.902 186.886 404.147 cv
192.077 413.39 219.191 416.857 228.421 419.746 cv
233.613 421.479 240.536 424.368 245.728 424.946 cv
253.228 424.946 258.995 420.324 265.918 417.435 cv
280.34 412.236 292.456 414.546 306.3 412.813 cv
314.953 411.659 314.953 409.924 314.377 401.836 cv
313.8 395.48 313.223 384.503 310.338 379.304 cv
305.724 370.059 282.648 370.059 272.265 370.059 cv
260.15 370.059 246.882 371.215 234.19 371.793 cv
223.229 372.371 205.923 367.749 198.423 375.259 cv
196.692 377.57 195.54 378.726 194.385 381.614 cv
200.73 377.57 li
cp
.682353 .623529 .552941 rgb
f
129.22 309.887 mo
131.17 311.12 145.048 303.026 147.073 299.962 cv
149.683 296.501 150.086 289.857 147.49 285.663 cv
144.119 279.443 138.452 281.995 131.032 281.905 cv
119.316 282.167 107.146 281.886 95.8926 278.864 cv
90.7534 277.659 84.3818 273.889 81.3833 276.338 cv
77.2109 279.578 80.2549 288.144 80.2471 291.971 cv
80.3716 294.861 77.9438 304.569 79.1763 307.135 cv
81.9033 310.393 95.1792 310.351 98.9561 309.926 cv
105.789 310.41 111.845 308.871 118.546 310.295 cv
125.767 311.793 129.22 309.887 129.22 309.887 cv
cp
.443137 .411765 .372549 rgb
f
28.5771 292.65 mo
-1.09961 322.372 -1.29736 341.279 17.7412 358.613 cv
27.5469 368.434 54.9258 363.75 63.0024 355.66 cv
76.8477 342.373 58.5498 327.927 67.1563 313.455 cv
70.4238 307.963 65.937 300.956 64.7832 300.378 cv
68.8213 288.822 87.1812 254.162 61.2217 259.361 cv
49.1069 262.25 28.5771 292.65 28.5771 292.65 cv
cp
.615686 .560784 .498039 rgb
f
286.861 320.614 mo
279.939 320.614 270.709 313.104 264.363 315.414 cv
258.594 317.148 246.687 326.199 247.84 332.555 cv
248.994 337.176 260.324 349.502 263.209 353.547 cv
273.594 366.835 286.284 363.369 300.13 369.723 cv
312.244 374.923 320.321 389.367 333.589 378.39 cv
365.894 353.547 286.861 320.614 286.861 320.614 cv
cp
.443137 .411765 .372549 rgb
f
164.214 338.739 mo
155.561 350.292 157.292 363.581 171.714 368.782 cv
183.829 372.825 201.712 365.892 214.404 365.314 cv
221.903 364.737 229.403 365.314 236.901 364.159 cv
240.94 363.581 251.9 363.581 255.362 361.848 cv
261.708 358.381 257.092 355.493 253.055 348.56 cv
249.017 341.627 247.863 339.315 239.209 337.583 cv
164.742 322.666 164.214 338.739 164.214 338.739 cv
cp
.545098 .498039 .443137 rgb
f
284.979 245.407 mo
278.408 252.58 279.839 260.718 290.976 263.774 cv
300.327 266.142 314.035 261.719 323.796 261.245 cv
329.563 260.82 335.336 261.104 341.098 260.326 cv
344.202 259.932 352.635 259.829 355.284 258.732 cv
360.142 256.546 356.569 254.817 353.411 250.599 cv
350.252 246.383 349.346 244.975 342.675 243.993 cv
285.267 235.539 284.979 245.407 284.979 245.407 cv
cp
.443137 .411765 .372549 rgb
f
71.8638 328.891 mo
70.0488 323.286 78.1738 318.262 82.4902 315.431 cv
94.5591 309.363 107.128 312.546 118.818 318.156 cv
129.869 323.261 148.197 331.003 143.502 345.515 cv
138.301 360.666 119.967 362.813 106.69 358.55 cv
87.8564 351.449 71.0767 347.015 72.3403 323.018 cv
71.8638 328.891 li
cp
.513726 .466667 .415686 rgb
f
159.6 292.519 mo
156.139 297.14 152.1 300.606 147.486 304.072 cv
139.409 310.427 135.371 311.006 141.14 320.827 cv
142.87 323.716 150.947 336.426 154.408 337.004 cv
159.023 338.161 170.561 327.183 176.33 326.027 cv
189.021 322.562 205.173 332.383 206.328 316.206 cv
207.48 302.918 204.02 285.585 187.867 284.429 cv
176.906 283.851 159.6 292.519 159.6 292.519 cv
cp
.443137 .411765 .372549 rgb
f
265.169 300.606 mo
262.861 308.117 256.516 313.316 250.747 319.094 cv
243.825 326.027 239.209 330.65 229.403 330.071 cv
224.788 329.494 213.25 328.338 210.943 323.716 cv
209.212 320.827 210.943 306.383 211.519 302.918 cv
212.673 294.251 216.134 291.94 223.634 287.896 cv
236.901 280.385 244.978 286.163 258.824 288.473 cv
261.708 289.051 264.593 289.051 267.477 290.206 cv
267.477 290.206 266.323 297.14 265.169 300.606 cv
cp
.682353 .623529 .552941 rgb
f
272.95 306.858 mo
275.382 315.79 288.357 318.227 295.654 322.288 cv
311.874 330.408 336.2 348.275 354.85 338.53 cv
378.367 325.536 371.878 297.923 360.526 280.057 cv
352.418 267.063 352.418 263.815 335.389 265.439 cv
324.846 266.251 311.874 267.063 301.332 270.312 cv
288.357 275.185 282.68 284.931 273.76 295.487 cv
273.76 295.487 270.517 299.547 272.95 306.858 cv
cp
.698039 .643137 .572549 rgb
f
332.156 524.389 mo
331.579 524.389 306.128 546.151 300.358 556.551 cv
296.321 562.328 294.013 571.572 291.706 577.927 cv
288.821 586.593 289.975 588.903 296.897 595.26 cv
306.128 604.505 323.617 607.518 335.154 598.851 cv
347.268 589.03 379.051 567.701 379.627 553.833 cv
380.204 546.325 384.798 526.807 384.266 519.075 cv
383.066 501.66 364.435 496.97 351.343 508.776 cv
332.156 524.389 li
cp
.647059 .592157 .52549 rgb
f
112.219 276.876 mo
118.319 277.032 126.241 277.444 132.131 277.486 cv
140.137 277.406 142.065 276.376 146.958 271.581 cv
154.166 265.043 159.088 255.195 150.147 250.738 cv
140.115 246.191 117.414 237.502 105.042 239.746 cv
98.312 240.822 92.0347 245.959 86.2529 249.046 cv
76.0444 253.996 67.8335 275.742 112.219 276.876 cv
cp
.698039 .643137 .572549 rgb
f
333.817 436.379 mo
333.817 436.379 333.242 436.379 332.665 436.379 cv
333.817 436.379 li
cp
.443137 .411765 .372549 rgb
f
326.518 430.272 mo
327.252 431.02 li
323.128 428.957 317.449 430.23 314.153 433.588 cv
308.947 438.228 307.644 446.847 301.788 452.153 cv
295.278 458.782 289.421 464.085 286.167 472.704 cv
283.564 478.671 290.614 495.908 293.045 503.962 cv
305.457 545.078 321.203 520.88 327.06 517.563 cv
341.378 509.608 370.351 494.895 370.351 445.022 cv
370.351 437.702 336.932 426.958 326.518 430.272 cv
cp
.682353 .623529 .552941 rgb
f
196.367 652.222 mo
214.111 649.493 229.988 655.296 235.754 660.749 cv
241.78 666.969 215.153 682.052 207.764 688.476 cv
203.011 693.689 204.26 693.901 200.29 700.149 cv
196.851 705.394 194.987 711.435 191.549 716.679 cv
187.578 722.924 184.667 727.168 177.03 730.289 cv
168.071 734.648 165.97 733.588 159.154 727.604 cv
153.383 723.419 138.422 715.224 136.34 709.095 cv
133.743 700.165 142.294 695.359 144.693 687.051 cv
147.102 676.206 144.472 667.229 156.857 661.428 cv
163.971 658.039 193.25 652.7 196.367 652.222 cv
cp
.580392 .529412 .470588 rgb
f
50.811 756.856 mo
56.0034 742.413 49.9941 747.885 61.5317 735.753 cv
73.0684 723.62 91.5298 728.819 106.528 726.507 cv
123.834 724.196 130.757 722.464 148.063 729.397 cv
158.447 733.439 172.082 735.34 180.158 743.428 cv
187.08 750.362 192.651 774.358 182.844 778.402 cv
177.652 780.136 167.677 780.816 161.908 780.816 cv
155.563 780.816 148.64 780.816 141.718 780.816 cv
124.989 780.816 122.574 786.24 105.844 786.817 cv
100.652 786.817 86.8589 778.705 81.6665 779.285 cv
76.4756 779.863 67.3774 777.503 63.3008 780.279 cv
60.5742 782.136 54.6582 783.957 53.5054 783.957 cv
49.8315 785.061 45.8975 779.746 48.8525 773.29 cv
50.811 756.856 li
cp
f
69.082 848.888 mo
63.8901 846 48.3911 837.372 41.4683 833.326 cv
29.9307 826.394 14.0039 832.711 15.1567 818.268 cv
16.8882 794.003 69.6646 769.884 89.2783 787.794 cv
101.971 798.771 113.507 812.061 104.278 828.814 cv
97.9312 839.791 82.3506 853.24 69.082 848.618 cv
69.082 848.888 li
cp
.443137 .411765 .372549 rgb
f
266.757 892.411 mo
263.802 890.768 260.849 892.823 256.91 890.522 cv
250.341 886.576 243.117 881.972 243.773 873.751 cv
244.759 859.938 267.089 847.438 278.254 857.635 cv
285.479 863.883 292.045 871.447 286.792 880.983 cv
283.18 887.234 274.31 894.889 266.757 892.258 cv
266.757 892.411 li
cp
f
131.217 651.893 mo
143.549 644.142 139.16 659.657 140.902 668.377 cv
143.396 678.905 129.382 694.861 122.508 702.328 cv
109.802 715.104 97.48 726.288 78.9233 724.911 cv
66.8188 723.653 52.605 718.433 42.8237 711.745 cv
31.3477 704.713 11.1895 694.165 11.792 680.129 cv
12.5757 659.642 20.917 653.434 37.3643 650.847 cv
50.6299 649.391 73.8413 651.641 86.9561 653.692 cv
98.376 655.401 96.2476 651.391 113.186 652.449 cv
118.079 652.754 130.604 653.304 131.648 651.155 cv
131.217 651.893 li
cp
.729412 .678431 .615686 rgb
f
385.377 1015.31 mo
379.08 1005.41 380.32 998.698 372.425 993.368 cv
368.53 989.952 340.908 993.535 336.634 989.986 cv
333.116 986.702 330.291 975.471 324.741 975.576 cv
319.03 976.141 307.497 1000.61 306.934 1007.08 cv
306.066 1018.06 298.526 1040.27 305.747 1042.15 cv
335.424 1049.88 390.323 1058.07 385.377 1015.31 cv
cp
.741176 .694118 .639216 rgb
f
208.559 755.512 mo
203.113 747.82 194.651 738.614 197.063 728.823 cv
199.429 718.193 207.188 706.435 214.775 699.305 cv
223.573 691.272 231.467 682.026 242.117 677.254 cv
252.348 672.502 264.014 671.036 275.194 668.336 cv
287.63 665.566 296.615 668.863 306.66 676.306 cv
316.288 683.771 316.714 691.729 315.229 703.149 cv
312.781 720.085 304.103 738.194 295.224 752.534 cv
290.587 759.925 284.619 764.796 276.344 766.921 cv
268.906 769 260.676 767.618 254.843 768.351 cv
254.843 768.351 221.607 772.031 208.559 755.512 cv
cp
.545098 .498039 .443137 rgb
f
130.701 786.502 mo
115.702 788.234 105.312 792.107 112.235 809.439 cv
117.427 823.884 127.233 835.438 141.656 841.217 cv
153.193 846.416 165.885 843.527 177.422 845.839 cv
188.96 847.571 213.299 856.184 224.837 856.762 cv
232.914 856.762 257.192 861.711 256.616 850.155 cv
209.159 771.856 156.661 783.614 130.701 786.502 cv
cp
.682353 .623529 .552941 rgb
f
112.812 911.781 mo
108.197 911.204 102.427 910.625 97.813 908.894 cv
89.1597 905.425 89.1597 897.337 83.3906 893.293 cv
77.6221 889.827 73.584 894.449 68.3921 888.672 cv
63.2007 883.472 65.5078 878.272 67.8159 871.916 cv
68.3921 869.605 70.123 866.14 71.2759 863.251 cv
73.0073 858.051 70.123 859.783 74.1606 855.741 cv
78.7769 850.54 89.1597 847.651 94.9287 844.186 cv
101.851 839.562 105.312 833.208 113.966 832.052 cv
122.619 830.896 127.233 835.518 133.003 840.14 cv
137.617 843.607 142.232 847.651 147.425 849.385 cv
152.04 850.54 159.539 848.229 163 851.117 cv
172.807 859.783 157.231 877.694 153.193 885.784 cv
151.462 889.827 150.886 897.337 147.425 900.227 cv
142.81 904.849 138.195 902.538 133.003 904.271 cv
125.503 907.16 118.003 914.671 110.503 910.625 cv
112.812 911.781 li
cp
.545098 .498039 .443137 rgb
f
172.506 912.296 mo
180.979 922.811 195.142 923.831 208.458 925.933 cv
220.574 927.789 246.146 928.01 248.866 911.635 cv
251.217 897.064 239.314 875.812 227.828 867.815 cv
220.646 863.207 215.018 860.173 206.623 858.452 cv
200.027 857.101 191.168 851.522 185.034 854.029 cv
173.364 859.163 162.939 879.604 160.603 891.044 cv
160.603 891.044 167.493 906.252 172.506 912.296 cv
cp
.713726 .658824 .596078 rgb
f
173.192 1012.96 mo
187.454 1012.83 191.591 1014.96 194.374 1017.95 cv
197.694 1022.11 196.735 1034.6 196.536 1040.37 cv
196.599 1048.58 158.653 1048.58 156.769 1046.31 cv
148.781 1036.9 149.942 1018.49 159.151 1012.57 cv
161.858 1011.04 173.192 1012.96 173.192 1012.96 cv
cp
.443137 .411765 .372549 rgb
f
343.158 723.58 mo
356.887 730.771 372.382 723.344 373.443 727.633 cv
374.386 733.32 395.089 797.152 333.245 772.97 cv
324.726 769.641 310.105 750.215 309.517 747.083 cv
306.923 733.974 317.927 716.94 329.927 715.995 cv
333.34 715.923 343.158 723.58 343.158 723.58 cv
cp
f
157.231 908.315 mo
149.155 899.648 148.578 901.383 138.195 907.16 cv
132.426 910.625 124.926 912.937 121.465 919.293 cv
116.273 927.959 120.888 930.848 127.233 935.469 cv
135.887 942.402 136.464 944.713 146.27 940.093 cv
153.771 937.202 178.577 932.004 180.307 923.337 cv
180.307 922.759 180.307 922.182 179.73 921.604 cv
179.73 921.604 167.616 918.714 157.231 908.315 cv
cp
f
316.926 919.796 mo
305.895 920.27 302.344 914.624 294.654 911.845 cv
287.762 909.452 279.481 915.18 273.896 912.45 cv
257.647 903.531 293.232 884.76 297.379 876.523 cv
306.249 862.288 307.322 845.895 326.301 842.769 cv
410.55 828.887 379.627 916.542 347.059 909.601 cv
347.059 909.601 331.371 919.037 316.926 919.796 cv
cp
.478431 .435294 .388235 rgb
f
323.652 834.688 mo
336.344 822.556 338.074 809.845 331.729 794.822 cv
327.691 784.422 317.306 761.892 305.77 757.846 cv
296.54 754.958 282.117 770.557 270.579 772.291 cv
257.887 774.024 245.196 773.446 232.505 777.492 cv
225.005 779.8 223.275 779.8 225.582 789.046 cv
227.889 795.979 233.658 801.178 236.543 807.533 cv
241.158 818.511 242.312 832.955 253.849 838.155 cv
260.195 841.044 268.271 841.621 274.617 842.777 cv
281.54 843.933 286.154 847.978 292.501 849.709 cv
298.846 851.441 305.191 849.709 308.653 843.933 cv
308.653 843.933 319.614 838.731 323.652 834.688 cv
cp
.580392 .529412 .470588 rgb
f
373.311 827.522 mo
375.28 801.119 364.752 779.342 351.353 778.658 cv
344.341 778.052 333.196 821.867 334.023 829.549 cv
335.035 838.939 367.13 842.762 371.544 832.533 cv
373.311 827.522 li
cp
.443137 .411765 .372549 rgb
f
376.535 636.955 mo
364.238 613.367 316.039 602.191 304.211 608.386 cv
297.892 611.414 311.557 654.539 316.333 660.696 cv
322.171 668.22 351.655 655.249 350.016 644.264 cv
376.535 636.955 li
cp
f
115.119 986.311 mo
123.772 984.578 135.31 970.135 137.041 962.046 cv
141.656 947.603 122.619 937.202 112.812 929.114 cv
102.427 920.448 90.3135 914.094 79.353 906.582 cv
71.853 900.805 71.2759 899.648 62.6226 905.425 cv
55.7002 909.471 53.3936 914.094 49.355 920.448 cv
43.0093 933.159 44.7388 935.469 45.8936 949.336 cv
47.0469 963.201 43.5869 974.757 56.8545 984 cv
68.9688 993.245 77.0449 997.289 91.4678 993.245 cv
100.697 990.356 121.465 988.623 123.196 977.646 cv
115.119 986.311 li
cp
.580392 .529412 .470588 rgb
f
310.279 978.146 mo
315.472 979.878 320.087 953.303 319.51 947.525 cv
318.356 930.193 299.896 933.081 289.512 923.26 cv
274.513 908.814 271.052 925.569 254.323 926.727 cv
246.247 927.304 217.979 923.837 224.325 934.813 cv
228.363 941.748 241.631 951.57 248.554 956.771 cv
257.207 963.125 267.591 967.168 277.397 972.368 cv
291.244 978.723 313.742 994.323 316.626 967.168 cv
310.279 978.146 li
cp
.443137 .411765 .372549 rgb
f
300.529 1016.07 mo
299.857 1010.08 307.853 996.685 303.042 992.382 cv
299.295 989.444 283.201 980.557 278.444 979.144 cv
262.098 975.054 252.905 991.683 238.084 995.193 cv
225.336 998.55 202.045 990.849 198.316 1007.68 cv
188.081 1047.16 274.822 1047.7 290.908 1043.94 cv
290.908 1043.94 302.186 1030.86 300.529 1016.07 cv
cp
.545098 .498039 .443137 rgb
f
195.186 763.931 mo
188.34 766.742 184.009 772.96 186.479 778.907 cv
188.673 783.761 196.625 785.315 200.683 788.31 cv
203.167 789.975 205.228 792.141 207.923 793.555 cv
209.358 794.337 212.679 797.138 214.362 797.27 cv
217.551 797.383 217.208 794.946 218.518 790.903 cv
219.829 786.856 228.494 772.068 225.182 770.742 cv
194.641 758.508 195.186 763.931 195.186 763.931 cv
cp
.443137 .411765 .372549 rgb
f
171.878 945.78 mo
179.377 929.602 195.53 923.825 209.951 931.913 cv
216.875 935.379 223.796 939.424 228.412 945.201 cv
235.335 953.29 240.527 958.489 248.603 966 cv
268.217 984.488 241.104 982.179 229.565 983.91 cv
216.296 985.643 206.491 994.888 193.799 986.222 cv
178.8 975.245 157.696 975.606 171.878 945.78 cv
cp
.682353 .623529 .552941 rgb
f
147.588 999.226 mo
144.175 988.972 135.303 962.994 139.397 953.426 cv
141.445 947.956 149.635 942.486 155.096 946.589 cv
159.875 949.323 161.922 963.679 163.287 968.464 cv
167.382 979.402 198.316 995.193 192.975 1009.46 cv
192.975 1009.46 153.048 1013.58 147.588 999.226 cv
cp
.443137 .411765 .372549 rgb
f
327.238 970.891 mo
325.364 959.736 320.349 931.428 327.168 922.805 cv
330.72 917.805 369.419 911.077 374.989 916.542 cv
380.04 920.463 372.837 944.643 373.443 949.789 cv
375.978 961.798 374.929 977.391 371.036 988.059 cv
371.036 988.059 330.664 986.671 327.238 970.891 cv
cp
.545098 .498039 .443137 rgb
f
101.048 993.133 mo
95.1025 995.138 87.1938 997.452 81.5508 999.535 cv
74.0049 1002.56 73.0991 1004.67 72.7651 1013.04 cv
71.7964 1024.65 75.9883 1039.98 88.5127 1042.85 cv
102.154 1045.45 131.587 1049.14 141.337 1041.56 cv
146.77 1037.63 148.116 1028.29 150.833 1021.94 cv
156.087 1011.43 144.304 978.55 101.048 993.133 cv
cp
.682353 .623529 .552941 rgb
f
1069.33 276.466 mo
1075.63 286.367 1075.48 289.012 1083.38 294.342 cv
1087.27 297.757 1103.41 293.025 1107.69 296.575 cv
1111.21 299.86 1114.03 311.093 1119.58 310.986 cv
1125.29 310.421 1136.82 285.95 1137.39 279.481 cv
1138.26 268.5 1145.8 246.289 1138.57 244.409 cv
1108.9 236.681 1064.38 233.708 1069.33 276.466 cv
cp
.741176 .694118 .639216 rgb
f
1135.23 391.958 mo
1135.22 390.338 1135.15 388.715 1134.99 387.102 cv
1133.65 382.914 1135.25 381.791 1132.73 377.107 cv
1132.19 376.089 1131.69 374.666 1128.57 372.609 cv
1124.96 370.493 1121.23 368.591 1114.83 368.865 cv
1101.18 369.583 1086.35 378.504 1086.35 378.504 cv
1053.83 380.165 1067.39 465.788 1105.97 441.684 cv
1121.28 432.072 1122.06 430.032 1130.44 416.574 cv
1130.79 415.893 1134.19 407.623 1135.23 404.165 cv
1135.44 398.981 1135.28 397.136 1135.23 391.958 cv
cp
.478431 .435294 .388235 rgb
f
1071.01 459.04 mo
1069.04 485.443 1079.57 507.22 1092.97 507.903 cv
1099.98 508.51 1111.13 464.696 1110.3 457.012 cv
1109.29 447.623 1077.19 443.801 1072.78 454.03 cv
1071.01 459.04 li
cp
.443137 .411765 .372549 rgb
f
1068.62 629.992 mo
1064.55 603.535 1064.55 584.407 1068.87 568.864 cv
1073.39 552.572 1076.06 516.048 1090.16 511.549 cv
1102.49 507.296 1114.58 533.663 1126.89 539.488 cv
1146.49 548.607 1131.8 557.366 1125.11 569.751 cv
1111.69 594.58 1104.38 702.033 1075.53 661.334 cv
1068.62 629.992 li
cp
.647059 .592157 .52549 rgb
f
1117.08 315.673 mo
1118.96 326.825 1123.97 355.134 1117.15 363.757 cv
1113.6 368.759 1083.01 375.3 1077.44 369.835 cv
1072.39 365.912 1073.89 344.072 1073.29 338.925 cv
1070.75 326.916 1069.39 309.171 1073.29 298.502 cv
1073.29 298.502 1113.66 299.892 1117.08 315.673 cv
cp
.545098 .498039 .443137 rgb
f
265.01 235.377 mo
274.529 231.397 279.968 224.63 274.529 216.271 cv
267.729 206.321 269.09 198.759 253.679 199.156 cv
239.628 199.156 200.65 187.217 192.491 202.739 cv
188.412 209.903 195.211 217.068 198.837 223.436 cv
203.824 231.795 207.901 238.958 219.233 240.551 cv
236.456 243.338 265.01 235.377 265.01 235.377 cv
cp
.756863 .713726 .658824 rgb
f
485.205 203.279 mo
489.992 199.61 490.261 192.806 486.371 188.298 cv
482.193 183.563 474.696 174.774 468.924 172.043 cv
456.236 165.668 437.862 194.065 431.544 202.598 cv
426.593 209.412 413.593 217.212 408.928 224.254 cv
403.123 232.728 409.611 237.207 416.065 239.08 cv
426.291 242.087 455.008 243.073 464.244 237.335 cv
473.765 231.825 484.421 236.359 491.94 229.254 cv
495.186 225.757 486.862 204.134 487.651 199.615 cv
485.205 203.279 li
cp
.443137 .411765 .372549 rgb
f
687.398 83.6733 mo
684.442 82.0298 681.491 84.0854 677.55 81.7842 cv
670.982 77.8374 663.757 73.2329 664.414 65.0107 cv
665.4 51.1982 687.729 38.7007 698.894 48.8965 cv
706.119 55.144 712.686 62.7085 707.433 72.2466 cv
703.82 78.4951 694.951 86.1504 687.398 83.52 cv
687.398 83.6733 li
cp
f
310.199 54.4946 mo
318.853 44.6733 314.571 35.1177 318.034 22.9844 cv
304.765 14.3179 295.778 19.8301 282.509 16.9409 cv
275.587 14.6304 266.935 15.2085 259.434 12.897 cv
253.088 10.5869 249.051 4.23145 241.551 6.54248 cv
234.052 9.43066 223.091 35.4292 225.398 42.9399 cv
229.437 55.6509 255.396 57.3838 265.779 59.6953 cv
272.125 61.4282 281.417 69.3501 287.763 69.3501 cv
292.378 69.3501 296.072 67.5679 304.975 61.0283 cv
304.975 61.0283 304.431 60.8506 310.199 54.4946 cv
cp
.513726 .466667 .415686 rgb
f
795.633 201.357 mo
789.335 191.457 789.48 188.812 781.587 183.481 cv
777.691 180.065 761.549 184.798 757.275 181.249 cv
753.757 177.964 750.931 166.731 745.381 166.838 cv
739.67 167.402 728.138 191.874 727.575 198.344 cv
726.708 209.323 719.997 229.63 726.388 233.415 cv
755.097 250.417 834.501 257.394 795.633 201.357 cv
cp
.741176 .694118 .639216 rgb
f
533.452 103.043 mo
528.837 102.466 523.069 101.888 518.453 100.154 cv
509.8 96.688 509.8 88.5991 504.031 84.5552 cv
498.263 81.0879 494.225 85.7109 489.033 79.9336 cv
483.841 74.7329 486.148 69.5342 488.456 63.1777 cv
489.033 60.8672 490.764 57.4004 491.917 54.5122 cv
493.647 49.312 490.764 51.0454 494.801 47.002 cv
499.417 41.8013 509.8 38.9121 515.569 35.4458 cv
522.491 30.8232 525.953 24.4688 534.607 23.313 cv
543.26 22.1582 547.874 26.7803 553.643 31.4028 cv
558.259 34.8682 562.873 38.9121 568.066 40.6455 cv
572.681 41.8013 580.179 39.4902 583.642 42.3794 cv
593.448 51.0454 577.872 68.9561 573.834 77.0449 cv
572.104 81.0879 571.526 88.5991 568.066 91.4883 cv
563.451 96.1094 558.836 93.7988 553.643 95.5327 cv
546.144 98.4219 538.645 105.932 531.145 101.888 cv
533.452 103.043 li
cp
.545098 .498039 .443137 rgb
f
475.188 93.7988 mo
483.264 86.8662 483.841 87.4443 483.841 77.0449 cv
483.841 71.2671 484.994 64.334 483.841 58.5566 cv
480.957 47.002 464.227 29.0913 452.113 27.3579 cv
442.306 25.6245 425 29.6685 414.615 31.4028 cv
397.886 34.2905 403.655 44.1133 407.116 55.6675 cv
410 67.2227 408.271 79.3555 416.922 88.5991 cv
423.847 96.1094 434.806 104.776 444.036 107.665 cv
451.536 109.398 466.535 109.976 469.418 100.154 cv
469.418 100.154 470.573 98.4219 475.188 93.7988 cv
cp
.647059 .592157 .52549 rgb
f
423.896 108.356 mo
418.126 108.933 412.357 111.245 406.589 112.401 cv
398.513 113.556 396.781 115.866 390.437 120.489 cv
379.475 128 382.938 118.178 373.706 116.444 cv
368.515 115.289 362.169 122.799 355.247 117.021 cv
351.785 113.556 350.631 103.156 352.363 99.1113 cv
353.516 95.0674 356.977 93.3345 358.131 88.7119 cv
359.285 84.668 356.977 80.0459 357.554 76.002 cv
358.708 60.9795 379.475 56.3579 393.32 53.4692 cv
403.127 51.7358 402.55 52.3135 404.281 62.1357 cv
406.013 70.8022 408.32 77.7354 411.781 85.2456 cv
414.666 92.1787 416.973 94.4902 422.165 99.6899 cv
424.473 102.579 423.896 108.356 423.896 108.356 cv
cp
.478431 .435294 .388235 rgb
f
343.609 111.165 mo
344.763 111.165 322.264 123.876 313.611 120.409 cv
308.42 118.098 284.767 85.7446 285.921 78.8115 cv
286.498 74.7666 302.074 67.2554 305.535 64.3677 cv
310.15 60.3232 317.073 51.0791 323.419 51.0791 cv
331.495 51.0791 333.802 60.3232 336.109 66.6787 cv
336.687 69.5664 337.264 74.7666 339.57 77.0776 cv
341.878 79.9668 347.07 79.3892 348.224 81.7002 cv
353.416 89.21 345.339 101.921 347.647 108.854 cv
343.609 111.165 li
cp
.647059 .592157 .52549 rgb
f
593.146 103.558 mo
601.62 114.073 615.782 115.093 629.099 117.195 cv
641.215 119.051 666.787 119.273 669.507 102.897 cv
671.858 88.3271 659.955 67.0737 648.469 59.0762 cv
641.287 54.4688 635.66 51.4341 627.264 49.7139 cv
620.667 48.3623 611.809 42.7837 605.674 45.291 cv
594.003 50.4248 583.58 70.8662 581.244 82.3037 cv
581.244 82.3037 588.134 97.5127 593.146 103.558 cv
cp
.713726 .658824 .596078 rgb
f
593.833 204.224 mo
608.096 204.087 612.231 206.222 615.015 209.208 cv
618.334 213.369 617.375 225.858 617.176 231.632 cv
617.24 239.842 579.294 239.837 577.41 237.577 cv
569.422 228.166 570.583 209.754 579.792 203.828 cv
582.5 202.302 593.833 204.224 593.833 204.224 cv
cp
.443137 .411765 .372549 rgb
f
577.872 99.5767 mo
569.796 90.9106 569.218 92.645 558.836 98.4219 cv
553.066 101.888 545.567 104.199 542.106 110.554 cv
536.914 119.221 541.529 122.109 547.874 126.731 cv
556.528 133.664 557.104 135.976 566.912 131.354 cv
574.411 128.465 599.217 123.265 600.948 114.599 cv
600.948 114.021 600.948 113.443 600.371 112.865 cv
600.371 112.865 588.256 109.976 577.872 99.5767 cv
cp
f
737.568 111.058 mo
726.535 111.531 722.985 105.887 715.294 103.105 cv
708.402 100.714 700.121 106.441 694.536 103.712 cv
678.289 94.7939 713.872 76.022 718.019 67.7852 cv
726.89 53.5503 730.746 44.1953 746.942 34.0303 cv
787.761 8.53027 802.102 99.1045 767.7 100.861 cv
767.7 100.861 752.012 110.297 737.568 111.058 cv
cp
.478431 .435294 .388235 rgb
f
125.039 102.486 mo
141.339 96.7593 154.694 78.5996 151.55 70.4214 cv
145.314 52.2959 119.197 42.5083 108.87 61.3418 cv
105.909 66.7451 95.8257 121.503 109.703 131.011 cv
123.578 140.521 125.039 102.486 125.039 102.486 cv
cp
.545098 .498039 .443137 rgb
f
289.819 224.457 mo
307.393 218.221 318.432 205.224 315.061 196.37 cv
313.458 191.667 282.058 196.921 277.341 199.641 cv
271.579 202.965 278.242 224.795 286.09 224.739 cv
289.819 224.457 li
cp
.443137 .411765 .372549 rgb
f
269.646 101.765 mo
277.722 98.8755 288.683 84.4316 283.491 75.1885 cv
278.299 65.9443 251.187 62.4775 241.956 59.5889 cv
236.764 57.8555 229.842 54.9668 224.648 54.3892 cv
217.149 54.3892 211.381 59.0117 204.458 61.8994 cv
190.037 67.0991 177.922 64.7886 164.077 66.5215 cv
155.424 67.6777 155.424 69.4106 156 77.4995 cv
156.577 83.855 157.154 94.8315 160.038 100.032 cv
164.653 109.276 187.729 109.276 198.112 109.276 cv
210.226 109.276 223.496 108.12 236.187 107.542 cv
247.147 106.964 264.454 111.587 271.954 104.076 cv
273.685 101.765 274.837 100.609 275.993 97.7207 cv
269.646 101.765 li
cp
.682353 .623529 .552941 rgb
f
535.76 177.573 mo
544.413 175.84 555.95 161.396 557.682 153.308 cv
562.297 138.864 543.26 128.465 533.452 120.375 cv
523.069 111.71 510.954 105.355 499.994 97.8433 cv
492.494 92.0654 491.917 90.9106 483.264 96.688 cv
476.341 100.732 474.034 105.355 469.996 111.71 cv
463.65 124.42 465.38 126.731 466.535 140.597 cv
467.688 154.463 464.227 166.019 477.495 175.262 cv
489.609 184.506 497.686 188.551 512.108 184.506 cv
521.339 181.617 542.106 179.884 543.836 168.907 cv
535.76 177.573 li
cp
.580392 .529412 .470588 rgb
f
341.157 169.448 mo
339.207 168.215 325.329 176.308 323.304 179.373 cv
320.694 182.834 320.291 189.479 322.886 193.672 cv
326.257 199.892 331.925 197.34 339.345 197.429 cv
351.061 197.168 363.23 197.449 374.485 200.472 cv
379.624 201.676 385.996 205.446 388.994 202.997 cv
393.166 199.757 390.123 191.191 390.13 187.363 cv
390.006 184.474 392.434 174.766 391.201 172.2 cv
388.474 168.943 375.198 168.985 371.42 169.409 cv
364.588 168.924 358.532 170.463 351.831 169.039 cv
344.61 167.541 341.157 169.448 341.157 169.448 cv
cp
.443137 .411765 .372549 rgb
f
440.303 182.293 mo
469.979 152.571 470.176 133.664 451.139 116.331 cv
441.333 106.51 413.953 111.195 405.876 119.284 cv
392.031 132.571 410.33 147.017 401.723 161.488 cv
398.456 166.98 402.942 173.988 404.096 174.566 cv
400.058 186.121 381.698 220.782 407.658 215.582 cv
419.772 212.692 440.303 182.293 440.303 182.293 cv
cp
.615686 .560784 .498039 rgb
f
730.921 169.407 mo
736.112 171.141 740.728 144.564 740.15 138.787 cv
738.998 121.454 720.537 124.343 710.152 114.521 cv
695.154 100.077 691.692 116.832 674.963 117.988 cv
666.887 118.566 638.62 115.099 644.965 126.076 cv
649.004 133.01 662.272 142.831 669.194 148.031 cv
677.847 154.386 688.232 158.43 698.039 163.631 cv
711.884 169.986 734.382 185.585 737.266 158.43 cv
730.921 169.407 li
cp
.443137 .411765 .372549 rgb
f
183.515 158.72 mo
190.438 158.72 199.667 166.231 206.014 163.92 cv
211.782 162.187 223.689 153.136 222.536 146.781 cv
221.383 142.159 210.052 129.833 207.168 125.789 cv
196.783 112.5 184.093 115.967 170.248 109.612 cv
158.132 104.412 150.056 89.9678 136.788 100.945 cv
104.482 125.789 183.515 158.72 183.515 158.72 cv
cp
f
721.169 207.333 mo
720.498 201.338 728.494 187.946 723.683 183.643 cv
719.937 180.706 703.842 171.818 699.085 170.405 cv
682.738 166.315 673.546 182.944 658.725 186.455 cv
645.978 189.812 629.463 182.138 625.729 198.963 cv
611.981 260.907 697.97 242.844 714.057 239.08 cv
714.057 239.08 722.827 222.12 721.169 207.333 cv
cp
.545098 .498039 .443137 rgb
f
306.162 140.597 mo
314.815 129.042 313.085 115.754 298.662 110.554 cv
286.548 106.51 268.665 113.443 255.973 114.021 cv
248.474 114.598 240.974 114.021 233.475 115.176 cv
229.437 115.754 218.476 115.754 215.015 117.487 cv
208.669 120.953 213.284 123.842 217.322 130.775 cv
221.36 137.708 222.514 140.02 231.167 141.753 cv
305.634 156.668 306.162 140.597 306.162 140.597 cv
cp
f
189.45 246.928 mo
196.022 239.757 190.538 218.617 179.401 215.561 cv
170.049 213.193 156.342 217.616 146.581 218.09 cv
140.814 218.515 135.04 218.23 129.279 219.011 cv
126.175 219.404 117.742 219.506 115.092 220.602 cv
110.234 222.79 113.807 224.518 116.966 228.736 cv
120.125 232.952 121.915 231.953 127.701 235.342 cv
165.36 257.394 189.45 246.928 189.45 246.928 cv
cp
.443137 .411765 .372549 rgb
f
398.513 150.444 mo
400.329 156.048 392.202 161.072 387.887 163.904 cv
375.817 169.972 363.249 166.79 351.558 161.177 cv
340.508 156.073 322.18 148.332 326.875 133.821 cv
332.075 118.669 350.411 116.522 363.687 120.785 cv
382.52 127.887 399.299 132.32 398.036 156.317 cv
398.513 150.444 li
cp
.513726 .466667 .415686 rgb
f
592.519 137.041 mo
600.019 120.864 616.17 115.086 630.592 123.176 cv
637.515 126.642 644.438 130.686 649.053 136.462 cv
655.976 144.551 661.167 149.751 669.244 157.262 cv
688.858 175.75 661.744 173.439 650.207 175.172 cv
636.938 176.905 627.131 186.149 614.44 177.483 cv
599.44 166.506 578.337 166.868 592.519 137.041 cv
cp
.682353 .623529 .552941 rgb
f
568.229 190.487 mo
564.816 180.234 555.943 154.256 560.038 144.687 cv
562.086 139.218 570.277 133.749 575.737 137.851 cv
580.515 140.584 582.563 154.94 583.928 159.726 cv
588.023 170.663 618.957 186.455 613.616 200.721 cv
613.616 200.721 573.69 204.843 568.229 190.487 cv
cp
.443137 .411765 .372549 rgb
f
747.878 162.152 mo
746.004 150.999 740.99 122.69 747.809 114.065 cv
751.36 109.065 781.952 102.525 787.521 107.989 cv
792.573 111.911 791.071 133.751 791.677 138.899 cv
794.211 150.907 795.569 168.652 791.677 179.321 cv
791.677 179.321 751.306 177.932 747.878 162.152 cv
cp
.545098 .498039 .443137 rgb
f
310.777 186.817 mo
314.238 182.195 318.276 178.729 322.892 175.262 cv
330.968 168.907 335.006 168.329 329.237 158.507 cv
327.508 155.619 319.43 142.908 315.969 142.331 cv
311.354 141.175 299.817 152.152 294.048 153.308 cv
281.356 156.774 265.204 146.952 264.048 163.129 cv
262.896 176.418 266.357 193.751 282.509 194.906 cv
293.47 195.483 310.777 186.817 310.777 186.817 cv
cp
.443137 .411765 .372549 rgb
f
205.208 178.729 mo
207.515 171.218 213.861 166.019 219.63 160.24 cv
226.552 153.308 231.167 148.686 240.974 149.264 cv
245.589 149.841 257.127 150.997 259.434 155.619 cv
261.166 158.507 259.434 172.951 258.859 176.418 cv
257.704 185.084 254.242 187.396 246.742 191.439 cv
233.475 198.95 225.398 193.172 211.552 190.861 cv
208.669 190.284 205.784 190.284 202.9 189.128 cv
202.9 189.128 204.054 182.195 205.208 178.729 cv
cp
.682353 .623529 .552941 rgb
f
197.426 172.478 mo
194.996 163.544 182.02 161.108 174.723 157.046 cv
158.503 148.926 134.177 131.06 115.525 140.805 cv
92.0098 153.799 98.4985 181.411 109.85 199.277 cv
117.958 212.272 117.958 215.52 134.988 213.895 cv
145.531 213.083 158.503 212.272 169.045 209.022 cv
182.02 204.15 187.696 194.404 196.616 183.847 cv
196.616 183.847 199.86 179.788 197.426 172.478 cv
cp
.698039 .643137 .572549 rgb
f
521.689 184.394 mo
515.744 186.399 507.835 188.713 502.191 190.796 cv
494.646 193.818 493.74 195.935 493.406 204.306 cv
492.437 215.913 495.437 239.693 507.961 242.567 cv
521.602 245.169 549.957 244.919 559.708 237.335 cv
565.141 233.406 568.756 219.551 571.475 213.204 cv
576.729 202.687 564.945 169.811 521.689 184.394 cv
cp
.682353 .623529 .552941 rgb
f
358.159 202.458 mo
352.057 202.303 344.135 201.891 338.246 201.85 cv
330.239 201.929 328.311 202.958 323.419 207.754 cv
316.211 214.292 311.289 224.139 320.23 228.597 cv
330.263 233.144 361.76 250.045 374.132 247.8 cv
380.862 246.723 389.763 240.423 395.545 237.335 cv
405.754 232.385 402.543 203.593 358.159 202.458 cv
cp
.698039 .643137 .572549 rgb
f
964.713 235.987 mo
974.231 232.007 979.669 225.24 974.231 216.881 cv
967.433 206.932 968.793 199.369 953.382 199.768 cv
939.332 199.768 900.353 187.826 892.194 203.349 cv
888.115 210.513 894.915 217.678 898.54 224.047 cv
903.525 232.404 906.145 233.999 917.475 235.591 cv
934.698 238.376 964.713 235.987 964.713 235.987 cv
cp
.756863 .713726 .658824 rgb
f
1009.9 55.105 mo
1018.56 45.2832 1014.27 35.7271 1017.74 23.5947 cv
1004.47 14.9297 995.481 20.4395 982.212 17.5513 cv
975.289 15.2412 966.637 15.8193 959.137 13.5078 cv
952.792 11.1973 948.753 4.84131 941.254 7.15234 cv
933.754 10.041 922.794 36.0391 925.101 43.5508 cv
929.14 56.2617 955.099 57.9941 965.482 60.3057 cv
971.829 62.0391 981.121 69.9609 987.466 69.9609 cv
992.082 69.9609 995.775 68.1777 1004.68 61.6396 cv
1004.68 61.6396 1004.13 61.4609 1009.9 55.105 cv
cp
.513726 .466667 .415686 rgb
f
1123.6 108.966 mo
1117.83 109.544 1112.06 111.854 1106.29 113.01 cv
1098.22 114.167 1096.49 116.477 1090.14 121.098 cv
1079.18 128.61 1082.64 118.788 1073.41 117.054 cv
1068.22 115.898 1061.87 123.41 1054.95 117.632 cv
1051.49 114.167 1050.33 103.767 1052.07 99.7212 cv
1053.22 95.6772 1056.68 93.9443 1057.83 89.3218 cv
1058.99 85.2778 1056.68 80.6558 1057.26 76.6118 cv
1058.41 61.5903 1079.18 56.9678 1093.02 54.0791 cv
1102.83 52.3467 1102.25 52.9238 1103.98 62.7461 cv
1105.71 71.4121 1108.02 78.3457 1111.48 85.8555 cv
1114.37 92.7891 1116.67 95.1001 1121.87 100.3 cv
1124.17 103.188 1123.6 108.966 1123.6 108.966 cv
cp
.478431 .435294 .388235 rgb
f
1043.31 111.775 mo
1044.47 111.775 1021.97 124.486 1013.31 121.02 cv
1008.12 118.709 984.47 86.355 985.624 79.4219 cv
986.201 75.3765 1001.78 67.8662 1005.24 64.9766 cv
1009.85 60.9331 1016.78 51.6895 1023.12 51.6895 cv
1031.2 51.6895 1033.51 60.9331 1035.81 67.2891 cv
1036.39 70.1777 1036.97 75.3765 1039.27 77.6885 cv
1041.58 80.5771 1046.77 79.9985 1047.93 82.3096 cv
1053.12 89.8208 1045.04 102.532 1047.35 109.464 cv
1043.31 111.775 li
cp
.647059 .592157 .52549 rgb
f
824.742 103.096 mo
841.041 97.3701 854.396 79.2104 851.254 71.0313 cv
845.018 52.9067 817.15 56.8989 799.729 43.9912 cv
781.608 30.564 788.506 145.271 810.551 136.18 cv
826.166 129.74 824.742 103.096 824.742 103.096 cv
cp
.545098 .498039 .443137 rgb
f
989.522 225.066 mo
1007.1 218.832 1018.13 205.834 1014.77 196.98 cv
1013.16 192.276 981.76 197.532 977.044 200.251 cv
971.282 203.576 977.946 225.405 985.791 225.351 cv
989.522 225.066 li
cp
.443137 .411765 .372549 rgb
f
969.349 102.375 mo
977.426 99.4863 988.385 85.043 983.193 75.7979 cv
978.001 66.5542 950.889 63.0879 941.659 60.1987 cv
936.466 58.4663 929.544 55.5781 924.352 55 cv
916.853 55 911.084 59.6216 904.162 62.5103 cv
889.739 67.71 877.625 65.3994 863.779 67.1323 cv
855.126 68.2871 855.126 70.0205 855.704 78.1094 cv
856.279 84.4658 856.857 95.4424 859.742 100.642 cv
864.358 109.886 887.431 109.886 897.815 109.886 cv
909.93 109.886 923.198 108.73 935.889 108.152 cv
946.85 107.574 964.157 112.196 971.657 104.687 cv
973.386 102.375 974.542 101.22 975.694 98.3306 cv
969.349 102.375 li
cp
.682353 .623529 .552941 rgb
f
1040.86 170.059 mo
1038.91 168.825 1025.03 176.919 1023.01 179.984 cv
1020.4 183.444 1019.99 190.088 1022.59 194.283 cv
1025.96 200.502 1031.63 197.95 1039.05 198.04 cv
1050.76 197.778 1062.93 198.059 1074.19 201.081 cv
1079.33 202.286 1085.7 206.057 1088.7 203.608 cv
1092.87 200.366 1089.83 191.802 1089.83 187.975 cv
1089.71 185.084 1092.14 175.376 1090.9 172.81 cv
1088.18 169.553 1074.9 169.594 1071.12 170.019 cv
1064.29 169.535 1058.24 171.074 1051.53 169.65 cv
1044.31 168.152 1040.86 170.059 1040.86 170.059 cv
cp
.443137 .411765 .372549 rgb
f
1141.5 187.294 mo
1171.18 157.573 1171.38 138.666 1152.34 121.332 cv
1142.53 111.512 1115.15 116.196 1107.08 124.285 cv
1093.23 137.572 1111.53 152.018 1102.92 166.49 cv
1099.66 171.982 1104.14 178.99 1105.3 179.567 cv
1101.26 191.123 1082.9 225.783 1108.86 220.584 cv
1120.97 217.694 1141.5 187.294 1141.5 187.294 cv
cp
.615686 .560784 .498039 rgb
f
883.218 159.331 mo
890.14 159.331 899.371 166.841 905.717 164.531 cv
911.486 162.797 923.392 153.747 922.24 147.391 cv
921.085 142.769 909.755 130.443 906.87 126.398 cv
896.487 113.111 883.795 116.577 869.95 110.222 cv
857.834 105.022 849.759 90.5786 836.491 101.556 cv
804.186 126.398 883.218 159.331 883.218 159.331 cv
cp
.443137 .411765 .372549 rgb
f
1005.86 141.207 mo
1014.52 129.653 1012.79 116.363 998.366 111.163 cv
986.25 107.12 968.368 114.053 955.676 114.631 cv
948.177 115.209 940.677 114.631 933.177 115.786 cv
929.14 116.363 918.178 116.363 914.718 118.097 cv
908.373 121.564 912.988 124.453 917.025 131.386 cv
921.064 138.318 922.217 140.63 930.871 142.362 cv
1005.34 157.279 1005.86 141.207 1005.86 141.207 cv
cp
.545098 .498039 .443137 rgb
f
892.494 238.208 mo
899.065 231.036 890.241 219.227 879.105 216.171 cv
869.753 213.803 856.046 218.226 846.284 218.7 cv
840.517 219.125 834.744 218.841 828.981 219.619 cv
825.878 220.013 817.445 220.116 814.796 221.213 cv
809.939 223.399 813.511 225.128 816.669 229.347 cv
819.827 233.563 818.911 238.969 825.581 239.951 cv
898.218 250.648 892.219 247.648 892.494 238.208 cv
cp
.443137 .411765 .372549 rgb
f
1098.22 151.055 mo
1100.03 156.659 1091.91 161.683 1087.59 164.515 cv
1075.52 170.582 1062.95 167.399 1051.26 161.79 cv
1040.21 156.684 1021.88 148.942 1026.58 134.431 cv
1031.78 119.28 1050.11 117.132 1063.39 121.396 cv
1082.22 128.496 1099 132.93 1097.74 156.927 cv
1098.22 151.055 li
cp
.513726 .466667 .415686 rgb
f
1010.48 187.427 mo
1013.94 182.806 1017.98 179.338 1022.59 175.873 cv
1030.67 169.518 1034.71 168.939 1028.94 159.118 cv
1027.21 156.229 1019.13 143.519 1015.67 142.941 cv
1011.06 141.784 999.519 152.762 993.75 153.918 cv
981.059 157.384 964.906 147.563 963.752 163.739 cv
962.598 177.027 966.061 194.36 982.212 195.517 cv
993.174 196.094 1010.48 187.427 1010.48 187.427 cv
cp
.443137 .411765 .372549 rgb
f
904.91 179.338 mo
907.218 171.828 913.564 166.628 919.333 160.851 cv
926.254 153.918 930.871 149.295 940.677 149.874 cv
945.292 150.451 956.831 151.607 959.137 156.229 cv
960.868 159.118 959.137 173.563 958.561 177.027 cv
957.407 185.694 953.946 188.004 946.446 192.049 cv
933.177 199.561 925.1 193.782 911.256 191.472 cv
908.373 190.894 905.487 190.894 902.602 189.739 cv
902.602 189.739 903.756 182.806 904.91 179.338 cv
cp
.682353 .623529 .552941 rgb
f
897.13 173.087 mo
894.698 164.155 881.723 161.718 874.424 157.656 cv
858.208 149.537 833.88 131.669 815.23 141.415 cv
791.713 154.41 798.201 182.021 809.553 199.888 cv
817.662 212.882 817.662 216.13 834.691 214.506 cv
845.233 213.694 858.208 212.882 868.749 209.634 cv
881.723 204.761 887.4 195.014 896.319 184.458 cv
896.319 184.458 899.563 180.398 897.13 173.087 cv
cp
.698039 .643137 .572549 rgb
f
1057.86 203.069 mo
1051.76 202.914 1043.84 202.502 1037.95 202.459 cv
1029.94 202.539 1028.02 203.568 1023.12 208.364 cv
1015.91 214.902 1010.99 224.751 1019.93 229.207 cv
1029.96 233.754 1052.67 242.444 1065.04 240.199 cv
1071.77 239.123 1078.05 233.987 1083.83 230.899 cv
1094.04 225.949 1102.25 204.204 1057.86 203.069 cv
cp
f
108.26 202.452 mo
101.963 192.551 94.5977 190.934 86.7036 185.604 cv
82.8081 182.188 66.6655 186.919 62.3911 183.37 cv
58.8726 180.085 56.0483 168.853 50.4976 168.959 cv
44.7871 169.524 33.2544 193.995 32.6919 200.465 cv
31.8237 211.445 32.3413 247.664 39.562 249.544 cv
69.2393 257.272 113.207 245.209 108.26 202.452 cv
cp
.741176 .694118 .639216 rgb
f
34.8496 87.9873 mo
34.8647 89.6074 34.9302 91.2305 35.0938 92.8438 cv
36.4316 97.0313 34.8271 98.1548 37.3481 102.838 cv
37.8955 103.855 38.3877 105.279 41.5093 107.336 cv
45.1182 109.452 48.8525 111.354 55.2461 111.08 cv
68.9009 110.362 83.7319 101.44 83.7319 101.44 cv
116.254 99.7798 102.695 14.1572 64.1089 38.2627 cv
48.7988 47.873 48.0215 49.9131 39.6367 63.3701 cv
39.293 64.0527 35.8911 72.3223 34.8496 75.7803 cv
34.6426 80.9634 34.8018 82.8091 34.8496 87.9873 cv
cp
.478431 .435294 .388235 rgb
f
52.9946 164.272 mo
51.1216 153.121 46.1064 124.811 52.9248 116.188 cv
56.4761 111.187 87.0693 104.645 92.6392 110.11 cv
97.6909 114.033 96.188 135.874 96.7939 141.021 cv
99.3271 153.029 100.686 170.774 96.7939 181.443 cv
96.7939 181.443 56.4229 180.053 52.9946 164.272 cv
cp
.545098 .498039 .443137 rgb
f
1098.98 909.713 mo
1115.28 903.987 1128.64 885.827 1125.5 877.648 cv
1119.26 859.522 1093.14 849.735 1082.82 868.569 cv
1079.85 873.972 1069.77 928.729 1083.65 938.237 cv
1097.52 947.747 1098.98 909.713 1098.98 909.713 cv
cp
f
61.8794 1026.3 mo
67.0259 1010.85 60.8633 991.792 52.7173 990.353 cv
35.0928 986.597 12.2329 1002.32 20.6909 1019.34 cv
23.1177 1024.23 59.4009 1058.15 74.8662 1051.84 cv
90.332 1045.53 61.8794 1026.3 61.8794 1026.3 cv
cp
f
1081.92 796.027 mo
1062.3 777.376 1069.18 734.194 1074.6 707.395 cv
1081.17 669.035 1127.63 658.327 1150.7 686.883 cv
1156.71 695.004 1158.77 713.544 1152.79 723.836 cv
1152.79 723.836 1125.21 838.282 1081.92 796.027 cv
cp
.443137 .411765 .372549 rgb
f
1147.29 1045.08 mo
1153.87 1037.91 1152.44 1029.77 1141.3 1026.71 cv
1131.95 1024.34 1122.8 1020.07 1113.03 1020.55 cv
1107.27 1020.97 1096.04 1021.07 1090.28 1021.85 cv
1087.17 1022.25 1079.64 1030.66 1076.99 1031.75 cv
1072.13 1033.94 1075.71 1035.67 1078.86 1039.89 cv
1082.02 1044.1 1082.93 1045.51 1089.6 1046.49 cv
1147.01 1054.95 1147.29 1045.08 1147.29 1045.08 cv
cp
f
1095.02 950.704 mo
1089.22 953.594 1082.56 947.12 1080.82 952.506 cv
1077.57 964.345 1075.64 998.279 1085.04 1009.14 cv
1097.38 1022.73 1115.45 1014.48 1126.11 1004.43 cv
1133.88 997.222 1136.12 996.753 1132.54 985.787 cv
1130.46 978.972 1131.52 961.586 1127.76 955.123 cv
1122.53 947.292 1111.51 953.938 1102.96 949.595 cv
1102.96 949.595 1099.7 948.047 1095.02 950.704 cv
cp
.698039 .643137 .572549 rgb
f
626.447 1059.4 mo
616.93 1063.38 611.49 1070.15 616.93 1078.51 cv
623.728 1088.46 622.368 1096.02 637.778 1095.62 cv
651.83 1095.62 690.808 1107.56 698.966 1092.04 cv
703.045 1084.88 696.247 1077.71 692.621 1071.34 cv
687.634 1062.98 696.715 1044.61 685.384 1043.02 cv
668.161 1040.24 626.447 1059.4 626.447 1059.4 cv
cp
.756863 .713726 .658824 rgb
f
406.252 1091.5 mo
401.467 1095.17 401.195 1101.97 405.087 1106.48 cv
409.265 1111.21 416.762 1120 422.534 1122.73 cv
435.221 1129.11 453.597 1100.71 459.913 1092.18 cv
464.864 1085.37 472.845 1080.03 477.51 1072.99 cv
483.314 1064.51 472.991 1053.47 466.536 1051.6 cv
456.312 1048.59 443.825 1053.46 434.59 1059.2 cv
425.07 1064.71 408.438 1046.18 400.918 1053.29 cv
397.671 1056.79 404.596 1090.64 403.806 1095.16 cv
406.252 1091.5 li
cp
.443137 .411765 .372549 rgb
f
95.8237 1093.42 mo
102.121 1103.32 101.977 1105.97 109.871 1111.29 cv
113.766 1114.71 129.908 1109.98 134.183 1113.53 cv
137.702 1116.81 140.526 1128.04 146.077 1127.94 cv
151.788 1127.38 163.32 1102.91 163.882 1096.43 cv
164.75 1085.45 175.884 1055.17 168.664 1053.29 cv
138.986 1045.56 90.877 1050.66 95.8237 1093.42 cv
cp
.741176 .694118 .639216 rgb
f
297.625 1090.55 mo
283.362 1090.69 279.227 1088.56 276.442 1085.57 cv
273.123 1081.41 274.082 1068.92 274.281 1063.15 cv
274.217 1054.93 312.163 1054.94 314.047 1057.2 cv
322.037 1066.61 320.874 1085.02 311.666 1090.95 cv
308.958 1092.47 297.625 1090.55 297.625 1090.55 cv
cp
.443137 .411765 .372549 rgb
f
313.585 1195.2 mo
321.662 1203.87 322.238 1202.13 332.622 1196.36 cv
338.391 1192.89 345.891 1190.58 349.352 1184.22 cv
354.543 1175.56 349.928 1172.67 343.583 1168.05 cv
334.93 1161.11 334.353 1158.8 324.545 1163.42 cv
317.045 1166.31 292.241 1171.51 290.51 1180.18 cv
290.51 1180.76 290.51 1181.33 291.087 1181.91 cv
291.087 1181.91 303.202 1184.8 313.585 1195.2 cv
cp
f
578.778 1035.57 mo
583.095 1054.13 576.271 1088.32 579.641 1097.17 cv
581.243 1101.88 617.635 1101.41 615.904 1096.33 cv
608.998 1076.08 615.116 1043.95 607.27 1044 cv
578.778 1035.57 li
cp
f
355.697 1117.2 mo
347.044 1118.94 335.506 1133.38 333.777 1141.47 cv
329.161 1155.91 348.198 1166.31 358.005 1174.4 cv
368.389 1183.07 380.503 1189.42 391.463 1196.93 cv
398.963 1202.71 399.542 1203.87 408.194 1198.09 cv
415.117 1194.05 417.423 1189.42 421.462 1183.07 cv
427.808 1170.36 426.077 1168.05 424.923 1154.18 cv
423.77 1140.31 427.23 1128.76 413.963 1119.51 cv
401.848 1110.27 393.771 1106.22 379.349 1110.27 cv
370.119 1113.16 349.352 1114.89 347.621 1125.87 cv
355.697 1117.2 li
cp
.580392 .529412 .470588 rgb
f
550.3 1125.33 mo
552.251 1126.56 566.129 1118.47 568.153 1115.4 cv
570.763 1111.94 571.167 1105.3 568.571 1101.11 cv
565.2 1094.89 559.532 1097.44 552.113 1097.35 cv
540.397 1097.61 528.226 1097.33 516.974 1094.3 cv
511.834 1093.1 505.463 1089.33 502.464 1091.78 cv
498.292 1095.02 501.335 1103.58 501.328 1107.41 cv
501.452 1110.3 499.025 1120.01 500.257 1122.58 cv
502.984 1125.83 516.26 1125.79 520.037 1125.37 cv
526.869 1125.85 532.925 1124.31 539.627 1125.74 cv
546.848 1127.24 550.3 1125.33 550.3 1125.33 cv
cp
.443137 .411765 .372549 rgb
f
451.155 1112.48 mo
421.479 1142.21 421.282 1161.11 440.318 1178.45 cv
450.125 1188.27 477.504 1183.58 485.58 1175.49 cv
499.426 1162.21 481.128 1147.76 489.735 1133.29 cv
493.002 1127.8 488.515 1120.79 487.361 1120.21 cv
491.399 1108.66 509.76 1074 483.799 1079.2 cv
471.685 1082.08 451.155 1112.48 451.155 1112.48 cv
cp
.615686 .560784 .498039 rgb
f
160.537 1125.37 mo
155.345 1123.64 150.729 1150.21 151.307 1155.99 cv
152.459 1173.32 170.921 1170.43 181.305 1180.26 cv
196.304 1194.7 199.766 1177.94 216.494 1176.79 cv
224.57 1176.21 252.838 1179.68 246.493 1168.7 cv
242.454 1161.77 229.186 1151.95 222.263 1146.75 cv
213.609 1140.39 203.225 1136.35 193.419 1131.15 cv
179.573 1124.79 157.076 1109.19 154.191 1136.35 cv
160.537 1125.37 li
cp
.443137 .411765 .372549 rgb
f
707.943 1136.06 mo
701.02 1136.06 691.79 1128.54 685.444 1130.86 cv
679.675 1132.59 667.768 1141.64 668.921 1148 cv
670.075 1152.62 681.406 1164.95 684.291 1168.99 cv
694.675 1182.28 707.365 1178.81 721.21 1185.17 cv
733.325 1190.37 741.401 1204.81 754.67 1193.83 cv
786.975 1168.99 707.943 1136.06 707.943 1136.06 cv
cp
f
170.288 1087.44 mo
170.959 1093.44 162.964 1106.83 167.775 1111.14 cv
171.521 1114.07 187.615 1122.96 192.373 1124.37 cv
208.719 1128.46 217.912 1111.83 232.732 1108.32 cv
245.479 1104.97 265.529 1113.39 267.954 1096.33 cv
278.087 1025.09 201.154 1046.99 185.068 1050.76 cv
185.068 1050.76 168.631 1072.66 170.288 1087.44 cv
cp
.545098 .498039 .443137 rgb
f
585.296 1154.18 mo
576.642 1165.74 578.373 1179.02 592.795 1184.22 cv
604.91 1188.27 622.792 1181.33 635.484 1180.76 cv
642.984 1180.18 650.483 1180.76 657.982 1179.6 cv
662.021 1179.02 672.982 1179.02 676.443 1177.29 cv
682.789 1173.82 678.173 1170.93 674.135 1164 cv
670.097 1157.07 668.943 1154.76 660.29 1153.02 cv
585.823 1138.11 585.296 1154.18 585.296 1154.18 cv
cp
f
704.247 1054.16 mo
696.276 1064.13 698.033 1075.46 711.575 1079.73 cv
722.944 1083.05 739.594 1076.92 751.457 1076.28 cv
758.464 1075.7 765.481 1076.11 772.482 1075.04 cv
776.252 1074.5 786.501 1074.37 789.718 1072.85 cv
795.618 1069.82 791.272 1067.41 787.423 1061.53 cv
783.576 1055.66 782.471 1053.7 774.363 1052.32 cv
704.573 1040.43 704.247 1054.16 704.247 1054.16 cv
cp
.443137 .411765 .372549 rgb
f
492.945 1144.33 mo
491.129 1138.73 499.254 1133.7 503.571 1130.87 cv
515.64 1124.8 528.208 1127.99 539.899 1133.6 cv
550.95 1138.7 569.278 1146.44 564.583 1160.96 cv
559.382 1176.11 541.047 1178.25 527.771 1173.99 cv
508.938 1166.89 492.158 1162.46 493.421 1138.46 cv
492.945 1144.33 li
cp
.513726 .466667 .415686 rgb
f
298.938 1157.74 mo
291.439 1173.91 275.287 1179.69 260.865 1171.6 cv
253.943 1168.14 247.02 1164.09 242.404 1158.31 cv
235.482 1150.23 230.29 1145.03 222.213 1137.51 cv
202.6 1119.03 229.713 1121.34 241.251 1119.6 cv
254.519 1117.87 264.326 1108.63 277.018 1117.29 cv
292.016 1128.27 313.121 1127.91 298.938 1157.74 cv
cp
.682353 .623529 .552941 rgb
f
323.229 1104.29 mo
326.641 1114.54 335.515 1140.52 331.419 1150.09 cv
329.372 1155.56 321.181 1161.03 315.72 1156.93 cv
310.943 1154.19 308.895 1139.84 307.53 1135.05 cv
303.434 1124.11 272.5 1108.32 277.841 1094.06 cv
277.841 1094.06 317.768 1089.93 323.229 1104.29 cv
cp
.443137 .411765 .372549 rgb
f
143.58 1132.63 mo
145.453 1143.78 150.467 1172.09 143.649 1180.71 cv
140.097 1185.71 109.505 1192.25 103.935 1186.79 cv
98.8838 1182.86 100.386 1161.03 99.7798 1155.88 cv
97.2461 1143.87 95.8892 1126.12 99.7798 1115.46 cv
99.7798 1115.46 140.152 1116.84 143.58 1132.63 cv
cp
.545098 .498039 .443137 rgb
f
578.954 1110.49 mo
575.493 1115.11 571.455 1118.58 566.84 1122.05 cv
558.763 1128.4 554.725 1128.98 560.493 1138.8 cv
562.225 1141.69 570.301 1154.4 573.762 1154.98 cv
578.377 1156.14 589.915 1145.16 595.684 1144 cv
608.375 1140.54 624.527 1150.36 625.682 1134.18 cv
626.835 1120.89 623.374 1103.56 607.222 1102.4 cv
596.26 1101.83 578.954 1110.49 578.954 1110.49 cv
cp
.443137 .411765 .372549 rgb
f
686.25 1116.05 mo
683.942 1123.56 677.596 1128.76 671.828 1134.54 cv
664.906 1141.47 660.29 1146.09 650.483 1145.51 cv
645.869 1144.93 634.33 1143.78 632.024 1139.16 cv
630.293 1136.27 632.024 1121.83 632.6 1118.36 cv
633.753 1109.69 637.215 1107.38 644.715 1103.34 cv
657.982 1095.83 666.059 1101.6 679.904 1103.92 cv
682.789 1104.49 685.673 1104.49 688.558 1105.65 cv
688.558 1105.65 687.404 1112.58 686.25 1116.05 cv
cp
.682353 .623529 .552941 rgb
f
694.031 1122.3 mo
696.462 1131.23 709.438 1133.67 716.736 1137.73 cv
732.955 1145.85 757.282 1163.72 775.931 1153.97 cv
799.447 1140.98 792.96 1113.37 781.608 1095.5 cv
773.5 1082.5 773.5 1079.26 756.47 1080.88 cv
745.928 1081.69 732.955 1082.5 722.413 1085.75 cv
709.438 1090.63 703.761 1100.37 694.841 1110.93 cv
694.841 1110.93 691.598 1114.99 694.031 1122.3 cv
cp
.698039 .643137 .572549 rgb
f
370.63 1111.23 mo
376.578 1109.22 384.485 1106.91 390.13 1104.82 cv
397.675 1101.8 398.581 1099.69 398.915 1091.32 cv
399.883 1079.71 399.627 1048.57 387.103 1045.69 cv
373.461 1043.09 345.66 1054.98 330.119 1052.45 cv
323.453 1051.36 323.563 1076.07 320.847 1082.42 cv
315.592 1092.93 327.375 1125.81 370.63 1111.23 cv
cp
.682353 .623529 .552941 rgb
f
533.3 1092.32 mo
539.4 1092.47 547.321 1092.89 553.212 1092.93 cv
561.217 1092.85 563.146 1091.82 568.038 1087.02 cv
575.248 1080.49 580.812 1053.53 571.871 1049.07 cv
561.839 1044.52 538.494 1052.94 526.122 1055.19 cv
519.393 1056.27 498.219 1050.2 492.438 1053.29 cv
482.23 1058.24 488.914 1091.18 533.3 1092.32 cv
cp
.698039 .643137 .572549 rgb
f
794.119 1091.67 mo
800.436 1102.4 800.222 1105.31 808.308 1110.99 cv
812.281 1114.65 829.191 1109.09 833.553 1112.89 cv
837.136 1116.42 839.807 1128.7 845.585 1128.46 cv
851.541 1127.71 864.123 1100.55 864.864 1093.43 cv
866.026 1081.34 874.401 1056.76 866.933 1054.86 cv
836.237 1047.05 789.99 1044.79 794.119 1091.67 cv
cp
.741176 .694118 .639216 rgb
f
997.328 1091.16 mo
983.067 1091.3 978.93 1089.17 976.146 1086.18 cv
972.827 1082.02 972.291 1061.59 972.488 1055.82 cv
972.425 1047.61 1006.87 1047.65 1008.75 1049.91 cv
1016.74 1059.32 1020.58 1085.63 1011.37 1091.56 cv
1008.66 1093.08 997.328 1091.16 997.328 1091.16 cv
cp
.443137 .411765 .372549 rgb
f
1013.29 1195.81 mo
1021.37 1204.48 1021.94 1202.74 1032.33 1196.96 cv
1038.09 1193.5 1045.59 1191.19 1049.05 1184.83 cv
1054.25 1176.17 1049.63 1173.28 1043.29 1168.66 cv
1034.63 1161.72 1034.06 1159.41 1024.25 1164.03 cv
1016.75 1166.92 991.944 1172.12 990.213 1180.79 cv
990.213 1181.37 990.213 1181.95 990.791 1182.52 cv
990.791 1182.52 1002.9 1185.41 1013.29 1195.81 cv
cp
f
1055.4 1117.81 mo
1046.75 1119.55 1035.21 1133.99 1033.48 1142.08 cv
1028.86 1156.52 1047.9 1166.92 1057.71 1175.01 cv
1068.09 1183.68 1080.21 1190.03 1091.17 1197.54 cv
1098.67 1203.32 1099.25 1204.48 1107.9 1198.7 cv
1114.82 1194.66 1117.13 1190.03 1121.17 1183.68 cv
1127.51 1170.97 1125.78 1168.66 1124.63 1154.79 cv
1123.47 1140.92 1126.93 1129.37 1113.67 1120.13 cv
1101.55 1110.88 1093.48 1106.84 1079.05 1110.88 cv
1069.82 1113.77 1049.05 1115.5 1047.32 1126.48 cv
1055.4 1117.81 li
cp
.580392 .529412 .470588 rgb
f
860.241 1125.98 mo
855.048 1124.25 850.433 1150.82 851.011 1156.6 cv
852.164 1173.93 870.625 1171.04 881.008 1180.87 cv
896.006 1195.31 899.469 1178.56 916.197 1177.4 cv
924.273 1176.82 952.542 1180.29 946.197 1169.31 cv
942.159 1162.38 928.889 1152.56 921.966 1147.36 cv
913.313 1141 902.929 1136.96 893.124 1131.76 cv
879.277 1125.4 856.779 1109.8 853.893 1136.96 cv
860.241 1125.98 li
cp
.443137 .411765 .372549 rgb
f
869.833 1088.18 mo
870.536 1094.15 862.677 1107.43 867.478 1111.74 cv
871.215 1114.69 887.242 1123.63 891.971 1125.06 cv
908.221 1129.22 917.248 1112.72 931.939 1109.31 cv
944.573 1106.04 973.351 1127.56 969.898 1072.7 cv
967.357 1032.35 896.05 1046.25 880.105 1049.91 cv
880.105 1049.91 868.1 1073.44 869.833 1088.18 cv
cp
.545098 .498039 .443137 rgb
f
998.643 1158.35 mo
991.143 1174.52 974.99 1180.3 960.57 1172.21 cv
953.646 1168.75 946.724 1164.7 942.108 1158.93 cv
935.185 1150.84 929.993 1145.64 921.917 1138.13 cv
902.303 1119.64 929.417 1121.95 940.956 1120.21 cv
954.223 1118.48 964.03 1109.24 976.721 1117.9 cv
991.719 1128.88 1012.82 1128.52 998.643 1158.35 cv
cp
.682353 .623529 .552941 rgb
f
1022.93 1104.9 mo
1026.35 1115.15 1035.22 1141.13 1031.12 1150.7 cv
1029.08 1156.17 1020.89 1161.64 1015.42 1157.54 cv
1010.65 1154.8 1008.6 1140.45 1007.23 1135.66 cv
1003.14 1124.72 972.204 1108.93 977.545 1094.67 cv
977.545 1094.67 1017.47 1090.55 1022.93 1104.9 cv
cp
.443137 .411765 .372549 rgb
f
843.282 1133.24 mo
845.155 1144.39 850.171 1172.7 843.353 1181.32 cv
839.8 1186.32 801.101 1193.05 795.533 1187.58 cv
790.48 1183.66 797.683 1159.48 797.079 1154.34 cv
794.543 1142.33 795.592 1126.74 799.485 1116.07 cv
799.485 1116.07 839.855 1117.46 843.282 1133.24 cv
cp
.545098 .498039 .443137 rgb
f
1069.47 1110.99 mo
1075.42 1108.99 1083.33 1106.67 1088.97 1104.59 cv
1096.52 1101.57 1097.42 1099.45 1097.76 1091.08 cv
1098.72 1079.47 1088.62 1055.32 1076.1 1052.45 cv
1062.46 1049.84 1030.59 1044.86 1020.84 1052.45 cv
1015.4 1056.37 1022.41 1075.84 1019.69 1082.18 cv
1014.43 1092.7 1026.21 1125.58 1069.47 1110.99 cv
cp
.682353 .623529 .552941 rgb
f
1108.64 1077.83 mo
1103.49 1093.27 1109.66 1112.33 1117.8 1113.77 cv
1135.43 1117.53 1158.29 1101.8 1149.83 1084.78 cv
1147.4 1079.9 1111.12 1045.98 1095.65 1052.29 cv
1080.19 1058.59 1108.64 1077.83 1108.64 1077.83 cv
cp
.545098 .498039 .443137 rgb
f
23.2251 1059.05 mo
16.6519 1066.22 18.0835 1074.36 29.2202 1077.41 cv
38.5718 1079.78 47.7241 1084.05 57.4873 1083.58 cv
63.2534 1083.15 74.481 1083.05 80.2432 1082.27 cv
83.3477 1081.88 90.8809 1073.47 93.5288 1072.37 cv
98.3872 1070.18 94.8149 1068.46 91.6548 1064.24 cv
88.4971 1060.02 87.5903 1058.61 80.9194 1057.63 cv
23.5112 1049.18 23.2251 1059.05 23.2251 1059.05 cv
cp
.443137 .411765 .372549 rgb
f
75.5024 1153.42 mo
81.3013 1150.53 87.9551 1157.01 89.6973 1151.62 cv
92.9463 1139.78 94.8804 1105.85 85.479 1094.99 cv
73.1411 1081.4 55.0723 1089.65 44.4121 1099.7 cv
36.6382 1106.9 34.4028 1107.37 37.9795 1118.34 cv
40.0605 1125.15 39.0024 1142.54 42.7617 1149 cv
47.9883 1156.83 59.0059 1150.19 67.5601 1154.53 cv
67.5601 1154.53 70.8228 1156.08 75.5024 1153.42 cv
cp
.698039 .643137 .572549 rgb
f
120.739 605.254 mo
119.426 597.144 121.845 584.11 114.095 584.011 cv
57.7964 583.29 67.2373 588.69 35.416 578.61 cv
11.5796 571.057 12.4009 626.238 23.1772 641.982 cv
30.8745 653.433 38.8984 647.803 55.0649 646.37 cv
65.0723 645.655 75.7793 642.79 86.1201 643.781 cv
96.3862 644.766 119.614 655.604 128.083 646.302 cv
128.083 646.302 122.488 616.056 120.739 605.254 cv
cp
f
1110.5 850.185 mo
1110.5 850.185 1111.08 850.185 1111.66 850.185 cv
1110.5 850.185 li
cp
.443137 .411765 .372549 rgb
f
1137.02 806.6 mo
1137.42 807.559 li
1134.37 804.151 1127.1 799.42 1122.76 801.346 cv
1116.17 803.771 1113.21 812.141 1105.76 814.946 cv
1097.2 818.75 1085.76 808.119 1079.47 814.946 cv
1074.8 819.547 1070.88 845.062 1075.77 851.966 cv
1081.02 859.72 1092.15 854.776 1098.84 853.816 cv
1115.16 851.61 1132.58 848.407 1141.42 831.871 cv
1144.79 825.331 1147.95 807.291 1137.02 806.6 cv
cp
.682353 .623529 .552941 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 15.0.0%%For: (victoria-haya) ()%%Title: (stone-grey-backgr-01.eps)%%CreationDate: 2/3/15 10:20 PM%%Canvassize: 16383%AI9_DataStream%Gb"-6Gs`7gdQ%/R!PUp+:_3o=pC*]MR:-Xq7DO>f5QX>?&sI:[p&=LYlu,nm4dcG3a61<Z4=:7Y]i<Tie^^5Dfin-EdqEl!C>Jok%<0hn^XLNF"#eZ&^Gg=P"m$$"<F-(<.Wci&;d'=QY&[Z_^5)F+B!`,m'qk`,DMt:On\C9mf2$\c0g[=b?/!]0c]i02_5ClVqQ1rOH%]DHfKeug*cc-413r^#+M2m[E%]KWD"<=>G0#INg_!VCs2pcEi8eN%AO1n$MQ\_5UrLQ;]8!BHgfmkokf!#T=T!LV]fRL[A1`M3CW%IGA\2Zj+EsIG!h.50lU>GUm/8mPT?6p)Jg=;;f2Lpooo>O6[VL+bQSb>/@D[q$N(b:jLa3#6W[/J8&irT>gh?J(^NC+T>TNnUK)*%oJc[gY[6k`1cmcJ:>rG'"0:GWn>X=[gLJ6q6Qdg]qq^+S]mhrM,"8c_Ie15(Xq."d%nKfFmDuC4DG^#!aiFS@#>!#4`c4O,["-%6%c`0IKB33m8X4e/-[4U"(O'!LC4O(WEc+d=0:R^rGZd3kAmLT%qrrm#=D.6L:@(?97'icL5E`e7UMfuH,]$hS7g&cX90q(;p2O\L*%&U^+M>t5[XnP"G<#5e)m8TP1(hec^C79:r=4o=H^`VF]U8$bG<UI>D@Hd0ibpC2h".0?S2:?Wr%U8en%^]md?E-eb>0Q[Ko]`:#[%bY+@W%?H/#:gsn9"Q'6_IbAY1ZoT]W6?9<`D`&6,',[5;TL2aIm1kHoK,,4d*&]kuHJ:GNSuZi^X874)9sB+nEIQQ>[h*<bl@cAS%!\?2?Rnd-/elRB3!a*p8k'nkg+%$`.$i[[hrX8l+)+F<V8]4QZ`HTqQ:L+c$F^=]TQ=4^_$TQMPTD2J!@&kEc<^DgY@a$7;2Go-E%J86Cr*C\U1MQdipL-MqCP$k=9_4F5MT-O`OaYNcNbCT_@B,Q/iAZQDpR)-u(@5G2bZ)@BPF_>=V-aplLiD49DCD&./TAb[s-api+%iD3^f^]`t]CVl_=(Tn$ni^aJRCh-c_rkrs>4$LV@iLC=GCjp2Slb]:H-HknHTFXB7E6PQ-Y_55D:UY9J4bK<A`b%`^"cYnXp((Bd%qX>km`$i]-bs#VO_fopNlOstE=CHVtIJ=KU_UUC;j%fk>5/ElD$J1%t)&4$U0YF^eECRbH#eAk85r/]e_`G58GS>=1.qd3Rj:!Y!%0,n'@MmX,rYRRa1E$h^tHa?_Y:N:gX'3d3j`q;'VYeKlGgYh@/Ad)fTfjU7X1GJ544=k_GE#V-h3/-mSO:+?QL3EhB_`F9Ri=-qH%'G5+jY[]1<3uaa`B:lM[%!!\_N11^0)/e(4)?%VN=%PL>1G^PW<CrLlPN%#1h1G)1s']ib6UK39Pm*Hg*=sEG8aNR`+^c&SML!mb%XJ]o>oH1e'X_@<UNl+%Xn*H\0Z+ngNq_p=sqs9/cBE&6GJ#dee0+?Ok@4:7Jq7en$T;Zu-Y?#._X*=8UAi<B:'D9ZMD/?GkeN<Y@%aa[!V,OOtJUFZ4Gr5IN$I?'Y=I[8]<]/\#4O2&:B^6@&j84q;][64;bP@Z#UB<`J03J(nN[6o;Wo7R8=F8AZ/eUSi7Po+tJX_IZo%Eb)8\VXMmL%Tk78)g]A6!Ib5+rZ77SL%V^u#kfH6Cr7bk38pi2iJ(3<k1"S(8n\UHDLFp#O)8RrbI6mSg8=L\KJ0/PU@0nE3$2?8%X<FE]g[(JO?q+Q3`!\e>R#("<Yml`9=(=$+=p^[&c,8CX[C/Ri""7SqKGg?`Al>-4H:IQ$,_m\'C!.=F7-L:&`tc<ega7<H;4M+]%P_g6H(U8aWZbOEds2)&)9JM/JLK+WaEXVoJL+TfV.K(omSAsaQ["[$TV_MLf(h%3r(4t]tjH9T2*IfOGcufS8m3*R8:oG*K!N3P_%?,B!V,F(%(`r\#c5pggc3DmSW#d-lNVp[cCc*:m(3TpjjYW;`PY7s3PFiu-lZ5Q"kQeYC/;;$k:/`i@.07r]i2PXpqVUU8lT3Hg(%.d9KOD@2^MM/`S`DEssoK?Hq<pe8BMOm1TqgnBmp!ZE<G!^kBAdY;4jd[7]\.NR.dO!-r%g7,4%brlD>W6K1p-"N*X@mG/EQVeo+%Pk,@:eU,0/T$rkfQ;C-iPt4@*<(Nf3Y;UDUK9U@*_^)Zigo\c$P'@HQLP=tMF-Qrbl#8@o)bQ*OY]WmX`$EU)4Bb!]Hr&rebde1B%9\7)Q:s>jImg8lNaXd't3W^bMIcE1mk]X<8>dL;T25(Kf`L;H4'9GdJ)"o>BqNbl>VO88[J-;TOfh?/h*CKiO'\8@cOe=#CT?uc.%=2J-LCM<e^:.LdF/_)XTRd%D#DDtGo'uLX/,qKI[/)ff)E^;,7!_Q\d2oCcT'``_U]/-sY``/k53LYYJ.qSa2hD)K+K[(0#c,@/]%NMY)o@2p^,UlVM3V0Z;.(6G+Ib;dNG$n"A_lSN*j$#Lif5p19ZOF/LX+k%F8DSeOXDB%9a>RroTgA&roQ+*X=c3N-caop9@S>i;@%LIarbY*idU=^[``(,72C3*_J\#!9\u@)@,(,@Fte&*op9+Ooj8,m:auW@\"8,c6$87\qdmF@nkSQ_QND!$)k\`XH.Mc,V[GoadEc%V.j4@VfM,83>_@WO>j,i<<sD`R"?ro5Ns.ca)PJ+([t@a/"oibF<bfQQUY=s8Z=4"%gi6qnt!6HG2CDP'\6e=@K)^-YPCgf'OQf6%@W&lMcqGEg^,j93`Ej%\J8FUX`\a_EoIIXk)O^q;UNmA!QP-R/K\LV:V3mDu/-WHLA4.XMs,+^p,b=4B%46H=ElR_ir?Tn"R3T45%?l_6so4g*H<Q-2;n&37'XCeD()tUS,4^dh52,_:mPP=K4k(O-AgpFi?VdO#0oi!bu">8g]'?tQOVCp6g-^T"UKi$L&GAhQD",^+;%PKA"`)c57(dRGD3oR\\qN&S<.93b:Gj)$fSEf)*;>b;[@58g@Sh-e*SlNYufpR%&14qO8d76kVDCi2#Z;c>fK$8%/hKNsj=hr]Bm%YX6jgf)-!!268b0.(BJV(t3T4e:SpNnTgK][u>lS"KkR@5OpkR,sLTtmW6_kr0<Hp2Da&2"pOTfW-hOUCrT-U7eN;KVjd@8]gWH(%2oBemp_6Cm'h4n0\&T[sd6^)FGY@c4[29:IK\89F4UUJD&quE=ham#VJD:o[Xnm^b3+m%'+O0Kio@JY50RX,(ED6;*>t_#Tbl(u<%:J0i<Q5!;aQm5K9"2l,LAjg"R7T!7V5LT_S/*(l4CG\`e$!ZMII5ZJ%.c6)?Zc>mI_.<-G!/69p<5PsRH,uAS-ZiY*VBQH/.T7TH%b?dcA,_b"'d'Rhp%HDNt4_g3lHJ9FU[,&q-/*R]]emBatFACu;8F=2DIU4A#B:he%VFPIHN^Y_\U>\^4W(Jg%DBV^Q7E1-d?o;F<%1/'HIOcQ55c?0LgrPT\@8*Pg*-Prt_*-.#d),u?6iYaOd%n*M<ZpVoVYK0s_RR1PFA>C>p;uH0!:?J;Ss%?^h:i-ne3Dk)a'csfB%S@R15R>=\`.I=?nMrUC?#.Zo@1@(AH1^]WbMhjpW6V0!RAQ!?4]%tH`0eZhrJ#6.57a%H.C2cqJ>?]uqdHFlZUh)knPs!bO0/fh9%'(0c$XgEu&fXlsO\XZ=,kLMlYHG2XBAAlF<OpHEQE]q9`bY)TK11c1FbBtg-6><51aukW9:>i6>[q)FA3$1tgTPHHmJ]KRP3=SaH%dC\n*Pltk`>iC_\>XVrCj!rQs7-JSU5=oRW\J3VF;8VrDOJ6OoBknu1/F.qVJ#Umdq&pMN[trCR3M[7/_PA*j1G,<+Q/Y6eB[C`<%>*/L0A=a?2gIiSsnMcA6:c`a/K_J-=c6PW=IL=L#23GL-j/S22gcPgopsCC>,g9%qIZ9I3-Sf&*><lU]M4cfu:BA-BZuRqNW7u/@%43h?P<-k`/A>t54e_h'&89bVK6-&m4C$EUJQ&RIL1K$n0@9?MF[`DMT-DR#nq2-YbQb+GHIk(mJM\odk!40L8YK8a`d,?aQ8k,IG%Uq`es&P7[V:mP/T'0-mQ@o=i!*?EteNdBtQ9&^_o=@B,^cFMQ*7M&P[H:LHbLc[b(,:nW(-f^egoHBHJ@/=#;A&Z'qCFl5s,Q:Bd%rY==%Z?'/"V=?pE,oqhlR2iOqZBX!p@k,eN6td,f*bX=NO%9oOQP-"X7)Z*5e*!&pC`Y@2D7$]dGqbA9@i5qlCSZ+ghRH$.()Iq<%*pPbgr!o:[h%69bIBam3.3SE@b_4BiV1teUi`6c6OnL3QG<GH$\K5aJb`_DeWskEWVSnQt:0UH`*$/1XD!iRt=qf@4f-7Fea9(b4%mGpn)RuiWN*lf/mI@6$?3F/K%#AP"'POmJAY_%UFA0VndkI5OQNFoM2Y(n]kPWC<4BrP6S^98.>khXIu&KS0EmAih&jPa")_7\sV%lN&c+&Z1!rp%np-Z2?VK17!Pd<&WI;bkW6ELa9sb1M\EpdUl,a!U?("Spf4%?L2t,9I5IPj_PU@qeo"RP6Ni3a#"Ie,?*,'6q4F)%O+E_c-,K^$11CX9/G;r**:p6WP>.IeQIQ=nddt<XeGTV`%?-PZ*@.]rlchO=eWs\s[[$S<W?-"NW6?`tClt_3&/c.DitP[Xj''Y&%$N:\oKe6H)Lpsi>?\]g]26(M9J"1/'=l"T[r!s.&[du(6RtUZsU$s(umc9[$7;cQF79WPcLESHubYQd\o6daA?oO>>9W*nlUS^Du%,Wr4R`[g-G!*`P*C-tEB;qOehs.Jalcr-l3bL,jI8;Br\WP3.9.qE*,p%-7amG&).NlFKP?"&ZWha#`$aRKOq)N1h2ln:(HfUP$q%q:.$#_S(QKI&bh[9[q_W.%ImQ08fNtoCdhr?:8Kn,9cSdI$kR@R,%;3amc'_X[Csoe2*^ZndtI,U_kGM3RDs>9YE&.3i'\j/ekg+%F#35ACb<PYX_MsfjYUM/HhS^S2W?lZk02IV3OdY7[m_@"7uh?/\NMer&I-MiW'ic^fC_PMeBBEi4P.LA%6TYLp0R*gj?3gkVp(G4%mPZ@O:L?P#9m2?FaVEA.pP-1J/[ACY/epm6SPO"8Fg$Wg`@LUj=jP$0Ko(aY[(+&72;?13Io3V8kl)q9R(hQA>VnO?<<A90RR+sh%\tm=i]&N]-j!*bMjnp.eWsdfI&GAuf;om\'^o4]*04?AO0M*3EP1^=&hh$1_lrdq8/Aa9MSllcaG@G6"/i+hZQl/k&Ojj[Gc'66%%hON@O6m%(O<-^Ke/(O0&)kOD.;gJA!E^0..BI/\kh6dXPMsDS4WA:A'Ufu\'&!u(j2mm+p6RF\"nECV#dZ&6qWYsnQ:!3!i`VK9W%<-.Y':Am&iH=KE?hlGni:k?\HN68Pe1C[,aT3LZiW&][d;.CM)<0ghQ%,p<*]d^DI8jk"m`&YFWCD.H6bh@_:l`Kn\Si??9;N["t%V29IS*%mNj8==rMZreqjP):6;W#8TaZA)"T8&FP;BSE=jRVXY1^gecLPa&LBHFX>$+eSRp?AH(tXR]_lW[UhlT5hI5\:sAu?k]%X%Fr`?Sql-6lC%k_XZcOrGNbLD8jJ7FJ5>6*"]l0M*OPZEbAA3kfo4$*+QfqE>\Zj7;Y/s/=Yquh'MOYX?9i^L:W601F49@==7B#=P%Kn$8W58'P,j-e*?b\X6pc^:LQ]KpeD.lF*dF\1nkC3<cBA7<b>\!_pd>)_]W<>1mh&>!MPNDXcrR\'84H-InHm;c0IKRdXH&F3e\%Mt<QsrrXj*CE"ttW).JlTc(^0FK,ZK0pkcX-MZ8q`)75LG0`2)1Xl54El7iT[26mLrKRR0WUMFJXpcRu2#5_[H.B\96qM"!j17\/%"QZnl>'rTA4J>oCYG=Qgh]t!4BC$\9XIauV]5+[Q)A'MrJd0rM9Ga];5uOf1H+[8?=UV6eR%0f=aNH<_/ngLrK)^*bYfor)kadar%@YHA^^1+S#Lr[HJV;0%qo@/p@-USdu]g]S($Kt0+rMWGdIVR.aQdI;7$d&\ErMii+^m[Kg.Xm@,6V`,[VErDFYZb^tJ!Fq+UL!Dm%A`aDLY,&ea'(ZA]2.9s89?;eTO>-]?e<aiT\Li$-$L(iXGF/,?fg`llM!">g_C2h&-5P03k,G`$RRC[JM^5p5P)@R;GLA>*6F690%&!>T[0p.X8dHF$Y9:]*<C/2aIS0V$[?\4d<056KCm:,UQMFY0G1OJ4CCh2t(51"&b*2<b$2?/'uSEWXLLJdC]g/@?l59N1'4832s%R\WBXc!FPM9/8Sa_lMD./u$^Ld\=gH3/-3>gQOHNJ]&OfFgN3[f!``Gb*-b3n>kX\U(O`S>cdppT2*N"`MK.+c^Lmj*l=OD[*682%8Y!g-h]K=eN/=L9:B[7kel1qX8R'*a/\T;kT<#47c/fd1eG#GBB_e/dS:!-#Cp@MD\J72F"_W/"*qr2/'_VJo%*@ie_BudhO;h)g%95+;c0MhDAb[AYiSt&k5WkY@m.^NRS`1J2C"nn;G4cF'9=/ZhR,"6gtVub4"EIM`:7acQ_B_,>,d>7')iU*$.!r8GBP8C,dd=uCY%5U&-*)Y?eqqp-O!)'r&HOh*g:n!Xs7eY.khK5kn3XmD\.k42cGD+%?,*1Gbr;XjaB?,aU9b_X\<?fn)!V4/_GjOk(.j^+)/B)F7B%HS!-Wg5*fjWY,&eH.CJZ]Z[tQ&cJQfmT'3%if.YfiG0:B*6_dQ?<r,0/'lD7T_.Z#=b0sOW5pS_NPMbNs5k]\P]k4$h:(maADG[6%Yu[R8CB5!CJZ:+Q]p1_Q7CH$'6s4%6b8QMqn?ke:iau&-_BM-cU/tqJ6QQuJo;FF.LM*=Fc39&MNBOUXX;4HS%T6)[b""%UVp<l`%hR5%`\tt7/e\A(:`#]cE/TTXbS3p[NX#`pBjUSHqjn4Md67D%lMMlPDG$^Ka%[W<C9h&SVH2<QuJ')CrH'UHFFhjr9&==('CbuWe%0s.hH7&sT-q[(IoO;W#O05jrsMKO3i^-J-_N.iK1n>s$j3p0;VKBGE3\#c#&8;jm/Wgb7_QSC8t)R8J1gpPFSms9FW\'5>fbgR6V%CK,d%2Up6eKM/?0@2jMk`1bDdRW<8rJ*>`S&`ha,&Q5^d'Alj)fgoYi1T8HOa>,V;WtqQHe?#K+i>M708s28IWQ49RRP+)ULlf5.%e7qEcL&?`c^gc/2bis,lB/aZgX6(C[[6U<HOFDkV=V?i)1?I93qWdl1=a+HRh53p^IZ]/PUb^7-LjD4]4W#/&57qFPYR98t/\<V*%G.N&?mtlL2Br!A9m9"[^hnLQEBis3NI7C?a6[@-1gLdeiAM!+.`H-WD1KYq=ZY8Vl41>Hh7^^m_A&W@e6uOk.0YG)hStY\AW2DI/%WKmdNHPq+d>@co-FMOs=@q'J0g^c=.pI$TuGf'*MSs@b[.QON8\A[0\*QcIcic\VNB_c^Pi@Q7Y,a1A!.gKUnL?]^dDtEL`&Q=a&%9QZ>3AGfQ5i7Ccp,r0s6NoD:o!`R8b`De19jRSd.7^^4@,\dgbo]1'O>&B\c$2(jk[fckT.W[Cd2$RlC%9Z!0YPZkLg<18>$1\L+%Oa`Fu>tf*Yk2)=Aj7XCVQfHk=Ee:S$j63AnQP%mFq9U>=[cnia`_.Q(7]Ob:NR1jeT(4sT6E9kW')enu)>.UU<`:Im"]N-6,L`7-%ac1pEA7LPZR[rr7Q=\!m&80UN@C>\[m_S$pC;T_%jEs"r2'5JPZ_[SaRV<`h0mo%;8^sA**`0S:o_mEI1=n$t#q4E<qJ@dcNQd%'%X]!/@XMe?4%(!UG+Z)$\W4UM-Q57X9V6jjbD_,ZUiX5,JX,IP3-t[(U+M;m&X/P&Zo3g4ms$1n83=h_3R';HsP[8L<K6rWu\L;M%%b3*8Kc#-iBH702"mc/GY,B3nI`e8[)WXdVs<B*[="kksd-5Yf^1o6j)6TL$Hk4Ki<71?5?VPMP:E]LZBZu[#Y(TV`/mWjms"V)?T%@p2Qf)k4a>kL6gi>JBg%qqe*>6:$?bV#3uI:n7ki<JaVVNT_kLS(l"NqeOj=1ab*%_cE@?m_sUI+BB5_C>Jg=)^CPIS=*+BIQO;A%P;U`dm3.:UO)a/A2hH3kNR[6^Pilk#9ZS&$.)#Pk*=>52=`H+SEfZjO.]=L>Y08^bM+%3]bT=l3.>haia._#hLZ8"QD*QN4k?qER%4Bt3['P=$F.C/Xc>UHqab`A\1+2+/:0Nt8M<`"nm#X=^GS@=YSL2gPgOp]H%[>dC[M<3W?%mduf-;0WB\NBr2m'tb0D7<>0a>VM@%`UP)"1F#!6WktC[Hh3+2U,$RX^PtJ4_DIJ#oamm-R%7t3T7md*hA$XQ,&(A-@;g,qJ8%8_[<_]e567422&P_*7BsL(5cn>a0VgOl%AJB:]H0_$qj+Ye?1h:s/qOL_l]IEF)q30/pPeuk<W(l&k%V\A#fYpB]KIZ$/J9.d4&0!"31^`Dho1/N28+sG?^d\$9C8g3!5c4Ek%R\gPih3^=M27$8:`=85b/[FC4%>KPf>,-!*7HR=tDH4<Nh#PUn?-4h^o>(!e=Pf_o&eKC/)I2inKi"g2YU.UMh*>)Un>N/tk69-/%$>%OT3War@\)M5(W3jqM.Fq+'YqlQA]_BgX6q'!r#FDB8AG/-84(FFfpTX/;N`MW?D5CA;<G@_]!kW&4`PoG@/?bkpi+V;63>RUQ%\0s^FCc=fMN0u,(hQRnae:QkgB\$o2^)tM)!$B\28asBDP.hNq6rl'$:G%K'@JRJYmeqr=<JG>.QRBGO9&u#WGUcY*@p@_UbHaNf%qSK8"SoQC.c>h*>g_Q?WdlVlaVI2X/XEU?:NuBIpAQNEE,[>nZ,RYa<NPtQ475g.],TnThRCtrS98!hm16]7RUtc,`*g_slG4LX9%M"DaH/2uJFZF(+o89KpM!#6$&q`KNjYMI9n6,n=5\Q^5_G0KChZo+r"XImu9U5[0FT'KB<@9gf_*2'AbkA7L,npEU<Kqtl/"aQ%S%Al<i!;0bn2hM&2ng*q&>jf-f"L3fG^<Bc;jNn.q0kG1O1(iA]^h@q\f5>h]2IW(Xpm%`5EEV:X9q%?oH0:2KMVJiR(9k7l?Gck)a%V,"amq_AR(H"(@7&#R&Wf1^4OATV9OpO1!jYHZ7I4XQp^Mb1FPlVd\)+!+;@F!7V37R(n.ceY(0C%7RP%IRM\`g)JfjNX'T>=S:W%Z=`t#5IkssVSHH>KA/T#SpWF_jg\"*@Tb9/D,?D)'5BFFD[g&l>Y&-9Oc"Qd/Q^+@<0M'Zg#1B1[A?nob3mU)C;B)34K#5a%:[gd%RkP.EZS68EAo=0Uj\*?q^Vrm<QlX9b#u<4P@0sR+:e56#nh)AR2/;]Q;d7"Rg,rZ`E$4M+\^/.ggXs7S\u!L&&GZg0,rN2KiB,DW%3*q_TdQ#?:FiT:YA\MS$p+59BUZMlOpm7CqD81no'@H?h0'(*f&CZjjs0:#k@[AN^h%T3t'Yn:!.^-"tprR7o1XZM@>UT!6'74oF%_j5>+Lf;Q/e2NT#&..(6=HLorf+2"2f>2#tbHGWbJZo,JC;e@Ob(CLrOQXr4IgeINFoQBsX3@u];UpZ_q!)B#j%"C+e3#CKb@PF8%e#D!Ai&[.?Q`ia7o#3VSAP=t_YroS0QV,G/)d0K%8r_:#@bm3Jkdknn;3?9(gqs$>>a<+gXe3V8KtM_3<iE6$&eq+T3#=7=#"!Nm%A2Ie#panr.SkF]B[h,Q\@`[MAJYg%:n%<4W.5KboC:=VPZPP`:S!33/kKic)X$AIVSY\04pB$Nj\@D3Er'(PA#[F('"VL(_?<A=%%O0Q_WXKAiYg5GR5D8'!:&\m-gX,2aki!@%-S=0:'1dirW)q!?+o,+`UGooh;MjX<%^#jjDP>[i%()92Gs$_uO7@%[VO+lT*'\':h%QC3kX4\TAHj!('fb2#ac9=M,O9)b*(Q?M!-ELAO*_jW^ZP%lqQ9A0tX4Xd<:<=GtllU)iQEG3Aigi$//kdY)/OPPc8iT.8-Zl/ZH%9*lEh&!_Chiujq+;>81hXG_[eku:u#(!><%Wm;t:7/.M.I#HHgZ+;/SZgq@:d=!X8=VO!EI4"5`fj&=afq]*Q$su4220#l^2^^EA%B!*`r`Vu4l2oPVp&TK!cn@Is*Lq"Q\]1)R$hI_sb=H]t'HH9i&>1Oo3<hV0+6e;G,Sl'P3ENat;6DOT:`js7h(sUW&.o5oAEYVYI%S3%$J&m^NBr11d[rS'>.c-B=_"Nm%!2[*r?qeB<M4D2d8SsWX?mmV@K\n2l:iCZOF9fis&Hm=++Nb/O<.(ppEa4XYf#/NRGV-/;N%1:!dcLdUD=$9k,0?DAkP$FRJ;dqSHFbKa\QG=e`:S(Q;0Z'KQ0QR)MLFNj&87stBT((3>o7'W8^$,(ON]+H?%n'/NPKM08!`K6KO%$2=9RR(2=QBa1]"QHttd;QfC3kdq?$SK&uq2-M?\D5uk*(8ae=WRjJ.72,Z+bjVMg,Ru=7F19p?eho3iJ^5or;6CXj?K%d;_9&D6%-]o9!#ci.qie1qombj)d0"9/&!/al\pb9EC3uOD#.brW&lJ%\:%C:rl%%i$(hasqqa[D_((]!Q^a>cY&(ZtUoZRrGlImon"1*^I@%95U)$:0Ft-pO&6MT^RXR&Mq&N<p%=umN^oh#@os"HY:d@9:4d37h%4^KirP\]N:DJj,=;2;0O[2*&'4A^.0EBnVgOHk,Xmf<onY8%=C/mrbUW,)g<_t"_02Vb*1Fn4r.HEUqX0g)fd;9%b]j^+fB>D;,49$+Zm.'K_;BAA'mPtS7;?[;:lV?SK>F]j4%et/O.Bs2?ICbk%A6W.M*lTU9.aW5!7UF/[`'/d!Z0[ucZ^r%rq'[*cMcqi\hEb7O^/L-:Mf:=PX.D)uaKdZs'"QiZrg/c=2EZ1pV7Cb'.o^S[_+2Z2%$<(7UR]p_11[9>2]QTr:G1,6))DY$AV(BYjFtCD?T(2^-bpr/6cHVc5F%9j)I5D&O3D*2;Hd-^DVEfN!,bparB_1,K@nIYDT/^=4%E$t!SCj[1U<`."`%#Sd[q*"c?I+g.]^5RP3Eq2Mt:-sdVK[f5u,=@iTDo7gM-e*<[8!@OH\BhA79'+7FR7]5:24:]JAuqe'mcD).%ESG.ZIkE5=1`NI`i2+<Nd,:'IB!gHmb]7HQ4J*uG-@4NNf!oKU0(E5@1/fjWP%8;l9Lb-7)a!j5bs56OOE>$Q7,DFQ["KY`Qh*4k%fEmp>'=YVpIj]BgpTgW=9lIqD=Pep8h957m`B10JURU*'2"5:pfl'IV*5@_d+MIi'Vr)?8:Y9=NGP]EfF*Q*%TjMA+s#t\TL"<@9%I_kg'$i3G>Yg^=:O#HmkMr%Lt\2uJ_2nFdhb'q*S"O/DL&&0u_L@^Zjr]pFjGL7<eX7]M3Ic<Uq]A@I,fS@hAr[H\Wn!u@t]DZg$%SNYfmr7,V-HeP^p8\NTO]WLpTQOgdYY'910$@ONshJW8qT@<m3C2ES0$A186K,u.oG+hWN'23)4I<:1"lGM(CXki>##'+PRV[5>0%G56B08,-*VrCX2A0fZ<%GIq]PXSItuSNiuIZ2O?_@u#6k]^.<TNR#H]jCaAI_eV1=ZlVF6I!D2P:[7=jl_InVS[OQ9-7JXocGVpD%)92MmIb8MH#3Ul9ZmRs.rigOpDXRH?%%HFD7RLu3[lOt+7&o&W[,(=[pB"=;hJ'[TUgjm11YQkF%d5!b#1dq`daD^LQRQk\##hm<%71:Ee5sq1C0JE;WdJW(O.MM?d>R;=+W%4/)AtsKg?L`B[jnVN6!JC)5#N[%6dQ!8SR2ZALHt6<[MJ^0?c`8Tc<lH6OWq_jP@f<'@%8*glh@rM.;h&OWi5O3Fkma+0J/$O\%(H?L37K'l%=e&WTWKn<l/dqBo>&@5JcosGnHVn2\f[KX'/n:;.=Y/jF2ln*lrG8A^bZ(VR%>">U5,m%g#SI:.VZHNjiXdU4UF/.b]Zi/IZNLr7R`:hCRhQYm#UF8f?JAX!Ai#e4!5\tYSgH=a&0/qh,TX)36()X9)dVbr,*h'="%JH*S+^TtN,XLB^$Baa("MhTP!nT5RedqK9rp__Y;5GmK!,<I`S]rCa1FT_e2>\:ckWZpJ#6s>k"5A%">;u#Gn4Sg#mnTj6VB<0I2%a7"1aBTiY%W-MWNXiu=G;WH]FQG/gDB"O)9ZeslfTcZk9NQ$noN!dFZmMXqkcth6_YWiLMA?=2;'8d<[q3Es*Jp(Q;/!UE>?cG=R%\hF1Pju>.2d`DK,[6hEuZ8r)?JC6(.?0]^/k4VB*[7pIe'Qu+,YTg4756g$PYUA7%"0BW^\Fkm^KTr7E9og]9=9E;=k$ARe)h0_,%0,kAC+ZQJghocn<l8a<$q%`\DF'\X#n%,rc^K?V8d9h:I\"XGg7%r^3XKh/Ub.IMo:PbEUMOB.Z?cY;fHPnW_)ujUn>p'RJ"5:6*%UfN"ILj'jJCM>"d)u2.lO]T"Js!*^.1*6^6(YjO/:4VILE.&*'KOkCN7GsNJ,F4CV_N,\ka!\U]HdV;i(k7_"orj#!/]3uS<WC1@%q?CVu17Tf2R51<.$,[Zd#K'a!aO3QW95N\^%qdHN[kWb[4i\!P1^>Y<4L>K^74]C-#su]*?2Ol_*?*PFRqJ)XbWhqI_s<t=bBTo6%eUOm-^&_E6N+^:XVMo/:_QZM]_6B4`ZF#bo&fZ,pj-d\1+^+n*nqi!'04%13\m]*ZT&l`D#])^21$/N&6:+K$N\[4%B@Lg4>mIcA%`\XHorf_Kt%F?SS=?PVg2Mof;3'eD0?X24U,F9b3/B\22=,CSE"H?=k_/Ih.\WLA,ANWo21N$lmL:&k>V-tqbCM?l[_s.B7Fldkd%V-@$(m9=IAQrORjd*NE[-+%JAnAEWC9!_]i<B#$&K39cXA8*4e,o6(JV[9+@nB`/"NYOrq+FG+:"53q%O!;0/jC:s3TuGatMUBiX%@Y)oTdtIacg3'TOg+B(f;HNn?](uVEPs6gg.E`dTGimTdCO%D;[#q2Er0--.ZAeZ!W87#HC8n7,?!YH+ANXJjc@h<S$h%=^U:#9<%m<LOk_9EkWd:*>%`<7`L!S^"ks-3mLR<<E@14INO?Aha]V-P\?C2$bQ[9!+@m&K5;(>kIa4lXn?cM%DL")Z('eE$J#gqaBV+0C<2%eaK>C/IcK?/^>B'2R9]Prt68rrUY^(nYg5rG-Alae2!UEFnMB.X)EMhq8;3[CO<JS9kKrc]o8ShX&40/\?r<5>qPGYBiiJ?@;/jD%6,QkI4"^tXBin$G=rPsI?nLd25A+'@F2t,6/5>1I[/Y;tO*:InC:?<L>jCTP=-ql>):"W.bdBT%G*@47AhW3-%-t;\G?c';d]f$l%oic-r5Kp>m`:do6cjHk1)VEEEppIlF6S30S>!gFL@ejSL=%g0j7chJWd]SmZ[C!!2?+hE7e=4ZD2gZE,B3;@Van!kLQ8\;@@O&)T%#2HU<g%^c<0"DHq[gZnA<W+;Gl5QBrrigA(qHcdDPBl>'0B;4(la=7KUGT'K@4_rS[FQgWQsoXnEBK`Q!'MiC[n?oK]k5\&Jrh%1%o18)mD[Q*?Y(_<`B8ErJV-tqbWuG?&)d>oR=k^rHM2f1AH,AmZ[IiX\?-auRoI+j)WN43eVMo03HG]5>rA'o='t\cDarX0e>2%NT%Y$PnGnqYoKnc2p/=F\T"?AlsldRKN\nm>iNYCE/5g28M@8SY`9HRO#ZWN43eVMo/*a<oJ4k+/!TN1Vo-f:q],1p!N^/Ih$Regc0:%@4a#&9>gU!L=In,>=ue:)V3?@QA3pHXOm1C8T-BQh!AVMS7+"aWhqVSV-tqbCM?nqP#:+Lfj,utfNj_mle7"m[U@K2?9p%"e3NA%%#3Aq%Q$/GI<N!4)V-P\?C2$aB]39*WQA5()1T]])&XA*Y1p!N^/IcL+`EF22J'bE+M_?;)D.I?*s!9Sog7Q>4mrlDL>.=F0RSm.P%Wk&UOb&GA-:$'dn17\.d_ckpM;B"-7Ya1$O1ot:t9DRDDV-X$7]6Z'3CanadBids>HEFTt+(eTtJ@.58^LgTk96j.I=rPu?Ya1$o%0W`"Uq:(B"Q:InHoL$fFnJB5d**2YT0(&@KS$4Kho(MM"Y]@X-/M?-6D.I?*s!9Sog)%2&?^(!bWElF7ZDH($V62H2R51AE+i`an%o?PTe`m5ORCN3oYBd67iq(K"8ANWo21KRDbjc(=XXtFj>):+Q;bRH:%2jnl-p+h*BY[35,4\?Yrg;nc#N@a+X17l%.g:\9r4d>J1%WN6&0?$ug^8f>r['B=1uH08cmj6$hdH1JI%XJK>W%;TZ[9>apOepl&NQ:I!/_cdu0d]f$l[5=t]@JpE?CO,Q^1p!N^/IcK0=A-P8%)V0DbY[36_a/*2r%;TZ[YI.C[%;TZ[9>c'u_s3PCb=f`V)V3?@QA2e(XJKA(#7^",3*]c.f$^dgL@n_cQ-un&L:&k>5@IZt`Us8.%N@\r-^ViU-V]<lYNoS[X7sJ4PBFd=C>'I/mhJ5cdbD9]F5M*&3pkAZ:klI`c'&Ra!dsshP8AE?!!&=$@*[8c;4@-7IlK#93q0#$b%&%*.s``pj,7]-:(7q!Is'-Ehd]]aN^5g"j)kY"S8ENKP1[Sq*'LVkIh6T^')L3E"F0(^1nqc*PYcVq]oqsR5Xq97.3bYCla+_F[E%l[[6mkclG\:W+Hc@5sf=,HIUL/mW/,7(1&ugA>l=fPTY&ruZ_!"6CSa)4\U5G)n9$S"3tk+4b(:&!k2l^bkhQ`r>c-]B@p%\rC=\%LS45;F5H?#a%Q(KkiK^?@?VTTBH$XBp&CL)rdjUI<_''iG,*s]YVs@ULemQ]n40\(5+T=;)'&QSmgiGV4/Fn7X5:Q%D=RF09Y1dj%0PeZO)&RkZ;!]113Xo2kI0J[3').j4(DI=F@n:OOpqL)Z\A.&hf%8OA*h>/-=';#+q%&Vf(KYNN>lBrOg8Z7'Roa%r9.B[$(A+A[%_6A:c]0uTEBsEr<Y.Q`1H?E9fI=/O[W2"Qi2@id-<S?oOb6>\%NBm:u8Eo(-mqZa!s2SS&BXa">\h:GY!$$JtGp:0J\(JH"NT',%%8B`%PDmcfd7mY\s+X4O/=f9Nqalug4L2?\#?'lR>o^?.qX<1MHd?">#@[8.pXSP]M?FHC(>Y2F&YEraWCsTV&*-R+qo5$@HLG/NV%L`N\)WmO#^^]C*sDm+N85AJb'-20Xu!5MA.Y<b-d%dORCLjg)!kSN3fe)2+"X)OEVf\g.2KiF)e^g#&YZX;tiRtG>QY@aX.=0pf%%1^I_P+u7QV%fQ63f^(9ieN=anqj#'F]A>O\;A-L5.sm+p8Q,$T<?LS8rl\MKC0\@pF"6*J?1]W$p!1ZJrM3TLl1Q`UUQF5q*<GVX%o0:.87\_iB+1Bn*+kLtQj#Ng'+KErg_o$B*hl%N;gAnBTl&1r!dZu9ZVBB.%qlW/tXfY(+[&#\GV%=V=dbA9$RG&$5+85#k6*Cc'%GOu!7CGdRDM>Kr^;c?j,m89]]mfDYXXn.IZbftdZZII_;1jXF%ls1#M]9GTbs.p/T]?NXNIA-Mi^<u+hF)ZFs&'LW\i9EoB>1JC&%J@J1W-PIGkFh1(U>la;gh\CMrp[L8u_b_"qec`%04YnMjPRWB_/[^`t7io]++I:K4#U2-PX_J@"HFl&UEVlE\*TgOrf*>q.o79/9%YMN)IOEdf=?OXOZTqeD?6l?QaDKVD5+c$bD8[TMGe*ITk9tEX$#u#GkG&$&%6`EoECqj^b/Ic3&nQ'h\D@;uJJH5`onEHcZn"TiY%%mE`m$&Ah.5:qr%>iVT&Ws=TCiTu%Z6;IRu)5&NrRh[sCjnCN(r:u3tG$=o[[UCW*Y`]&7(`c+;nZjq:bIs,2ZRYH`ZdCp"Y$MO*%0RO?0*15GXmrNSW'l(?B4DjfTa,[=14?EL^Ah&^D6W!a+QDAEH"lX2qZBq&mYo?\,c#)j]XOp;+OX4YZYq5@m]LMa[3P3>6G&nj4%k?tObL/2a9DtF97Q:e`q=hW;K.aDHb2UY,M`aAj[=i60Cd3VN&e,ml5=&L;ikPt1Sb"*>.%Lp"_`l055#+(<ge/aTsBRl7#\O!\,%m_Fp@fu1FG9;OtRJhLjFQHrOse9ht<m,qSF?R47MoKJ-\hd^c#9Qb"Ob1pg2fsZ:Wds@eBDb_@WD56*i%js7:g^Rt$Ht&RdPi.+1%%ZB%`RO>J"?t,nK(9/^q^bL?us(]!_%s$GC<X0FrK*_q'-B32PJ)$='A.b05AkEF6L$2"nG[Bj2%8]-lJEb5$q^SV\6L/'hGNH8M%Y_<\j@iA"2Y![Vkjr2`NBJ#pl6<aQW@REQ>^r(JJ&p%Qp^:#,28^e`jo<$;XpTg4ag.E\o8`$?0pgY,qBHEq4TOk0]LA]Uc"F1iU%f6_d[;lmRpd*QK_"\b7@A;3_p_6Jn:L`2$TD%(2Y8EcgtUP](W]ABUfFiAM;E.cDi&60%?]$Q*tS&*KLB9F`PD0kRoY&ir=V957W%gJ%_GV<q#2>@[]oE]cT+5#.5c_'Zk`TJ`.VYn_4^n$LjLn)RO*ILD[c9-iYuh64sdr30Hk3h+o*fP--V-M`SHnhPCs`F6&fJh8BU%o`:8Gn[p$7C2RFAf.#Gpnl4)6\JrdZl_JS>!dhV0Pt&QQW/lp55p[#0P;Fk.p@m++kpb["K.3'BQSsmj8MquQ5:U@h%!R2[bD?*2%@7]Gnl9/h13X8Apg.;+(`g>Btg%#b;,MOXd1BCAo=VG2mYZ2N#6'DMR+.AieU!_sf`*h6[Xa7\#p_g=ST2E$959MdKTkc1<9k]GO%d-Rg1QVGf[MtfXiE\!*i]'X[)#,X'G$mErp@C95h)HSVE/]d?FbDi(+au0I]=9Vms1fss",ep*epTVia>[GfK!:_t:rH\RR,9<)H%KZ6F\Z4G,u/AGV=aI4.VQq8D-"OA%RX"\+$S%WgP"kG6@X?se1$G1Ubi@5-[*+;/L8].,uM75s9B@;Gk\H5A#O\S,rE8'E2ph!o0%7(:QS/@K8n?U6Rj?o"lbK!Wp+$1LQf6dnM<r/7k-UPYQ3-<2<n_'5FD&8bu_gMP@"&p&jq>p!B^YPSmUo`n3EF@)9!>7Sq^4`EAA%B3,3+104OjIVm?,[X$Rigk(>Idl!:(q97c'8,*tF[?a(-]U*GOKmj@SBOF9tXS;MO]oNP:D]dhCXhS(flJ?lu<*Sg0StE0UFDa7d%DCs/i:KmGVi,8&\a[U5^Ac;;aUZ^LoQ0hBAT<IuBN_$V;4:c(Acb![iKCiAoZ=r'"?i<lNYeIQu)lsRA3Qj4bl`8dLqP)Bd@I<-t%X6oR;YIU",*^2VWX4@(p,?&G<hSX^dc":%uLWs9(m;pPLYd>7>GIIhIf&#n<iDFRW,"oV]Den7apYX9?VT79:_ns7XP3A:GH1g]+%]Ur0\N1X'f\+4fmm4A.I^+uXY0;ON4(YRSUj*51%+tNP:nF@bdrqr)3g?\-M/'#'H@<+t(fEOCNhFiprmI0@VO70hpirI/QjNGZ3%0)Tn]Hb.b[\lDrA^YOnDQL8i3%.EJ@Mj`8^gYBZn`f^:9/iiS7<nH>6pYJ7(`T#L'p#Q,</88EQGkC._S^Z,aU\Yl-elp]chEGL,%gX^D9oNQOSY-bo*D:I:GO7+ap(Hu-CgO&\/,Q.0!X%uOIRFu!@c0+c0F*.G0iSjCYATIe7@>g6/_6FsRO1+D/ZP?])Ga(B4]E,C%%qb?Y4[2LQtA@W3B[@][R>?Yjog19B:Xl00Om!>tFG3A84@cS&M/mBEM4-)q\rN`[$VX\ZF3P=sO%f<1\$O_7p4Lg"hq&$aR??HfT%O(r>!_%LD*2iV[trd<mS\m/USQebj?d)T8jr87r'Kf5?e[17+nH1^ib8(eg\D=-`11Y+Zkh"]"rF5Au_^q0!9Kh%1^(7k*fa[88;%gP9RFNGgJa:eF?1@D%paT?dRuC/6,UT+qA"gr!E6eF_r\s&L^7TVtVTK?%<f+o$3pn#,%Ydc9G%h`'inqfchliTjQ\:XXkcnc%e#%0]'?eoK:uS>bHO>5/4i7I2X1chL0g"+]61femQr[B54ZT?0sig"FK$#O7tON'V@'qI=C/&S^k3.69+P[m)FUin>>?]H^_)2qkpX2%Q03'-;[S5-Wuh?3*\8qn]$Zj,.a<\5GSbU6KZ0WsAlfci?HctpgTF[Tr>#+4BslSQO+P:;qWe(LG.disGVP)u*$mJT$c9[Ehnj%'%TZ=cJ>B(][(V<O#S%I:A:JQPu%i^;Tg4Qccmk7khSVO6Y&;C[ON:"mbi2KG]D/JNQL6DD7RVmNuFXI!ET]+c%o4RU:0=BtGEr7c$%lt;*5/8:WhVol>r#+N#DnF3Ou3uDj"r(qaGJ*15ML7)1pUA6S#4I^3)<3OkL_mn:fb1l>4[/"l8nCurAZZl:#MAB7+(HIGUD@O1t%8ScZ[:g5Q#gi;KFCctXr>&CFt3sS@6SO`C"^@:XVLSnV0P>@jl>kiDaqn_FaTQ)%AI=7P:[iWh+Ck1RC:P*ikH1tkJc2La,gB_0"%S!dPdYVn[:FS%I,].]]@?Eiu1BRUP1*1_Mm-RPJfd]PCFI.-+oD,?9(n&N'-h?1IIX83K+J+l+3HhsBR5C:/sR@2T)\G5u0I@o;A%R;@B1[gePki*L^Lhu@0<JDDb<R(mc9QN9.Vdfbg(%s+@`lJq&?L8E:D56)q>g"fcc5C*T;I.\6Xqq^(^7h5]gIN%Z,Y'6%0lW"%R%Fpjf+VpCqt=j#;Rr-A,fY3"_1LGdt=^-5b:5IIL^X,fk:8bfgg^fu;0\4h(;4Q!OW^V#T_HaiE\3:h@/,kbiU]oKij!Z&6e>0XsM%a7eLtnlS)&1c&q@@4g_"r3M,M0qfWPT>BBmo*R^18:/Md&q!_i6cEh6)=a'A?0C-5DZcK1JPO5Ip`Pi#eZdF/2%H)Zk;.lqQbYhK%4]Z81KP$!k6t(VR^c4%N"dd=HN'JP0p@6fc*DF^ELWH4r5q\UjrlHmL,OUu@UjZ;6;n@q.$C.\I!lqOt3E^bV;6WR\.;)f4etRup%BHh/o9SaZ+AnH+;@!rShC2CHiMC0&X&*^+DT6)JAo;7+JB%Ed>UEZ"n8.l+^rCsGP9re2'4BBN?='uDP]Id3]==);"Cb9.ZooQ;?%8rc0W6a^NBr3?U-3D#d0Pph$I>Gf?\ME/Ub':M>^V4Zlsj`F@?Vf@Y]eOPL4Bk,(L>TbMs'#GZg4;a9f[:Bu4FP*Xg>(^6-^JL-s%ob!7*lpjJOO=j7bk0L:U,m_E@R[eoF\/U+pr(Hl*6bckT$/SXB6%ON,\_W2'::tq$ndO<rB>'hOM"fdhlX]=iI5Wmn3P0P:3:Z/5%br<1X27o.p%/1jFY?F#s(,k$^HQl/:dTt+gd(FsXPbbbj:<()"\M%?B(UVQ5NZ__T<X\>JlSni`Cc"R]5AXu;HZo-4N<@B./^OK+%AiB!>[E-A9ij"h6Hi2^KB;ln.j5&#;lZd?XFhY,b]f]qVg<S9Efq&I!G3;lp`?s76\Gn^@RFHE,LZ.+?\UbTR5g]rq=/n8"AG,0Z%DG35Wh+aO8++,XY+SMFThMRr=I0G'TL[=^#g#h4(Zd2plm@XYqqbpM7%b8\+_rSl>]aGE6i*_5NrnMme*krW[/[omeK%ms.4^n>u%leMJ!3>`YR$I-f[_3!YQ>T/O)ho.7To\8,QV"H<A?9LKE4TYTVJIOSaoTbNo7MgV[;Z78PA,"]LePO''I'A*!A.^qcq1)!"ajU)s%2Sgp<d8t;:?J\IQ(Z$O_X[`n'33>k:)6q7#Y^JB-JM?:BSH_/O./I@MpC8M\[MdD4k0sAK(KB1:`;!RD^s8-%6l*rF2na\Md-.S,%/:ds^(:(+KO.paf4ZS79I)E4Z:%*@VfN5QE5NRJ2`a]rsg97^.j4=[.TVo-GR;Zmq$)E\5g44u.XtOSbcGms@ahE.OE$sE(>^U[+%U[sRGIr4`Do#Hh3D*P/9g0'3=]K^n^"8n)OZgk(4HZ-33^*,[:bhg$GOgBt`*GbQ*@8Fk`q4**/i=+q5S:8&WZLDQ!i';84k:0<4%qQ+l6Hi[LLSRWtP/!t&H;EJq@hGPH:7"D\n3,`#76s_"E5H&B'7!o/Zs3ib[:[*Qc]"RC0Ku\,sho,`qA:=.(qqDZGT&)6CIMqTk%2SK2t*ql/tf=)qr"%n-"Eu.Rb=mhZ+!.+#%l/7.+3I1j$'k[8>LEZ?r)[AP'E..EPrMl//F8Yb!e`2RYDt3hmqKnT;V/9e9em3gg%acb0!q#n^]Ct-bAa5]/!Q7_ibo]h'7;0lM2UGuD*/LQACV2&Aumo&E#!(#j4!D^r&GM9*#l@3ag*khUO@!'=;7/>Q@gR@cc[LZ+^%5(P>IJu9E!FgnW_^@L:<R5@e<_<n=fnC/R7hbroi\!8S\>?r'?]\csXD1;;<p`+822UdFdK>)ctUR?=@k:[p.'f-hj(LHLjL&1mI%]fXkKGRtj1(/+0<Z;PZ9cM):+jmDfnlLC(UPP(2bR6D>6fIV3,%VKCQ`Elbr+$?6,CUT_A[,rK++!(I]5-1X+hTKd$:'>dL]fZ#5%8Y>B7^TF@\Dq`tC@-AZhh)MW"T@;j!oQXtkA$Pq/,50XKNuLSNmJ39a`&!T)ZY,q-UYB=`r8LG`^V,Y:(bL^K^G`RX?]$JqS_`DR%/$1J`0i7f8"/(S7hCs$CE#CWIqZ/Z)T3c.8X/F/:8Y&B/c[j.b\(8;Y5&.).OB*0;Gh>*Wg/$QVnn13snAk7kIUC7[]$Yon,PuG,%b>CVtqhcN2=K8dTX^g:UZOamIQ'^sk=*p&m\hr7RklNG.po=4!Ca7YEV9q:#52,)8;JJWBmUo*I3/dO[\m9*,G='JUr8(UaH24I7%$)VF(&MBgT'+^/\I0?68T?"S@leb3Xj3Ac]4a]Fq?ccpG_;jJ0B(@-ko2p<o!Oj^mX`a7jh)a9GWHiEQi<\DWgpmU._g7Tm4ajs`%4o(<O\J*2D=9V0@(9B^3)]tt*G<U@aV,pC,*GR`66W(#t#<QgHOm,'4c/5'T5jht53*cI01HfX\=h&tMmTt'UkM@8]DrK0bQZ'bd%RY)U!kN6aDYkDIBAp3;3K)7:ZhnOBY@$\i;EnG6#V;c<rc'5I-o@"N\H#b9*im6O,Y&CuU4dI_gq_Dg*TT.7VNW#54]-ia8[<<%<%XBB&&THU7DW&29==koA3)+7p1D]YOQY<D0a"^B[J=SE/WB\(Js&"hFcpU=KoH2,LnJ#/EN2pW=PY5/H;3SSi\iQ"DhQb-Y=Mq7AH%juQq]^3^)OKFa1`@`8gq]u]?nmgS5hn*Pifl,.-e)JS4o>1E9t!4"W3nh8<aPl>5d\GPsKf-FAa?8.)Fn=oe34cZ,Be&)EmfkC7u%Ik?T5S_GtARc>3W5&TJa]L\>QV9ba8/MgJQH*t,GD:lmMfh/o(>7gGo*,,?MjksP_5H4mn4[7c&[qA5':O?^qE:\>kF_N^][WOY4%D.s@(g>^)sqeY(,*WXGHLY8d7M`-6mYH^maJE44I5n"ijg9C!t\TnrqP'umils6a>R_*JX$*2b7ep/7+IX5u]96ZurA[=N1PfqhD%agt^Ri$hgiD@l`C*%\[V(R)No8IVdMlYB/Dq8-:=dCi7J(4Up*)t'Y`h)UD,\_?A/\\[6;<$ZW.=k7!N"/Pu'maD!;Zg;P\SGD4D%_BJ:C:E(-+5E!.O0-BD?dj.M]CbI!HM2X*OmiUdH!7K"]l[,+n2J4s5LVPQU(L#kXG4lfP^ODN\,'8kYrT%AbH!5WA\u'K7UL:?r%4d]Rb^^]jH+d?)Ie'5n_Ap!["DnuTQ?gB5m;\5"\Cj#9V$K+F!9K1_>`c3p2CbsLr9R6<]V`XZ>45N'c*OBG,$#ZBbc>SKq1f%ia%8aj9Q8nDAn/8s@P3a$n(E[T_UGjUG.'Yg8XS[Sf2[VFt*@6;QE5+dhSHN5^#eoh((cPtV_MTIGtMD4<J+)N!@T.F9rDZASJcPuP\%>ISD2$hlI[/U0t\4s%I`#F'+?qt@S:1q=Q..2nH2"!HTe#N*AZhKg=r10't(qY/lYpF^d:RWhV]8-^>U/LIAicK@O@T[f$FmG#+@%olR8)C7%2US',aiFGoN*`U3L^FcA;6pU4srR@df92a6N>DART&gl:^YBcu:b`igF'J;$*H[rlikoO;KNIGA)NaTGlX3%.;o.keUV%?=[EX39S@mY1u_NTX3(aAkc5(.-D!LZe!f"0FmR6dc5\f42LF>n6pLeXtC["[(\)_!&XrkaNBj'4kpQOaOA,!n$q9eGkK_$J%lrU%DkAW%iT=O(AHUl;D:ROG&*Dd*:7j]Jr&no"ICZHc7Xb9>*gl0O*iP,qbJD?[bBm=XNI<#WY+@bt%YgUBZM"+>I<.1sTRt$;N!Ki8%^bi5JSVAiUio]BYE<"D,iI:\_4n8!KEnX/9/toVIQ"G?"P@T<o@V1pD5piKOf=knfc?aEjq;@u_V?V\2],g:97nNY1IF).],&?U9%F5t1.eqQjodO';`nTu/-VKs47<GuA"A<X#FMQr]_AH1tZjXe*$l*fY'n2ThhV-,0p%easn^36rr[_s2Ngk[>Ni:\es)ldk0BgY)J%X4oL]5$J4SelYL>1i:?!hnR(6b]3A<hX,31%3Bqi5LVu3`,Y2Dg@iPGk8M;9JTIuWZP6PMHU"n<@un>gGa]\fC[Qe]4aOF0rh0"N%l:<?f@k]Qm_t/Nl6%L\#GCogp-]c+:Gml2!g%QBg8Rt>^=*$aiVmYIU:1G.ep%;cPCX5<%r+^F1I<t53dT=4&p[$h_pZ%X0KPYh$%XQ7BeNIf-UHQQ!Dl#HIh!_j[Mk-)=qYD&>ahVYuEp:eJk50Se>qH*f<J)fbPp6Y:1'6cZ](S@jB#E*M$Ebgftlu-ueB%n<gCN=Ha%h8`gici@2YcjMblme=OQ<d22M5I]M,d<DXV!a'_OJ+HpIh[#uaJcGU0]>$@q4ZSj;&HkXCmoIo8$[6uHk4\<4`mNaS"02^a3fj*c%o@s#$n-A0\XVmPpcX_IsbL/hlT9'/23ZAW=0/(l9DVWGME,654/m_gjrVX5r3a;K)qYB3Y"7c@sH[T$*#5Vf,!V4iGK*<3skXK`6%F1\?mOfGnY7;me9C$R%s?[DagfsnFh><_F2l?B"e[s`f"$/T/pZ]itBO7tqH(*4HD:T_6%*GXI0>KHsd@Y44+i9n?Dgr.G$XR6#%%8$ZIH_+M8\b8s\*%Orp@JKS%)\6&^2q>?sMD"ZN,=;27bmIjj".t5I*O\<h5k<<dkgDBKE:Ua]!U6p2\E?)(UgI\`(rI4)1H+e_$%<\+)#*Z\=A4kNnX]\BhO>$G5g"[+ZRh3q<X.%8;Qg@;S7U1o5BTka-\e>,r#qt2%Fp[8U(5O2IQ1[2Q4!VNU8:2StnM)l*EAs`i=%f"T^jc2H+Lo>=>:e\8mmkb=!$18Y^2)#2n((-A(ldquS4M4_sm^H^u<QPf\oTLhdHpU*@[PM5L"lb/nJI`K23XY=S?\=hgoR("H7%U_?IJmI@o6+2`clX?U^L7cCm\1$d]8iLi3T\t.e4;Ie-P>LDPX\'mK$m<?mGMWtAS0T>D6_bMGLK^Ys7`iab?3eoEaS/#fi"]KXm%;p$mZTp#NTTE5)\p<OFu-?8D/YR[\EhmgQ"l6jiYM+8ESMJf_aGuS2H3WH/$,85B*h,P?"VO[c,1\B489(30`F6ed[=Cqq:!6'`L%^RCK>1TFrB[FrJ99eAHcUk@@r8f*IHc5=)CdYdk>?E-i0`P/p^WuGh$cYBWWB-n?0jhs[fmU:OR?2r<b`/J!`U5cG+[)9%of]jH-%-S]?=Xu`2d8&2a"_O?(1EeMYX_3flT=23\U-P``bHa6/;);*@.6<EXm%&WnNkA.-GljR+=/THGSEbBi$plB-S\+BnPE>sNA4pK(f%kM^eLdhU\WTPINBUjd=5<CBFMP4@N\5XA<:Z0S;k6:N:`)jL(jDe!\b'Lo9VIo%#S2Cn]U?NlOC'+?@?T/Jcr62`H)GeI$A)!8)m%E7]*sQ21JF@pd+Ro>liNWYP#nE*W/uT\YQ8Irm=n4n(!P^rK0X+pnGlo)ugTUt)0p.b`Sm.kn*lhZ7ds)0U"iULp>k:J]Lkm5jY.%"7KIr<t*0eUh+LbFGeF_F]*OU=,k2]A[;ED>QD^u@g,SB:q>e[iSFL`nQpk[PbW].G;[tu"'L*-4FGUmr]L^sC9IFZG3&o.cYDWc%j&I@EK[2;Y(J(7^L]#r%FQWZ+;/!l&Ys_'1gl3VBG*e[9XR6g/5#iH$E[ahtb9k--(:n=dr38G6Sl'=B>8>n&#7'e'-#f_@:a]:#%'*#!#=>6rVT>b^W^l,t7D]GEnF@LWuKLNX"_6,c3?Qg$\DcM14\:$=m8"3PLq9!knL0i^r/@ZYmoi?rWY!Uka5[,$">6iLn5+3;W%*R%V#r%<hMJ'VB8J*]fY4A[r%cb;T]V8)f.CV0A"("jB$`<Qo+$F*;>>&L.MCIEWXa;)FU_iCg5&-dU&Zi"PT3,[i*`j*4Wl\6!6%o;]_Q'uqY$McaE,EuY1uG:JX5<hfr_niRHF\"(UgN8p#"kPKGAo7JNQjLAMRni_4/"9=pH:OMAE]+pAp<SJ$hm,eLPgBtWO(YJch%D.Q]lRoJmOd1@tZPI((n>BKoOlio_<^i_-@'3:[>$S%/O67Ym\^'jm+T2b0uJWBjOT%G`fK@AKVJ.&+XqF/anXOr)*on`p+")rEO%g^6"YfK)u!6T9PD[6b_QZ)a!%3>L;RWl,'qo^*2jB6b42TF7k-!3f_$TH.H*$PjYsU:eRL=q6YB[K'$Q#O;OaS,hK$eQ2jB!&=Qh%@^CNl<HYu/!!JLc97Rj;_AbJ]cOF#-)fY8#3&Vo5$=PO5chCg2ps9*g+qa=E@,E7q"=L-O(9hll<\=0`NiH+[Le"6`>lYSbG$o,o%-9JScj>]@T_"-G#3t/AYitO_`_b*hB4khd51NSlDf&2fr(-l;RZ"<_Bg%tJt,_9M?(T-)?_*':VM+ti(&0&4nTRJ*e3I*QRRIfc!%p-R\l$jc)e[NA"iS-Xo_`dpX-@$;M;6j?G"?5F".glbmL4kl$&:!_=(nI]Gdh6)38#8P.T1'^1\7>5(k'O^s='+9a$V@j=$31X_:%:o=m8=Sd.!!?J'P&57CD-R*eDoQ3EOEPs\CK'8Ut:l9L4)kNf"piUS-0n)l*ISj?>DF2\JD,hSVGNAY9G!"uLVoY3kK<VOO;kF5D%Z/!s"a\Ta-]#?@.qFtO17BS\\N]dl\3eJSfi""*i37ph6Sr7[SZ3bXs`&CS^*Am_'=6N]d;B9cY.b+P8#Gu^?!'%q*6&4(qXYqlC%)hR3k,%*Ko7OP4GGb7&G'$AQeA63$o1FbIV1Qba]Cd3S:!GqoGJe7,j):]'ZTE>`7O?a?O#PGW[m-TC:npjI5+Je@?3tCFl(ZZ8I%Ms1LX8Cmlg,R$F`I1E=ZIL#?`oDpsr2Bq)&W!3TE,I!mF?6DVon(,\d=N.1:i-"a$)U-'/;rY4kGZ+c>L#LoAb'p"dH7oom#Z3HK%PX0NJ2d)I:CH\e]9/NkL'Embqr>Z3U$,6KP*:<g?E^,G[1[_"kNaKO*"r*"!2C;fI_NF<aUYOrt+4#/22K0Pt#B2604p0R7+nU!*%&q[%>JoM*IDpc/N@/'g/>lnCgA1UOg^pY:F'4?Y.g^9Frd.Y9'KE/=D<C.N[oVjPSK)iLp;MAJN$]'EE(:6EDA>,!9-8*rj$5Ftn%DB>&ZlAc"gp7]D#"Q8#/U`0)iY<)K&e[GT]mf^Y^!op7@JQWJfX[`pNp_uUF!.;Tn0[hp`B94d5XkBgC&EHpB!ulpIM^f4Z.l^pm%\\KB@#@RX04MMf-.fl4J`'Q./r">^hiIYk(q'auOQqa]nMlm*m`WJ.0Hj9?Sh&.'T"/!^G@=3%G5ic<TE+r]nM?T@Qh%4O>Ho1Q$%N6jj*!WE)#bH6H%p5o+_QLMr1dB['0V/q9*]@=RrV[^H5+u#:\YO]nV`:U3r^^D+aTIVE+ck%=9^e_D*JqHq,g`Wj''&-0K3c8JR%)j0I`@//R!@t$8%ru.:)$sr@?eB4PfN";gpB$e[bcd%o^pj%Uc4d_,'B+LkJC@K?C?u+s`"_6"7*;Om2#(0+\gd&*CfNT9.?Y"-n%UR9/Q]4(?I<_kK04sFQs@0GI2RUd8+?Sm_eml-2CkU==S_&)udgOMQ5JOV;3I1,Ec">Q$mhgZT<*Md&.)hHU0W.d(B#FB)(+s2%6%KaF-+-Ge%]!oH!jn6L]VN1hPR6,_g<!.?aE(u$5O>%3kSmMY.`J0?-=Yq1-7:'dOG#+0STK&FGNJdSH@LsR!+[f?jJD'FpV`?PXl%>p!NKhtLP^"Cc94K;KYn+?)Wb-"q'=*54rIJB%rP-Ya3JBd=YW6jV4DkROmgdk9i^piKXAI0AmV@YOn`*VOZmT=#j!pS^9N_(01t%=Lh.kNJ2Ym&VU*j[KD+P2[D]o>UpsT)n]Fr$#;4cl@[[ZdjTeJ&RJoBq^b)81!qaM78Ag9V]dJP[:r/mHS?I;dEeG:XS=@SQP3D7%c"W"2gGNI(7J8!dBLUe1W#q,hh!e.V%3qha*AFtt2;hl*kVn0I2Z_K(s70k4*<Q]s#_WagB*Q-sNe[rRi_@QiG!s,NK9't8j'`33%Oc!Z%?pS3(E(qap*ON7-\dbBf*<;F]2KNj?gHl*t8"PG)-nm^O\`7-G%NGP*ZPGaocsoDM=f!&Fo$J*40@?>0^^G-F=N6NiUPAn'%M\CZ"5]_]R0H"R!!1n`mqS[qc+A<P:Ld90.E#4h5\J'S-310;Y4K:D)bQ`@^#Z-)_^*RkRCeQZTkUD'Z085e!6k9oX%Ef)U?:&CK%0`M>E3e3q:S6[?s=?oZ$,H%4`p$I4"VPlSSU+0iml0+#iF#qIh*aFE-V'`k+Ra>*L+n//r<F>sRK79F/&s%?skk"\M'E];>+hE=-%-G%a!-Kmcii.heN2Eh2.5_fo[9-S-FTedf)^V:!4+V/F;^d9(]`4uBu%F,"\MFCeOF=S=:+2I@Z(?!kh`-,1/$pf^ZS-Ws!3^>kn%`$CpKBKn\,J?B8lmN@;e'+Rh>)cqG,[jWr0k<X(J6Ndc<Mbc8\Ync]<^b[o7!<Jn`>QWa:C(p_k%ep).TaT5$!!ofu&!H8]*Wf.I%!O4m61$1lZ)M*Jg&#@UjU![KS_!04UPmUt(JLRa^@(:t9CV/f7i-l@CYTSifBFBJ+K%9q2F's,6MEC5L!JXm9r[Kgcr-Y5Ie*!;?%3b/9K8d0o[Me<f!82j`m^]pWnL&5"\gH\h*T]Dm)M<OM".GAC6)F?Vi,eP6(o^Nb<`-VV5&f;pH^^sIq(M5)<&54A=Z@?@ZUO_`N%QYSY%_mJrUXG8s:@m8ZPS;R9Le7grJ`%B03=:eLn,no9EhK3R97,t_]/&/r[^YQVS]dK$190dk[2YV`+)E6EbGd\pcMf3r+Fg6@f%O70@g]^=]3NWo@KWkoS\^P8)Z6j41E#N2hd'aDnJEPUtX$CCfu0m(PYA.0QNWrUf)6gdBe#j'\>AcsHUP2Ym][#YXZ!RlB=h)omH%"8F-,QOLe5,>XPmd)&Z]gi,_#`kn.J$?4r[oQ+tT$^75+s,N#"1!W+0bl*Vi)$R*2,_?O5MBZ[*4:kTLAG35G!)!tlr5rFe@`K$[%$L.\E8d=rO8;0DO1Ya:/V5$7eH)QoNe4H?$J+9MQ(#ecb,_?0bJS-%&NY$>iKt0ckKi']'W@2X,+4R-0/=OdqmOHM9HX>oRqH,.r%g#!(c,K26J)i&a#TLl58iZnN("R(bQl4@EPMJqLb=C_HUFom%(Ym`Fb&kc\o;Y,+d('bZ`4I>ObD+bJa_:.Y9%YpO2mBA9U3l]'P%L?VeNp&#NJ#G=i4IV=h?@mHj1F=^N^hqr3NY0)Kq?+JIfr,\@@%eX_T>6F*i"(Zal=$.9L$6WrA6<8eor`;XH7uO!%gI4uYDi=A*%4i6b5gtG&2#Vj%h;Zm5:&4/U5X["aO.ae\Zg'>Fo]*SBQ(4Sb0r<#>MAU3WS>7a'3UA>6RXY_AKZ'm10Dq+m]j3ioae.KWCBK(Ng%#M2K!7jf+$2]iDX0QDs85k&VO)7XHZJ6Qi_$"sh!%5!l(`A0B\=[dk[*9+jLba/MtS]qtQ0G!1$Ccm:-"is[RoE1WAP2l`/#,n=:%=/lkBM;T%ng(P%4!10h^"+5Zce])Vq4aB6Z:&.=_ctP`P"skZuhTZ?o?6:Mc3NuiLiLUshKpI"8-s(ihOn"9>Hd%Lq&C<og>oe1H%4r+iblF's/&P2-"+$-VLed"M\=oa>Ii#r=T@RtK$#BSu4'Oh!Gj4RG!mam:CaUE=TD;#MBRnI"Tmi`hXap.'+5m*_B?D`KG`10Iu%^oY3<a3R"<V,dY&@"k#46ni;A_.5DV!DR.sQP7C.Jp4F*?q^XJc[K57<[:hX^H.p%Tq\/O\n2JMPV:5c:*X2oDb:nb)5iWQkW#E/%+a0`G1n_mRZA+U6:>1eVVNNlK`p"bOLlJf_Y^]"-IXdXso*#f@Ks?nO+=,f<G8@:D*t(DpatO5,!q;!ri*.n3".fU6(O-c>[^[iD%H_AI#%Q&kecoe*--,BHp9S%&:bNoK_,Q`p%nZ^Rk!'Pp_1IMVD$.(7o&)Y3SY_jG/]NGs1?j)'M2Q/;3(5RXR?YQ:9=TOfj@A<E7%/hWRg.&\:6/58FPEBk)NP6M$qYqcI;?l+679N+Be0Eq-L7kH4q%^[)0_CZ,MN5`^G#!sqC;F;R*0e`Y]3C/idJgG<?S/>QOQ3E`/%EoA%gO%"suLuehl'aGUE('#KPj[kiM&7Tl%`'/(+kquB_#ZC_@3/Ej_`4s]e'bHk+24TQZW)]]<36$P7:NGYV-.0!\FC[&AR&2fl%Onc5NBH6ht]1rfcU_>9A&Z'!%.O"N(SYI-#<TMh"WM1]9`FH'+r`k7ZKkOt%i,Is]Z1B`dN@qe4fF#qb0`D6<Tkt&A4BdL)YgP?E%4:6%!Yb^"Y</6,f?7p-HA!+7<4>-c%T,)!g$c2No>qAGRk^8am^aB^iOaDaW",$]+o?^G-#c94^.!WdK$<hZrc]GZp[XdfYcuVDC%5TdRhoG?itEfBf"K[L43j:Uu=\6Req7S_Qs&qPB8nh>ru)lX%"W/XTNUGpb;:.K<f3@2qDk>YF$IT+V,#\BhRr"nWa]Re7=kBia2%+t$Q*l+/c-MMXb#$,Tc)52f`2q<CS-Sr8LLo!Ca'PNR&f_4_9qOg@\d#2iE=n7]2P'#WWXKOEOXN-21%aKe_-8(`C9[a2#dZ_05-%Guf<3<a;(J`QAXV<nd),A5$hCcj1V!T86H!H955@m=XME0k@)o5_&kj4Z;KO<([E.0#lm7Sqb0L@>ZQ07dq[^0Eh]U?oonH"t=++%*R2)($GML(QP>-%<Zpip4s=f$EZh/FYmP2V*sa2Y65*:rC9S&bGMtoJpS^'_0&&%TM0%:f,W*@$5%)q+Qsg=FKFDPE+KOhJPVlJZ%qDKJ4_;/(4VC\01!(91:8WPQ-d*9#`ECoH3JNF$q)a2p^:7tBblC+<D_7Tn66&I`F2HC,EoGObD_N_N`^6ju%Se*rOc1eL0gVU#n%^m#OPJhS1;.\%1ibCLJglGMfM,Ctnki1,L%##chT.,/kf,k]#n6Q1sf?GJau`KZ,kr8(s\StXi_`\]6+4f;b(bTKU"esPonNj34-%VIaW.3@/`V>%]>Y`hNsk0fVWie$4-0GN^sUf,1(3a9esIqe[UM5+H"*?/1&N=(UMr_+d_@f_.OqJ?`fT)#2$:-DcK?l#D2`=5Yrt%="O%Ls":ZUmN$Hr$(h4D!?5LTN7252C]K$-LpBZUNK%eKV$;Y3e"'7,8Vl0fTYLfBX$kU&4>3LI,-6gp.l;MgZ&0TYOYMcR%^5R+%pKY4+&<BYn0H!H_H15be_9;o1d76TpIU@]aU'PPq;7R6#XpV`goU*qn/5Q[UAVo075$#tX>7=>BU>,'^'F2.=MJ`^l!O-BZTYYnb%.9bWhVh^:EI,+#[,1R!@YWa,/_W+;j\B8jB=O:t`EQ9k)QkH9R$-u+m#59iVLugel)?k;5!6^fnoE/B@L\(-OkE`[El[qY1O4#DT%'nNfO_[OIDJk1F%EFc[#@1)=N(,2?sJLJu>DJI?c"G.(9GN3n=T?B#446nR0qdIgM(m#f5qfrsq9o1<dE;!Zh2T2&d.2['u?n,3I%4d_6I7k(G[o_p_6UfOCL.=Zil)0%"[kn#o9O1RD2^,!K$'kcH0=F@I4p'A&`n1VT"!8@PMTToQ;:^;[E6,8G>#fo=;U]@L"Ml2%I%^'8l'P<sLj">;I%qhO)BH9UIX6"E(g&._)?iAMKY1ZDn&2jki=iM=LOl!_edJ4C0Uj-heHm,JCN$X3UlgC_V&Z(c_o1=X-VLcE#(%Vj>[q!cQ\u!>N3@KV#0>-aFsJYee5O&M)i$8!P&Fe[Oan.aJhg+P9B`6PIsVoZ4!6!k.0bb8.[29f@="9)p>AB,cAO\K$MC#K,o<%"ma%jkVY+*WB);\kg^,M[R3/>7J#5`@-1.`A*,DKfuW+-d]>HBL+7MFR)/;Tq'S>MmeH!Io-]&Ml>D3X<?k1Nj6:$F:2@2[e'SRe%'^X0o=;!\^`kQPN2a#"s=l@oKVl>rD%(3BNKuAhc)GhUN;sHR+b8,dqBQF7<pXtu:k*nN$MZ(=u9Yl7Hm[A_2l1sS9B0oGme$1'p%n7`_:*=fhF/(/M&5L#-$qj4PIBJsfjQD?E/B?K+][Q4[AetLL&^p3'8-6B;'!QG=S7OA(".O$tej+,A#?X22OB$mr71n_[\?Ne-k%"#XuWf[SRKR+k*P`AE=%mEa`/ju<VsBs92]!s?bij4.Z]pdOBo!SaoDZ']KB"Y](Jq#nkd_#^COTsU70F73N1=LgY&)eS+R0oXdk%RhgGK%aVdtTdo726?<ATVS=;*#JVEmV)M/"[1[^EKL7n#+4%#sN<_YRnR;YD*EbJpBg!uY9adLe>3k4R-%ReD4rQT(k-BjQ]KQeA%_MAt^6<s!,[#bqh4tSY"4eI:^N\!>aL0L7:hn]\IYiHP&oV+c.UY&9>O-REaT!IhbUs^o*!dm$D)aMFm)$,%YaU6C93bAAG4=*'3%YgY>Fs1R.")H2l8pTd_URZIK,(U.AFSnimTp@+M>#i\,/E17GL8`2XU"Ng=fG60n(AE*gokXf0Y*3B:\gK\u//N<nd7f,CE)gHQ6%\f:8]/knms7]&go1E;^A7TTahIQMfA+cM).Ed5V6bR+P"TW)CHMTiF&<JitdH`XLp!k#%^p$=m!l@K`eSqm%ZdZ\6[(%5G%<I(r6%&&W[^S_q;RDC@:(M);e@Mg$0aE&>OaX$fX3(DbH3"?f/.)'TS%Ob"DnGep/52^s!QO9>SsTNLDP!XA2'#.icM3Z^p/BbX;Y"jo%d%_i32TdTetBX[%r'JUV(Ir>>IJLI$U/JPYIe]f;s46EGmWCE0T)&Si%)]UBH<n>S))H$K>4B,CP883,HM[P6_4#kn?_HI<4[CqqVI%k[#GBpb=pmi/ooi\ia&MQsg*$&7?NRjnY9aL43P8&-D\QQ^7KYoO,I(5]:oniK]@U'o&B0IeL!l!UF1qkqpVBrMF"14Q\gB","=[%P(iEkrcChmfqmrc(p27DN/U'P<32&Ka`Pac'Y+Q4/*$@3/H(J8I>(pl7jdB(U/:6;N0LL%pl,rRBZF@/+%'qY8/KpIB!oE[Tj&t3%"b$jY&ql9<pJepc"M]sD]Wg=E)ERMjBRL=*g0ccI(ci&[.6O\ceN-ah@/2paL+Xu/Ut+rehP#n_=(!ac9b$;Z$fp24;7?i^ds#Xk%pP,(9]JLF/\KE:Y_'3^frn.4aLW?,DjGm&m+;B!InBNT?_1ZM/EI:r@'B)C'/j1b?]g,1l;*(gFVZi8h^>'8^9\Xc966a9%+0I9D%6G``<rTY9'M-^APP)+CPFHs5_#TQ?\J.MM88a;CDl4K_^^rl'3cj=AKH%8Db7r]u\!Q89dLu&_[qlU)T3o5'h-_]]ai(7)q*Z^'h%/gR(k<8;E)bG9[Hpt[DuOW6GX7<CYZ0Fc^/hirdab;(+&U$%ZY=3C.O(uVkNCFkG4-7DeXO>jUIbI[51SH'F*[YEG96H]^T_[Es3%J\bKp`ce;,c!U3u(ZODU-hPV*`41Kk(!g9Zcep)]\?c7A7Q%L9Xc^CXln3PomCpKAPGC]T#cj2QO'EGMgNY=fb6S3!0GVpt@PJ;^%,;"X1R]urqOi$PG$q&PLS,f!SUiEram\m%(5duFl+/-NG[!9M*JpDZbO&,6BJMp.X(C\L)-LCZZOqY^.(3:GYXUKIG:e:O:TC#E,%J]e7Jqm=f"@s&nekV%Z&X#5++hJpZWX\k<a]R-21UNf"75a/m4cOY[rLlWp\gjn^e4H?r[mO!="%e!f/d5/@9"l]_@`9H4/OUVTK%@kS3G^D?Y']AUj>gb=ss`ALceDqlZli!ql+rU]r<FYQg6#Y[,cO3g&ETB?j"5\_c4JW<ZK$J$)#c7<WOpXf1omGm=gk5V)`aIQF5%MZqYkgg2qNnU<.)1\RG4n19-k5V)8)dZLD+0kq%I]H%:(Zs]R0#.E`Fd-P?-"!?M3"dls@4*K9ueIko4qt-I!H7fG,JQUk7"rJ-0%\8SeY+'B`r'R:XHi?$Q0@]G^5j@a_SLK5eT*\37XJe6;:Yoig%(8&oc[1)\32uq#Gr%\\nJ.@3-$HWqCFm2pF7(KI1dJNkrl&/\C%0?!16+LGGF\26Ns)<&+IKIDX1iXQ:,Y9Euq+m,X\(.YkM)_[cjQm0CtQ53*8oh&K+FLK/#`jj^@Y<!Q?35=Fuh>jMaiK[RV:sAIf%h07eB6<Lj.73mVm,L6]1OM20g^agd/VUEp^X?lf\s.?t`=`._PQ?Jlcn%ad7OCd;X.5mt"!rkdn9ol17q/:X%"b74N$:keV*F;t)%9X^9[.%i%G1,BgZpBBU([k4#g`n\%2+T1AbM:df'7`)L7R>KaFOeEc'mIqOBmC2<Qp(eZaI$HasVXaKVke/pGdE]hi>qX8<&duMp%m^&iu..mR(Y/.rsc;Z\NO]JmL$[kb4^_VB1r!-E4%i:+k?/mQC@8I*R9S<,c*g'fC1^&<`@Dupd10%bZ8"kJSl2V!icIoATl:,\c%MGu1UnA\"bKOh$M,IoJjm]Ad%h1NUhFaL\kgO"S'\2rWB:+*(+!Y^ALfRJq,rkt2.jPYPMgh(IRFuUPT%<Y]P&:KEJ3iqr.G$la_%$ju?kE;HA]E)lO\HG^OSi$tJS0%SS@^5qm%?.56<#A>"OaKu3CQAE][BPKgJ7e!l0^T6/tg<tZ<'7?b/Wu.6B#`_8d1O:N9pDk;1%6Zu7jNelF=Qua^JXZa<9dhDZ%Q8]QW!>%dc,>*?]+qak3@H9h5:pZoU]]o'MG2Nc'N,t+T[ag#(Lc'acr*WpQa&Fs#gi\uoVTfKs%RCs1WnRVYSm!!=,4cDu[9:M0F#(\E7-07R7b90ia'Ja_r@8%[Efh7fiFn,'F6#G+Rjp77Gh9M&u*r6;k,KB341!_l%o%?sG%6d[u%h%C,"o\g689W&8*ik6j8TC.T5`P;'r>eg1C,M"c'NJZ`m/V"e,2?@-)D&_uqn#JAKg.0`&!kWMj1E]W+[N.>Cb0#IsZmdM0!jB/A%.<o@Jb-l8$_7cKlHgg*9H[RB%le`+bBeXiBQV:lKPP\#OR!nlD)3-id8WgMo5$HbqGrEA]8ra,PfY^`k8=d6^ilZ7$*3Vs!`]N5%%^-H_'dRM^GT@f&DE0o!@jg\_>oe6\F`*Ig'gb]Z[L=;DrUFRoS-V8pRc_@0`:(/K_VdcaekAc9^&c1(PXN@,d3]`LP[Dsi.%r&?;%%#]X&pNb4R?(1/@bp)m2HJVb(ON?9N!*j2jr*o'2hPo@`G[0J%%(9T>OV=fmYVel[-5J^,Mh38F`WbHFl35I47->Mf=ij>Ok:$b,%\YBC7P".io^#='^O&,s?ii(V#@Am2b^>#%KmhT#[oUV#&0l=a^)eV7Y(ndM'.jk&^<5-?X\So_$?%mF?&BV72R3M!dCW8mdH-%%?%QsDF;k4]LPHjM0&1<\FmlSH3lYH-XHQ1HA`oHjssV][I6O]/)F-n8S=SrV*^hM,2d@r"H611a6X:k0/acV4;3WX0=X'WhSf&Iq`n%=#SFcL3^2FMCFWO@"eSR<HEZt"A^J#_e.bXX/k2b#4N&"F>d$!R48DEC1aR.^5AA[m3cutV#s$N!Uu0o7OiX*XHr+l)gU4-gM#m!%IEajM.>.j@rQ/#(W'/0P`cN&[VN\P\>=Ts9mdPdC*d^>-eo]gK3E\5HjPc(5WZERK-7&+:.,3bMB.dSHoY`jW8LL4*Zk^c^=5m^"%XtmpV=1Ej@3UD7nS?4[9)TV_i;V.'gP\kHn523f&Npj!`cddS#BXTl/<8Uf"D%GPh\r,Gl1@JIM>_I=j'FpL8@!.ff*ENLR:n2\q%6:s3Y-H+b(s2\O&BaeVn98MWEOYVGt78^7mc'42aT<l%iI\aW:?)?ML>uaQXHujj(=GhC`C@'f!AG\+f(PZ2NJZ"gD=-Km,0u*O`%IufZaKFd+r[[h'cG1_-#esZ:2[euKTQAGuC0.[f=cWs['cFgot=JuM./Jm#9=BR?5\[5lYI99]1gpsk0>\JLniGdi2d_U-0><J;0%"j?'G;(aDnS"J[Rq<5;d'OCbD:F`.,o:P$9IoI+",mpJC-DL;\!CuhqneM$p'R=Au!&c1re(Bn\ZD9sT$3>K(YE<!'khaIKoI^$]%IR\Vm,'R;HXqi('<`j8/hG84N+[Mep>OHGY?!Z<-<mg9*d`/#$%^7V%AG(_FeU.1aOCDf<iaB^ThI!K#"/bj"lgYlFhra:Dj7g%n%.LT&!>ik`3DQo[0H,&DaW=d6':GZl!*FgAPeePr9XLL"I/bd/CK-4V+ZD"@i]m]6(V6I!*V]6K4Mn9:0Z4Lk?bA:j2#,J&:B^f%B%FD*-a8Igc`bh))!DQ.),A7BqpD<p'Xf`0]%79.bWD--KRB!Zb;-ZG#L^5o2gXH"'8Bh(>GE+@^q1Zmkj#Zhu'f,kAI-lp@oNR/Vc%Y;Sb8#1a3F44d/gd9JFr5Cs]qn_C4[85[+M.%SC+r0J.G6Eb<J-\Emsjh-0-q3.F0\aQ<5*DHbsLNa3mVljnNXpLBE@+kgQ]B]`3%+]AP)<UTg'a4dUQ&<3!mWhREA>]-9e"0V;8KI[/7!0p,r/D1N*/CE3c%Zo^)!1TXPa=:p:f@LFJLX]BJ=j\@P%"@M3a4R$eOV;Q_%#3Vb0*KG"lO)9ZR<!AiD!*?t*AXASCVAc8j:!Fc'X&rKjg43k"O/7h&V8;;S@-GnL>C?k!Er/_b#btho=j7pJk[L>Y@^\Qq-;PS#%2>bn$g.]sm27Bf-7I09XHa6#/>J+PW-P[hk*Lf[e]K=C"\S@(8n_n4@(DVP(SaDi)[E_Fe@GG"9OWZ]o+[cHfgJ6o*^OMJ9OllCW%/WT"QC&6?pj0UmLbnH2^We'Hl<>3p-Makk&X(Eh\c`3\mc"j2&DT;^EA*-[ArV)\ioU'n_2#fKM<W"8q?&<fY3866dL4`t$;`mrs%WJDI['LtG&OmWsh3g.k2&7b\:;J>Zs&)LPUDa#_n6;UFc$Y]lo]]i0^An*'QVE[;'qmSQNPaZ>BM1o!>W]SF,<K&'RXshHUk@,AL%H@TOY7=O.f?=m18Hg?3k<Ut"Rjlan,6M8b$U39,u*Y2Rg9T/Nl3d6B->LRr"Qeq6h@eAZlCqXY&Uh\eK\>q+cLG??3R-5$#r?4aY%:^WOOqT3u#[As"0J&toAN")sB7km!SBRdT^X0teim+Ap1]B6khq\$Tirc!UN<n_--cfVRr"m+n\9;07Ha]?.T=L8jT51f/?J+@oD%nc%>ZS+.Y+YSpTnq5`<k\+B@INc4*1=O0'GkCW)ko]B@cL\s2`hdX:qah\H&2;^lD"[hO:DAeR.F`js4BFpl:9q0e/9K>G#Z7!T8%UUeAW<D[[:H/!fM&<nB0O5Q8L0pd84)MEI7WBcadD01nJd?0<0\p5K5Tf_1&b-pH^kXnHBjpN6P<=k&rTi#)aBf?_:NAHjM-HX9g%Qu9W/mLQMLZZCmgc8A"&*5%^&F:e-GHh2@=PF[l]r]DmUp?0%>[1_CE\+Kti-o1c4-pEW'XI](QD4>Y^od*>3V!(1KBjmM0F8jg)%f4NBVh,ia#p<od?">R>CO)R*d16]b<msVOa`cj21n!qY;DgXC5^KG,t5u.7=`]*KdL[('aZ6^NjNbrh$SYL^9Hd_=?HI;0#5plHM%NW#JDhu))HCgj&Z.<!)&2-7gHr_cCdHF(T=6"f+.8`VF\_Gko041)oi6eU)Zki<F*:ih(bl@(h3;j#BMg79Gh?3OXKolIfn#A>h^%!HRbBf?8M\A\`Y4\!(2O?pnPTV=/9h.rc0^(_kZ%67+(VJu6\b6^g[A*4"W^I80,\OA$lY'h8>G6>(HS6#@bqbfbIYl;;J(cGE>C%d#.sJ1#^Q*#YB=e?('6o1@,f)@<unH%D0ko>1'fHI&l(58$pt6Y!LE?]fQsL?3[%98ln`b\]4OpG]'S2B[C#5'E'j8PG,dgYss>[%[2tQ^eQNVC7;rShf#;7)do)F"j,nPKZ',k_n#H*-?,hF?Gmth8ipXKXPLqtLjp4E1)c@qNg>ZGNQ6/"1::L0'FQa!+YfMk1P^%&K%fJgd<)ea-;^$QRo'TY7edG@'u@+3o@B%=7QXkC+mfdi@?''1W\>PG4$\)"Q-ht3,7=Z@Y;B&a`I-!#IW(#NZg3YfuoqL:ea0u%uh%7M'pMnhRrdJ,TQUUUO0OA43XtnJm)Yk^_TerK=5;`;Ic-'P`#):*aEUb:`nK"'C%?2'P:a2OsdgFK[A?&80!IUH1mB5"Ect9a^[c%;`$Ou/EIu@#<^.1Ib0iaWOM8a-c#54/3jDHW_XqZ:ZP*EiSTY2?_tGC&52Qp#H;f;RVG]NbA)pjM1/F::>.Y&P6K@9g**-WFi(6s%f>]bgoS:3-9h'dkAG&H0?L9"9=/('Q&Nq0%r;f='PshZAj8$gpRhfUaMC<L0oP3.=@qPbQ+-1!]>q\[HE5UP.1M5U[qgr6AVR'kQ%::RW>*;nrVH16ti#!s08?m;2fq5]Vtp[<;Eb3a2cV6i/n7cF#gg,t3fT=RVY_f3IMbcN`0JrTj1&I)=WS=<4s*Ch4IB\4*6:H]6]%S"&Fl*%)"7_ZG^JDA)3\!l\,7aqSlcHL&u<'DX/ZAA\O:[M#uO;1B>d3_BufC,g1lL4V0DY^Xi6g,qcpZ9s-dX<77BRb%"OJG!P(%6eNC*OUh"jdSE*Be@PH>`O6/*7&97Hp+d2>[;I`CU1$HmC5O8E@4QI<Y_!LTb*.s7\]ml2,ejT]D>SArm(B\i/S((JgLKIG+Zu3K%=iOs_[l$5/p[U9c%t=N1Z3']NbnoPfQq:OU@sg?+cL8A!o600Jg`sJA2Z*KT$hJ:T^1[P/(ggYQ^[Io_G2Q]r),#4P*F-BbSBIC"%=P_!_ebmeWQbr;IABPM.f%ekOS:2(qZ#c.G:oJGmd&)s78qLnt_N=gZLFSj6K:$FJLMh2[[9qo_Q]Xj/U%aQ(Rm7Ki<N2%:ad\Np%;c-,i8(NVg2=+80hJ%Yq[%q(8nW2-57Ja;\IA1rQbC*048d?`G^eddoP9Jd\aY+>CK;/C06n5-n:+94f^,H-1(sZ3O//EB6V[1ls%/RKfN!LC-rCXkfL,3V)B_=>YPK83E!Gl[827EHGI]R;fFdK>G`"V:f7(#@!.W7&X6*4l*KQb)t46oMQ242&-fG)%l-02Q/E8o<C0%-`'!4@hjRn[%.C!=#&cV77h>;=LoHYQVE#SMV**9[qQ@X$s6h7leY)_J2f>.dTWssQ\AlMD#_AIZct=dl.fR6gA(@b;:ircp0Z'l%LHVPE^H4<KmBi"shQT4?+]`b%F3+3b?,\AG2P4\Nh5>u%o<G.f";8S![=2?.So[s$'_!VrchFPE53L@_m8N,[f(uB7Y1Z$`Y,q[L%QIj[f8+4kUJ1l1b*AAL,.fg%Qb??lq\f\0uDB?R2q)2f)$*S+Ho[H,*$/9AuH7!.5AO>K-rXq5r>*>.>Q)tKVE:E`)Wb2=\,C.K=%caa2RI]?paFK'P9/G+(9FNcp3,?7CbV^rL[b/MLolA#LWSW^.86.kkqaE5MG4[b'$"@ePX]1[Q7S9ac,*#R@.?3EC:_q#\H>)Q/l%KKfbU[mB'45E%Pf+[7ooc2bL4\mA3>(gh;2CEn5p(&mgd-(3H738]1k!)WF0B$pIU0U76Wj6'00g\J;F(">;j57NQDkLqR<1(=Th%"`['9$CL>$e8hWdQ(tX`M@(]h\O*;:")9eD>K-)aQAufE3/CkN3AlT(El`bSG#9L]qPM/,Ph$0f.u4B29SjloLaqsrR!WpG4e-fe%>:o4fSj;B)YEUk)*Ea1>\peJ_^9u@2#B==&cb7-](A=S7r9qM:FCBY!JLoIHd&337Cl6&`mKS7^,kH)":QjiAH,`)jmDHPr&rH5`%e%UjH"*j(n(clZr;`7R<p4lU/WW<#1(+pC89Q>=7$V@%j1f\ZmiEaA^TAVd#<5CN\kjJ"r25j0kehTV=2dNc`iG\4CS9^h.G;FHY%`]T!V)`l7R3IMbqK?en'_p4Gs&%l6/P+fX]QZ1X9s1=]s/YYcX(/_#mW!iW"a*eV8if81TbQCliM='][#:hJd\HUJ0e7b'0SDfXX%/m@$M)*#,^GbSWEW-@_5Aoi-Z>uBp";A>`^#h0i'?mM<[2krM<eAS[A?]o(@h*L#HOg*n9OU+(>H\#B]**)AqFQHc<H(5a]?!\L]%/`a<JVT!7hT[1?nm6$G&#Q*E'ic!r-]PSG2H3DW:J^Gt>[p)f].tV_6:]P`:C!B29%)RsZKGAID:mXmFZU9_%=mDF#oaM!^+5%o#%_.1<9QDh74.JtKg-58B^MO]B(&sDGO//5s)UE+f,4e*Bp1s:5*IGW`?#aV!41ZS<(a3ocmrNS,TUdM=-eMGO"bIkX*-iV.=igiUY%BFHM)S)dq*dIh1P)8Nqk)^Lr8M<aH\`V+SRTV07GBj]uXdDD0I#0c),.tB'A*`\h)8OWUU1&qHo6Yb`(!MmRiE_G(ZDJ/uX`^6Oe%,!BeXf@13ePi]*VoR.N9$I^Vl'rk$=5@<VcO']%Tc2KgbM4ZfPZ.M:+:,bL1odSDa&4*rmor!tm@gh=BK,,_0bgr(g'J]cq[;oEb%?CGG3RoVL11#(fTW<"lg2E@FBf;<3HT"\TaIW'sFT-W_$DbebC-g?eRV7p78Du"PT-6)L$^9\dm'/)YQ40a?oP8c[RU_Epe+X.f%%=r#E7^g@4c?6EDr;710na&)nsh%(=`$='48UrIAB8MqGg=Y8M@M)_s#)WYC]^J,D"]=,h>dV5P$c<]>:.<VT8E*f$&YWPArh@r94%H\-S1)hAEt:+63ZCdT\&>"9u?U.m_-GEudPANHL2OhqD_*uMsZ-X7n&[tC!SM$RCu/'a&]NdC1]J94mh7rIXHZ]tP*B&><XbJ!k"%Zk`/f/jG-=D2$W5cZ!@^j\>UuA:P4VTF$)?L35PrG'.ef'cei"1E5/u7!%D:<'/$J@Bqb(J"Q/(dapRYr1+LM#mL0MS%S.mc2!3#%<Qgj_&"fLOCLQRbak<C9QSpu"->lH98Iu2;G,hc9>Fd1@c1@e5"V-g#DY25(;"CYb&P+\%7Wg@-1a(YqT_0/./*?q]T'-8Y7##(O%pY\l(WEF>m>G(hHZin*WAJY,]ROo>uRVeq^[9^/)RmEg-ra]4LXf8]m\AU0bV(XFnrr]X\eZ^pr,P;L<ObTK)r$?q.E:1M=9Xl-X%#'(oQ_\MHlZfm8h-.Fn#ZbUu70U'MXgGS@-6m<,8"Pg<3=r1^5q'9ndAChN^3i\]$F_ZX*iX.-\d.6]6K-I2<Q_,arDPs9]'Qi`o%,\Dk$6?'=a&1pX?<]q&t7)RO'&OudS[A3)=q;RCG;!KkL@VuBKg0U[&3[G]?TsB]k[86``[BdIYMsW"=9Y^_AmpfP*oG!pppe%>(%=DWaArS_qmnh\i-BQ_/j!UF(,!\Aq0=p(o/[^$6"6rqk>D00PDJNK4L!XIi@C1):Peq<$PY?_a5Zkh62)=.0liu*73b.)lS*PDDj%AMW1!IZ=%aQd6.s18"*S!6<cE<Irn'Kb$JGI+Y/"%AhM2^)B"J)IkjFbj`r?/sAmXft+1Qg4N:J64lb(EN_<CCg5Voh8&YC,Z/oQ%P"NQYfb1^+m+M]$29O6;/HX1jfNbWi"f*W^j>-PT6(;TG#'Q63fYj\LiY\iiXgS<om8T0IW%WY%kf;uYGn>+Q"WN%i&q88%_#7:)%^qRKtYIoso1Pk9R7L>%]nb:]5+64qKKW9`BjeRgd*nJ&DDPD1!?4"_('X:1ZUc+bq1mR(&$aqXsB(4b8$tONBcNG"!>jA#0%3:E4%%0eV_&S/C0EkG<afM9@qRp3U^6c.-/'Y`>dEc7ku_\i'Y,T;dd1@si!Q?m)>p5.SQP(b+LZt,r7\95KM+qD%jV^QYg=Xs!j9=E!&%/(VinY1Y=X\n851bi6Te[:6VS8*/^L]l@Z/=,!q0C&jn)`6'0&DZ:0]$QHBsKh^,AGruAY--2"pg=e&hCK,9U737gBCP9o7D$1/s%LEYqr(t4"Q@,V0IgBDY01#XZ"Fb1bY^3$f,JZ8=-<)@>V["/>tn0tRGA_9,'ZHQR1fkJN+g6]#$kWt#\Il+p_56WegRb%bqN4q@^%3GHPN<5N@JL."ND@DM<U.q:;+.j?rQWTmV\GpPig,hUCd%61RhPYh+)e:ANi7W#2NZcgDjk<9M7D-PW?V.W'8e0K$5=0?4YWbX(F%jTNn;c>E4h9CrfB/i8"JdkF9OW'U;ohQ"Y]7%gRYL\o/$_8iRO5(\[GO]5>AN#gf?jO@-!p\h",cL\#8C^EMXlfgE_S>@BICYShN%W4f@mh=c3MC!6kM[A.o&m]m*7YnYnj,aqH1-;?]^@BM4"n^ej5Ao)[n))@`ACSpIh,qHuo51c5`F6AuXF6Au`UI)7ue4uM5GI'IS%H66PKmkjA=%`(?cm)(c3kk.-*R6NbZmRmiO4-`"0feV5^2*\&&iKnND(@sDk2)K@n7/8'NC,"4rn$u5!7?o.8:bj-L,?5\_)S=K&%;-ZSVG.#u6qO?['MPSrM*8]Npj/*8Z;YR2/TZou"2VpD+p7_i#H*mnA9%li:-h*2o*\Hk\8DU4+RRBWAi`jV[XfuqlAW(6eo3Q2f%)AG"2'.6<"lu=8@DEKjAItNc6>fY/H"1@;W^Y_"A+'roJdUt_n#\HF?*njQ*[hf>Rcm+f>mdV>/`/5b+[O(QRHdcPFHWu)5oW-sE%VfV5Bp6F=.Tm^Xh*H8bIj7MlDc+1<(0$O1&6$j1e]Q<M3L@LP^J*5Tocu))2>C5Q>YH&u"nTHSD-eLd<T`$Q&`hWk^8/P=GN[e%*%9c]J2_&R-R(-AF.1HBFJ5Z\j:@cZSnP.6\h,g\6V6XV)0\Tqg'D%kNrRf^>-qHt)fAnR(jS!T[[?K9eLhhskkFE7Zu4_7(#0"l%3%(t:%EBe2Ro/bO+_RroFbLqWniFK(R+$S."&Rn8V,_/>0]ic(1L<4?9l[gW3>7u#<X:2RdQ]IIi-D`>9hN[(U8B'3\>_8kfmm="?u%9e`q9),RHF=pThJ!(970Q"O;[2^B\32mMFCeu"c%>FSk[a//%VPQ@t[?uB5=@d4Dh9_-Tk>aXaT!n1(t'BD,GIau>Pq6NGNEhBgL%jF\pP]mUsW-qLIKZT9B4!S#iVCPGMTF*)UJ\7-UQ;SKP_[Ir"<59R,)f1,\,AL=hYP-IuU:6?Z#EL)(4HOBfiG_i2+N'Kd.i2+cL%c)3fDN)1D6Yj+QCE$'03!+cpk=pp9I!J'UL@PB?h3^8CCW%=-0KgV)9MdbKX1<7%PJjEas&;B5'k-]!JY\lnM!#K9G.27@<R+)uH%7/(\U<2!%,+/_TGdd3H%XR8K.6G6C,LCn)/b?.0d<=3/JAadCukF$VkTAqO4*Es]U(i3VI3u[.C*IYA=_%DnR`o@gAL.3k+cXi]l%%4g5sN/4NMB&k3J<u[;_UPkuP=FA5Xm)DJ8'!96<6+P=T@T)COl$n0>p"sOe2a7K:gTob.:?#=bJP>.pag:AKmiq3mEVtUrK9"CW%-'W!\0cdG`em']XZIT!Z8%XqS[2Fm#o)u9=cj("=Ki'=m(ePuf#kXR?boMfO<0Bi#?uQ[>UnR.X)-j]Z5%f"KkE%UY@Y.NuAjYtD%*OCtT=GNX)<iEe:W?iiE/;S?RNM;@TUh`Ri:5@lU4^mO+j$<CQ,Y!9uD=Z5oG=9:Ma"2d;akOCLi5s*nm2atPA_A&q%8Qe'q!?G#%6L4C)]=iG1pN@7+r%P+Qh7"Sq`$ObtX"<%=-JC2C.oQmhAS&/5afJ2qcal$nr8uFl$Z:=5U`[([&"*-]Dgf$h2atdPXKSK+!_LDX%^@rYQ1%/Z[.->>:as\F(9(<!KC9mLdW'3U&d$)nP_G@;G;7<\hVe0.5Asgt3LLu&=%JNhsbBcN'-5(J/%D<%6"VOOpmc93V&<<Qp%W7X$oeW?I>>$@l@K+14)YWuQSpVX6g2[GM?XV;U,Li@neTZTd!N^1lUIPerOi!F(*E\=*&2^&Hf7'Cq!>5.;\['<G_/T+".Qn2#0%V^AZT\ng4e99:53[G1U>ErZ#DfK7?Ila*F'e#VZ/RB&soc&HL;%<QN*Z9dr]9K-c]CD4ut?81L@NLf[h8cO"tr$t6H?_$-J"RNH"%#Q=KSBWC6K%;$=<B+,%IKq<$c..4om=YG$JX19-^AK5`&,rcFeJU/<[(4[a0-NEm1,'`cO?qrf-n_^BX?2^DeaF[<;ZbPuCqo@>T%eLM-7_\G$#"JN9V0(]UHDGEln?%Jc.'XXkGbQUX9PY*G@8">VO]u/3F=\54e"rfFn\3]*aUSmUQTiJRq6WF]tB0_dXo*aL@8/u6r%^nB3OkP/qDV&$uo!Z3?pH\q8ln"k'P2TET%\+:\;Vu5kAV+I!Vqj#Y0ouGSrs7OFleDp3R9tpM5$e'$Hqf`-%@]cgfK%hYO3OIYs%&RT1AN,a7=0\T4f_iguU]*W[bqBgLN7$H]=k[=rg$4\(>>b/\5(lKdQl-9ii>#K[$]:.P_//FCH1no1h/R'a`Dn&XVAqlVZ+q6\?%(t%,mg67>5-,]mS>-]s?S.#Odpe%pc@TAV4ng']le_ja]+_F5l'%MlX16=A9(0LF(!QT/UH:O_#@^ntu.hp`+\=bHB>aj'<1V(&T%WqeQ:OHS@3J5hSPp:_4Hg2'%k]cAlF\h=_Ad[;[%C#6"?UZ%Z+Qc)Ps*:8gB@UY2"@,Y:lMfU6'I$iM)J`!qE#,j%))1m-]Ml)#K%\mu6)\7Q5`j^/JV,IcH$:#b%^pM\IVSk=J;!!VN*6k=E:45A+J(BkqU?"#d<5jbQ2P-2YQO=ZmD;alf5Y4,N+h:[B$O1o;sRQ@9b%.&8TLOfQs_.-hDG?btu`\gHS/*O;IspnrGZ;1)67-@Un\btc,e:(CYOY,NFFHk:E3N5b(bd4V^)16l'`giuV.`(QM8X1BLO[KCYT%;_B,'`Jrq2e+&&)C>:4.TU5/.!#r""P]`a16@]gp[Ar5rZVM<H1#f;3<^?lE-=F.cV[dNG-fb2g>GkRblA/MW%%\@>='*THC6'*^%J9#VR,TmM"2%&-h<O:>F;q;A0Pk#!TnWB=)V8i&o-Mk2GoEYLH+POKg0,A7`fng58KNPCg&5kBcJJ\BerQcKd@A_7e'ab+"XX"Td%KAe!uC&i\d@a:@P:t4bClLC@<+,`<@PW:UTW\YO.FIT%P3RSCcLPf_`08KfT>sLTf#eFL&,ZSF&r<`.rY+O1P:DeMTb+o+&T^,Nl%&Vd2"8O.f5LMrP@XTWl:q'jiM\qlJuVG!q+[:<<[e6l-U#?.a4&ha;Z'*g7gGsmMXNiKJs4jBkaE&pJgEtEL%G*A[0JRs<Ida1;e%qZG9n[Z#s8_R%M&F$boMGs%DU]l\HUT;!W4Om%5)F,'A2'_Xkn[[aPg76!*Z>[<b:]5M]3_7hQr]%seOm5-%=:&MQlH3l?Tht5ZI%r7qA03W0b-J&BP.elI+89V(64?\%r:kuO7n$aAkWfhMGWSg[nd:"0_jVT8uBgllOlM(*#mO@H2,=b)j3R7n0hs$694K.%m4T<=e[%H`,!t7K1U[+\?G\ple:(%?\ad?098XE-@4J$#$PR:LAB_CCH4p&b@1d6;n1Si$TN[@JZ)`6`MQ]6XsF4.PG<7=ma!;[>K7LiTuD8%%p$.ss"2.uN8i9RK9C?KcNI=?@8(^Ya+OAB^/7iOP4sT0#Hsb[jj1']"?<Z$iDFSK?SP[@)kP&'G;-B\SqZ14a_[g0<!hT,ZI-!\%Rr0G?V$RB]Zo$l0VH,%7-XE3b+.\[R5F.fT-i`=#eS-9+VIhZ4+Kqd+eM09O7(%GF<qR!Nkhlo*!d+UuZRn%QCs]PQB-cNV'4@FD%T$EUsi'e6(%O!OFLp68kH$3dfl\CQIOj4aD`E<1Sbp_I=28Jr9IY242]KYhrN*fF3:qc:^?+=QiHU<KhrA_?^<lp,1:RnHAmVB6-%)K/(`8&\^0864VrL?PJ?5jXJ8h"YC[[\>i/27<okGmq[O[+WY\l7c]1r!6XJdcn1cS=,\Wpj63XQdFkHlStN^'\!OaF2a+hZXrm5%bni;kbnr*_adaB^n(p'C\&TE':@qR;;L6$IF$a4+\\5nD_hVZ[Ie+&M[)9/?%Z5/.5Um<UqP4d8MYn6_kWuW]k<KIIgt0R<_J,Fd%g-pWP6)k4fPScr+"kr*<:I,mZFRr@kKT<'Y!t)V"[Q-jonS!$VWsqK^H9kY4J]:&bdqE<K9Z9$*.`XE.4!%=pJ&h\j.h=K,jCOAG%6*ctcAf6RuC(ElY(nnbF*/*'bB=YgTFL?GVl"k?^D8'74G[\U*H!HgpmTc5=J(VN^g[2JWb@^17h9nK>G;aBh5QiT]*DX]&nULcm%MNJse8ge7EnGK=BR:Pa2<RF`naYnfca!_noK%PV?[,"7nbkf:Z(bGq)nK1I7TdEXE9M*keHR#7.!5UBj[9lHZ%#9H"-HM12<Oj+&%F[PX/1-a.me4@rIc*@pq9d@@4R*t!0MZNI*cq!Nbb,TF/NN?9chP:0FP(7[7F!RNNc70Sak&.#G]O/,OY!M5kC(;(si*oU6-,iS+%A%\(E$>>e=T"6MurnY:DR]B?Xds*?jd^>6AP%]*ND-,j;)\C0UC+CFU[q5kPIk4`S4m%VRTP_/G%604Qp@.aq,o1J7^0S+'RsUD@%*NlkB6=+K7Ir<(\M<WK9Q16am7lieFN:F-XIXRn)6_27'.himJ@Y(P,*#RRV:lEWe!DlPJdt:!i-cEjN&$S"B[<pZgp\8M*7n8[E%d`JXSP;%/o3b6Un,GG!N*L:tUR)ItW]lbA4nDQ1e4DOO;0@c*k"WBcjVc[A]T7k+\OeJf#"_<*A?`X"[a`P)F\fhIcN[>b#dAmne%Pbt@bk_QLi36BNRqdU-_,^ND42e/AaIf45^K!%[S@+lCk/lBlljgaQGbg#"rI11:hg-WI`O+#Z,SFnrqG%0nH[ggg4fF&Ks/4Q`0%=5+/VPm+33,HtQ7ck0T&3OZo1g!0sJlBTr<,[=_A8"]Yc)nLIk1PN<G6KYQ0FQ-Z:o]b%%`fVkq6$j@)F.?\o.4?/a@h:C),bW;g%6p]T)g%E")%J-sG;H#.o&:?QC.Op!E`Z:bB6BF\;8(eYB!Ke>'Jkl;M9W'_r24>CbLFq!=B7ZduF/":)U-hJOC8'buot$!)3*5<C%ZE?+mn(E<`I[1n]`]QXH'A*@e9,cK-d>5udF!O4d`4HhPC^XWF9jWRm+)A*[6Zf+eJnFk"4[/c%HYgBNT"AZ!U^%=hBg3$u6;iAb%aP5_A.ITkg*L[RU5R%Xcn0hq0f#^mhk9hP[IPU-AVG5U7'jGMKp8UmlY&*\USThG*hR;!W`Xj+=FhK5KBB>"*YdZ3RK-3r?#2u;\%.jb;LC!A'YM_?cB,>@A0e%!)dr>2UNH_XZ=9.JW\:[VnOA,>niCjbH/N<p+6K`fB?E(tK"__i\BPkQ[2TtO&rbbET8*erN1\8"n0%ZDc;'&jV_)<T$:rhN]9NSmp_ebp$Xt7ihjc%QO&?Ui?`h:V=f7@L+K<Df3pLeoK+F3'7gOmB1m<+MB7KLkXKEgs%,#+:B^noi[Vl%K4'm]:TSlA.M(N[ptKQQ9BNU'aP0,7/:qUcTW6./5G^T34r;^a35/+(8,>+Nf`U?u^'SCA6jd3J?3D#>=R6uq4i6B!O#B;P94L-k%(j%f#H]f)tNKS<c,)hQXGsgaW$_;pk:kZ9[4U$b#_kRC%F$A/=p[WQ?P-_f>A_aLKl^VtjeHPOGrjlWJ^.0fCQqM'C(ti6kDop3]%WSJjfe%KOoG&F`pP,Gt=i8>V<CN?ms0/kt=1G')cjY^3n$WTCd;3C%^j^]dPW+:N"&_.(R27o]eVn3O$>*.MG%LDr"-_sR>V.0lV%7G`kt">laq>ndUC#o]!AH8a*5ECG=PP+PWW@%o(3&8^/h=6KR]O_R[J)]6V]K1M0lF6j'.c^;[3q8%oKP)%1UOVZ(Fca<1)k/\!4%G-juBH^2[,n!cT;6!U-6H8iqO5\NhNTA`N\0F=7u'eC#P*bU$rPfq;4[!*GH!e?K?geUE1k<H8S995t%CM=%!fR[=5ZNNZ5enebn%W*$8.f>Ldr#8/jD(-u8S_']/\h=jgZpilK2X/"N8.VTMq6'io*OrP(:&"J6.,V[i7b(P((W7-MuY*nIGn.S8J&r/4099DgJl9d8b%8,NdGM-+ENbNYo2Y[lCt(d[XcOI$<@pS"dEf!1E9%E%H!=?;S65dRqApaspYXJ-nHHh#+O3$D6Zs!8l['"&R=F:2A;(I[T#<ZL6>%!Dt2>h.TAHgr<CZ[icmo5gD*o@RRQk,5)IoU]9f%BqO$="L^?3aa[psKmf5rm+P3i1PUFO_3-6l4`\@U^A_4iL[Fi=2[F^bek?,l%gGPc$VmbJU%HH@5pTHUCH5lAq=P8@d;XZY'7)-I_;@21Un_-`3EfdZqYPdjW41C#0_n]NG\%pfL*^B8K>eT47ce\OD5!8T72im>m%Hb3K;]e3%0qqK^##q@^FBl\Sl\U@hJTiJ4gLCJg#;fBOG"*6fkh]V^jO'N,4V]dX&K4`u#Adu&HgdnUuU8;?tm2WK?jEgPCNHTDT%/2XaFd<Z5tK,,'O)akoGW`qls&2e!SEp^;-D]$F#Ub$?*-A`C5(b=m"('c%>5P*/ng9<#L)p13-r+"+\']>9Vo*)3*84Gk8BSIPH%)DQj--?_YUHY=UBLll=:dg,:Hqm6oqqtEqE8akM_^\&DlA<ISIQO2&"KP3E>aWSiGcW8*Vh<;P-(Z"'i(bNhPlkH++9nmM$s.#;Y%gG_;[@<XKuIdtapkN^df]5[Yar0..bZ2jHF9/aR=Y#k^WZXsGYZ7D7!g[P(liFUm080RV3KK.riZkr,V^eg0gon=$E3>g5J-!0\i%d\%$?>C2dq!ngkRq?Z+q7t++Er<1e_b3B;-m3[ms;'>51D"<LX]8WV4:iqS9(EBDbH^d`]j<S.UkQOgu1X'0/4T8IKKD_^5>(JIS%3mcg@-8@gXK5J8EJ`j97;ZVnen(Sbr\#J+3%;BDeNBBZH+E6OY)dqb[Trn-mUB9.K`K]j"E4h)-Xo5g_#J-46q^/T0B'sCaC8QXY%b8(f<D:Yh*;qU0\RTYN8']=YplKODaT^]a0<!DYu`t`SG*Q)DCHC?Ig!/sa6*$#W_!(fQHY#4"JfF+@'NA`/tfJT[`PRdrSZ^ma^%0+AX#QES97GF\lM[i>M=kfcOU+'mqk0LJH-XRgFGD&-3s`[K'/:M/9-[e$-9?(rY@fmJ2U9Zk&N[E*ZX)]h']2c"+aK]bY-b'acn%B?m*@B(B'+`,T,a#sOCNs&m%-`Bi:sS90+tP&FG>3O9prinBi?NK<C,"l+69lbX`d@:e)NCMSRpinEZ_E-6#GE9GXVZ%lUi,E0ss%.QM!9s*<Rm^Mg7,G?hU\DXR6HjH/6jqeLL8XGrj`qS+&n,`OUe\UAXV<WDpTn8WMpL7,Gs'?iK\QTgoG32nW0ljtD!D5XF>Oj3$p%h,a9ec/oDMA):2n78TFk,^J8<E"k8h'm9H.VsMT,)[6,j+Csq81_-[_4DV@NW2,f&4IUnf&\m[2p?NtC^VA"m4)FJjemLDhEXF%g%VePic^R%-V>*oio-T3f.DS'2H)/V#kXGf*WJ>EjUDQu+^ljoGAqTCI#C#j3i\CoT*>u!2/=1au='E7@**[QbTbR[(+dT1OQcR:uQ%a:Tj9JgkWNif#5cIV.9sPQDVH6L0b1P_gA_B%;&Wd"<C7P:gs?UBU''qYuZNZ60U:mGq1:8AJGoKJKYl;L#r9?Q106Uj&VbJ`V,3%LEsaGQj#ol\1!h%,Q6]ZBm)S'Z`,9`<#JdA,ak@:d@+j"To\>0)nb?W=+bDl7!38)GSeG;!,aIY,2;J9p9tX.6#+RX5m9[sai`hH%m_RI.5^FAD%XSP@_\IK0/Aqq)A;T8k;7O_RTfG+Y$[a50..)n;*;82d8V;:$b21>UiB@BE!+CL""L]<T,A8S5V(7Yq%aTf#QhV]-%ak?!Q_kTBN]W"JMgC[V!jOO*$Me+!PWR<1d.^&7&5c'T""`,RM&9cuek[%.('mV-tMZp]bmaP3brh32K0'1_Fe%>R(</NfI#<:1L%7s_OZ1R'8#50T(lGMLeG"scL\p*\b%L]<=0gXS_skKYr#V]1--hOtchZ$<cIf50<#:p7?SBN3RLhK_q!/0E</2;@;!?F0W0.I4AV%TL.&:2/r.s[?)8TP:S6!=stjHIJW*bYtq2`lT6[nCG8E@It;T[V6Pa`&3.9mD:/>Dlr4F;SWXV:0%+K?!-F6(@IIB/iPTQdd42_C%W7$<2bbPco+ra@GTHG%]M63"s`*$pK>M:6<J*e`>'&Qh#Ib0+^G;3+8IG&>l*#jA_SB"J-GH3tH.J)8#iVY*u.Nk!i4t&.-["lAr%:jJK;fEUbsX`\S@-lo^XSb`6I(\H7f8%^-g1i:'N:D(B29%c/u=,\[5iu#WZngh'`_/2,-A82PZN]gJYq\(&cLINe=5ca92rdlt_%,!3ruA4qN6im+u6cnqk@_=c,-[X#i,lanI=S]n">O/Q-F@93YZ<2[cPYrFh\:Ga8Y5%?Z<$qb_4SQT)oY.a,=#6(%^/a474=,Xqc%=to3)X)1s3qg'c)kJ#6%ouL3<o%+sV[f#g=p!t[i_tE^3dc#M1rq^-HVBpk7]iG)2kLQJqrU7:>n[\>\7ZcLFaYLCrgqj%TVA,aj%3`rGi;t>YZ#]2@Y>AB<9&N;.`Ec[g7,u$40IPg\qAuk&B+u:hGVg2#H(+QVfRGL_QZ<0BcR;qBmMJ[0f9%OF7n.a.<o5sM<eaibd%nP-Ig7Iun9]A_h3kKnXp4+8.:+0I%]3%=\]KVNU1"UF8k8EC':8"8*JjhAp!-[VFfN,;VWM2Uhd)/U'JZmkc^H9-A!-?@j%ChIJE%6pL>4d2Z?ETY?aQ*c%:@5#1u/J&^LX_k/_`92MuR\V*1_e*BDY.hdl1mFi8dgt9apo<aiXo<DS=@B+86jc:4j[c_hW?kM=tlE[gH%G('e)M^'-!26pZ4N[pf6/;gp#:N.30\Fq!b-?7ILIEsZdmKkBG;&iK2<9P[OEYeIC'PDq2Lis5Ns-SM!Qup&<,1i5gc,2c`H(B*=%'7raL"_Qd'V]%G!6P(S-7\C"E9bhVe2Z!10QPA!./3lC(UR?n$I[94ikHa9URag9.>_lWXJUh\@c=l$fo+]p(DQD(B>Iu*)C:L:E%GqN#VOQo$;VrRG2.7?T(a>1bckR%cs;H&-`^ikRJb>hI#UkR;&S3p[h:.F^Pdf+K'C0^mRATIU\[HWD:G%lQq`l0CH&RV#<*ql=B%rc`ki5J99&Hc=hLQ]2]O=;@#RXQ7(m_?<ns5tfh#/'VtCRh_$8rLM*D7>DOiG>iP,%,FV3igpG]WPpc>EKK7g/U:sVV'*V;(:Htr%8-KHDe5(^@@p7A3#690JOUt8qihUDL3/).:jeEfjh.GQ4"&".q,HjO%bndI1;$S`ToRQ9OaFoCBP;?ge+t+(T3GjnYYm3KARp.Rt%E(NGdEO2boZYW,S!&Cj8W`jGl]D@)"-t;4o#c&-pridthpPDX<FP'Y#AJ#BYYb$C$4uA@`B6<*<k(sQWU9Sj](N<HRoZ3-K;Ih^!%h_qqu@gnQuBsO_.:?Mgc[KmI[!..E:o,Z4oZPSq&`KJ^0aD!9WG\.t#m."J5iam/?k]i&e2'>Y2c8?`I[lV->dI%uUZXA'%j.bpl%)d0L2TKI#`B*5MOJ[Apgg#0CIIXsb6O!VNh%PJs++SGCC1L.,e6IcHDQHsubPk]60lNh=:W$DT..al7cd$%3GODJ[lVfbOUYV%Os%F%<U/PuXW4IbP>%USas_7^4D8V9#FO6'<_0n4O#Zg?<1oK$H[]!m]Z*FUqTNCD@+GlaB]KB2&,m9sbhI0_0.\e&(ukCEml,niR\6%QTO\A^_`HAcW6kf=K?Z6'<YBi7T%WhV;'ip.7EBA,F'k8:Xglko*\,g+[Vt[(9+u%TR]KO3(ALaLY`"/VlM)pI(06qY5ReIn$IaJ%\tb:pfTC(S9U*3iN$s5pEJob"]qhR+D%?k2Y.0cq'\[JT-!%ZSHOl]tB%k*?fdUtX5r]5?`]V('R?ClJ=q*<-%8_T),Ak<)ocTpF%-Yeb3*FT'l+QmPJ-+=Y,__Dhb$EtKXo@VL!M&rf^I)0o^MQ(koW_.4=mPpe0%;BYV,uESqbuofCc5>\u<NXTU)a/q20k)!Gl!Zo7%q.sj+H[2i$.;jX`\@4]rs)t%\Z]J('8<J+6'li@fXX!Q3[?ZDQd`P`+Xm+B:l0FCqp%7pt_M[&8W39E(N5j#?U,d7*>qp7J.gn^I%>?_s$g?L_3Z7do7+0ih'+()<ihXgkU`NEA5?9Yt7&3cPVHc*#*:?QU!:J&TH*f;h;Plr<fafVouUG>W&/$&lp,]!YX0nG$8HJue9%&iU,XhY3OY:,ubF3N=YWkWr2QN=J?RrR8YDFUE8+QY@qjW"@F%GiiF`L_]MnD;/M/ansW37d^Hfgf=sQcpMmd?'H/478lGlp?A`>%<&YP=7\D^68cdVc-s_nM7aqu:[,lNPP=U$X..Pc+g((''s$CkLrkC;#e#r;n_L6ckZP+LYoIum.[(,@GVO#9obJH0=pWX[o>?E3-%OGs(lFE;SA_J,WERrXR\(+,U>H=>O<D/J:YNS06'o:=?[W;aMC!&re:)oAt#o`O:FC),AJoZb&)-`@*5\DLD^f.AmFGNOM1W3e1S%lj13Xf<SoCG33h%pi=.j=_8EaZ89Q<QQ;uh'aD_cQ@2qYDkDb"VJ7ss`%VccJf@j'3Pu>A[5Yr\MYC^qp5%CiJ9\)F.e!]t;:sm]%_&\S#Ln3,*7V1G`DG&-$`9mbuOL]L7a[k]JSDL*1EO`;Rd^b:C[!@W5f#p\',b7d<)%Ut6,.u2S7n)3N%qeAs;soA&-Ch,0;bl68%ihZ18CXZ%&m`NIhhqHSP)mt0>_uChHL(N<CDaq/[[5p2mdrY8hbe)1T[;ILG/+&uQr>R)<YV\Vt"Fs+Km9a4^n?l)l;W,Fd!#cXB%1`DnR"$,3LSIM[:bNQSo-lN[Q2)EjO!tfHl1`F.`O2?u&.`BeYj17(VcTYZMMo)#VAK?8nGJJ=_\Hlpc)kBE4MR4+[Knq(B.Vp3#%\[ap?Qq[gG!M=$RQACGH(J!9*2Vf#NkmcFCG,U+ZZ47>:42"$7i?@H&qu+0IT&BqgYQDT"V/X35@[4H/,;3@lSn:':+F9`+6fh*T%:C,,H;/C?E7c8D#U%,*JS#2o`g.hC?)>?NrA+2)OML4raf\d$R\Z;t?^tpWr3@7K>a`\VFD]S3Yi,Q809X!MZphhP:6^K'%I(h&!%>DW`9@KcR<_fgn/BJu.66J6OB]'UIJp<VV`m3=aJY4`tP?-X4PQ8+s@`s0CX\J6L#[lpKl`8I!+N8)l8oGLm4qI@d=Fl/'>6Y3Z;%dJ1%@2N>&XAC^JOCNf)jMZq:I`iB9tL(%nC]$D86bEMIE2XVsQ)clr5)o(<A[#P$dP;/-lW]j2_JFU_p0_&9&0Bfom@3ksZL((!^%!/)Q!F:f8=4n-Qo6Yi9MfcQ2EO@g%:``>*,^V459VUqeT<!?=VCco(rh,AKE7MaliPplfeQ42Mh2V[UcA"t-u\s(S8&\hJQ>K)%8%>[Jj!)'g/da2[tM(8:P.4&`UAk\=bQi*`H$I7BFW+E/8kUNXLso+:=^bT"'q2:",r/T*ml-q/d,!<=!paA`U>Z_Aa/*Ql:sRCu,&%dZqHd[]26e3ZKiP;TZ](qCdC1-*Br=Q/74[OlFu#A$+Id%c(<s"k].DV'#1mfNX?K/.AJq#][]>b17(pVW%<L#1mPKgSs]I&=MA%%49PDEl+MR)%0^E/f1(G%k@BbUpQ$F'N;*h'I,id!_fL<fA(Y^\T'jYnd`-]`e;EEbgt,dkm97(EK^4S6dbM6BSUB=`I0(?lZVX^q%?a3Ii=A)[%WclW^?h>(>BrP;aj+=E0V#9%P:SYKYMq-MRdUmFTOk7UBLk.SPX2TZq5J'1c=k#0^/$Vn6EDmfDs,kPLSGBWB:,N)M%kh:N+GYu/53i[A5R=b60Hq@G6Ij)q\i5hsCZY#j9in/1VeQ1XZ3Xn*4H%FcZ%$54"')b+4+PSb%GUCiop*!V$VYOl-(^&:s22eHh%L9'g:[&pJQ>E1Mm@bO,ARLtFa-#4$/h_]"!9iG,XJ$Jl9rWi^sB\J0@N#XRj'2t&sk#q,N:m0Z=;OW4g?&8N17Y-CqB\V)"9Wc*T%$E=/hoaG.1L0$oGGYHOENAd\"%_LC:T[[W_SkG1;9Z.02`q86)Ho)PlHY^;Q?Zs^1UmeN$%FY/WZ3Mc6>d4RHF3u<m7>pK6JqmX?%MuWc'I$njL]*\KH&,^DsnOO)*<CO)b7um9ZrQZ@O!\n=TGN;t\JtJ'oO_q!d]PuH75tJTai8u&=k2]q4"ee7uiB-Es>K_K\mWm0?%Udu:IOCK]-8/m+"+P.FCO0oT(6)p,^CfSf^7+qVYJ=!M+%V-``hT:,R<1GS#I.PQVfauR*:lf#/7+)2?4]i$6jN;-%*GAhi?'[as%/dFo7bRS1eT!bQ(WBm(X[a^,sHsk&!a%C[/U0';eh1kY,2]Jtp\0rg%6.Rs'd=K)R;AOr[XZ,ohmH!t=HmDXo'lTl4#Rl&n\d3JP%:PN73N/^^X]0uOsD3;'HV$-H;clLIe$0Zc216A$STedh)M>*(8)`S.MORSF*=Md8!GRDh>+r2T^a<H;ia0YSi`SMjJ]oe$-HtoB"%lf4^L,)fqLcIGX0-e><3k3MCLIsf(A6.fF\ZdKjtZ!*#6.sB*-Zt-`&\73'4k`YU:oNAJ,i7rgki8YFD%P*"+%::BMpEjh8*8soN%]^b78?b*oO+hs3o>8Y=OlG.QHXY\Hd!0rr!!;0/2%9-,d"eF1te2u_Xaf-6(Q`=79@Uu;@[d%K>Tb%N]i<#,a"WN25@?<ENrVQ^1%-"I.O?-&a,A>!aET+0;@XZlVc-n(uW$'mQ_$9dM'c@;L8?k6o<TIjuaT&![Z0$L#$#/Yh<n8O5in]WKS(@<;NYR$f3Ca"l'Z:VJ2%D%o;;PiepiTEK2qTG-[6r:V*LjHle>.O0:K9D"%ZLJ_m8O)!]blXkJBfX@j/DTEN7DN[SoY=u8MjVK9?l]6b!rq^,9ZG6B@Rr4Rp%^4*q[S)udZrUqE;jR:sX1a=CJCZY3Xl'h`k'T\Y!$TV3U%h47I17gLBM3s[;NW.T^%J%f)DKTiqeNO&LbC-R!@pa/L,f"PS[ZZCC%kR`G#&bE$@B?krSQg@Z\2"-XTN*BnX<+n[_63M)>XG[2pKbggdr_Dq_PsNGhT^YJS/I!.Rb0BQ75DGNOaR$cnd$:IZ\TjlJ,L8s*%>_)4XE%o*;fIA@VD-*qN9]XFJq+S,Zd`[#`[5U@r;4.RWYB=+o!R"E1>??I(oT^?MW)JQ0+HUmiA>;^hGGg'DjtfV-VaD"sZQ><>%@KqN]_]"rldfJ?RmJO1gmpH:tY.c>7Ge)YbmkpTO-O[r_bO]t]hkrJqqLdGhfI(D0pC#NEW>s[;=0ia7YnaDo=:;U?faH+&P/WMV%?a:Q]ERAN;b?qUqM@GnScB0+?IFb/McCah%:@#Hdp7'r-79PTAWp<<E`ol3tSZ1j`;E9u*/=[m-SPD3C9/TK/D2Caj'Eu]4,)ZJq%0i@>B(#]Tfd!08W6otu]!jELJF@[Q?biW1fU<b0Gi9VF7LX4V$@jA^>05SLk>bN@_@]?79fBetQU("#iL0/?%Z%hOs"c_dg*0)oG%f])=h/dPJmgm@:(:4PCXaJn/n%n)Tq88)J#`><4h@*(4X8_<@P7dBL4"WcD)SYS'f_e[i7pTl])!RqX82r5&lj$KP&M?["@Qd[,8%(c1083KV/X4GHgsGdm^Vp5&AreFjSg^UL%!blN0qjnH\+]Jso:j>*@6%Bh<hD&mfSU4([bM\]ckkb='@EN`LOHl[!G_?aFV.>No[%^".4Nk\>HkPE%N79#+:qZ@2FPHLGX%lV`FN[-GR2^V7W;aqhTgS/F"Yf8!:K:t-Y\!IV&7b&*[+U773d6h(W<'g[5^\.Y<Z+P,M=%2W3OoE(m9%R5003Y!ih6bnc@g2gJ2lAi,e*o6%YX?.g4%l,ML9d-dGQ.oNEW@8c)TY"7Q17J2$FL?8.L^PZd?OFS?*+g837.MeEP%.oQ%ga.:\'8h+c;#/Wq,ijMRBQfej[\KREEl4(_c8UQ;,^hS3N-37C&JoU:1N%V%8$^pnCXsIL==S+\fOiQ+(:dLoEOldgmK4?.J%UfVkg2_D7sR-;P;)>[#)"%Do_'ueX4.fV:+o.0TI(?pnH4eoGjkOC!08^?2D,C/7??d-2WETH/\%4FFe;h1GHgC_3ML<q$qT%S"e%@?f9a@FRd&IL*[N'PsSR/-MLEqLj<sgKnqXOVp;:ENlMBdns)HU69+!Kd$S.$mO^3.Z'j#P.Z;bpB+iQ[qEDm5Va@gisogl8;31#%OoK0./%4\u+p&*.LW/cSbUV=K9?[DdmCRYE0g,(GT$;YsO%3lFaRI`Zc0s'ZoI]<(bZhcS0]T_*%QnoK_:srB9:g%Z[7(TIGA5`W%A(o)BpQkE)V9b-:Mr3:_(7%1Q`3g$S'%qsji9QH#:#P>uV/8K4G4e=4G:dY8%-GuME,LrSTT=BeQ>h34P<.UF6^k-j:*B]frKI+J%rKrB<&?=K5o/J!`OkjD`Fhd"U2!lQe(-htMgu"4R$6kHjm!+;NnD]ln&T$>^f3SGMHKCBQ5CNeXdAVR!2?f!Pk&I#N5_qHN"1FGa%K8KFX64Vh;TR\olg4ZTa)"NAhEBqYtJEcg9S;-g5dRa>u[XoE#L_M9"`qP$&R0](4O?Ba4<A?jc=5Lrh.eP]%-,=+b;[qS4d:@27%./L3ainNhe`CU00g>)Pqp.LqdlS&uFO^iteGZ5K9D$O`-,hErn87?QK-nE4Tc5"/j!qU34%7se:4MV>cGLFj_R<$q&:+#cB3hW$p%Eim$4HN!8YZJGPm4^gn=mI:f5fkOTu,i-#r!1^;\5?1eOn@/#a.SFkqNtklp6Y=R];:8XSa%]?K_'7iA>I-n)LmG-jWDEM2QS5$8%9=B-C.%NYMM^B+Ia=AW8UaYlg)bg":<;?:i#7)Sb94Xb4!cN^u!0C<U[59=dT)FOekud!`>;oU*,)&R\9H,+BOB`q0Mq8"ek6%X0%ej'oE7'eDoM(I"`V:TV%>SN`a2W:s)ormM#M4G2`3YdPB#.o<o/YcXKpct7q**7s/7I\f?lUKGJ-\N-]=brEKW$s%!<rcm5e5q1s%8+qf%"Q3bf6b=s:7L7iue>dCaHfBVI%clRT3(8EA8].:j"a`<="f@GhXM=,gQjp?(^e+lGU3DBU'(()YJt"PTUk#B*#?hL><Z[<Y%;4XV!aTj3_O<\H)`V6Ngk+7#sP"*aV!h0eH#@O(#8`-(6nZ>OrZ]-$Mn\/%nn;IfsFj19H;:k.Ge^Gg;KL1.4(;V#m=X-Or9D6G0%[:GC`;(FQHSX3I?Xj2o!mIK.Uj5P+^^h1&UWVTf'R$6a0[ir2\B_J?Ybd&TA.)=0YpHgfXQ))!]4ch]f\DiI<4R/Ia_.)$9lu&8W%DI34WD[A;s6l?$l`orm/nk\MiRQ#im;V_jWFI5Mf-4$\aXb?o/aaT;""HVISo(+R0NNqa%R+l3PThb^%N)>JSEH24t=>YId$MZdP%l`<d:SH`.O25ejX+;V'd38?HJ'BM_$#kNu;AE-2i&%9lf4B_Y_1R0bS0U_7JU6(Dt"'L;MN\Y>.i8`Mm9bYbYMF"J8j!2##mA1tQ%P;O45H(;qPB_AUc<*++Fh.X%OHA7:FP+mX+eI!eRLQRIE=#Z9-g3N6[,CA!d<b/)&OtY&p>/;SLQAXd.l>=+7[^Y-/7pL%<UIYkP%8odK2>i:JP+!H2b;e>0=<uOm,.<<?=h6X@TjtF<8S<SJ:Sg$3dGVb^F)[ZU%FH+G:fT-_fVGBp+cfT/3f6V],hrEaaq-cD?^@U-c%p)^e+VX6V*DbG.sDOho)]=(UBo64cJTYRtD=u`P5er,GiY,iJ9ce$_VGHS%dQWmg"2u"ps.u,'Fed_nk[X'XK9@hED/%Mm=DBAgP%(<Ti<$85fL-Wli2q9STX5:R>'T:>>BflePG##ppJSs.&LoOM1Weks-.,a[c?HUEC^=V73m@d2S\m)RAJZNsK3_e-EL-&bGISK\VW%otHOl1t:TD$9)GWbmgDqiXOQ"je;c[4!:Mt%#"GSp`K88euF#@[Z:tod$UQ]JUJA\U]U;3rW9p2H-",om6?4j4*uJI2>.]@-jC]R%?7"T7MJODYJ#1%<-QHnZPOG-4cL\EFgJF-qYoU_o5r;r1i$.>&Gt>Z?jH,:'d3Zmn8_-9N2k-F-fEY'Al;s#%>@gc0)"qs`8T2cY%@\:4.H"Jh@C85W\0g:A[md6)65?,IN?p'0A^Y9W9/(oq-MoEj5nPl.2p'BILW#HU,<)-P,9K6O;>[=[(Re'Ts&NYG"CNRjWX6l#L%ElfL;9O"hpmTd(j5EluNo%`lO."&_W3h=eK>bn:eJY;pIhdfWFq,JU\=J%hR$']f4-qsVY'R/\Eonk,K1j9Q[I&"2H+aG`gJW/pO%h,X+jkAPcD4u)e>\?qBNO+F9sG.5@M&IINUJB0g8/`mD`&)(,]G-n4+Rc.)K*omOr4Y4_ah<bE"J:/\R%tErT@!iMDJ.F$#cI5j:%`ja:kFU8:R+5R8g;.PQ>;ONdWFF"^&_gAYt!_l4=5*S2C::cF'q?V2Z@o1&;AijOcn#54SSENu')EKGTMmhXidlml;]K)@'-UYPC%'-djcH#&+"L%Wj([46K+h0b%l,*Z<ojoud-3UTQ4(AYic@3aGX'1SbRJ+X\!`]3>EMKr#b=Y^O#P[88Prd.]cM->,,2\R-p"[eD-%nR##P\7r_(>^Y$"_dM>8/f/?XiGGjVSmTOr>81%$3J,(PLYM=U2dpa(e<;).WkVAV*s!Dp>![s7#goK"2(4YXeuAHQ/eJpl+9O^7%;9ihXH5E>eYL4cd7.=K^b;DR";Pu3YnE3h$@)Fm_#*ai.oO;_TU*)j9C>&9VMGjF'N["3S@@NaJRioLLoJD^YQOJ)-&piis1o0Cg%)+E*bmH&i3oc=`ar_%XEZ`i&S#6r`XI(*CY"R'6/)h<;[j8D4H?p%rTFCfAPWPb;\kprS1&BnRpIOG)8^8,Cjoo&nO^OFJ(\%XP3%?[o0$gXdO6bhR2JHf+1pZ(9+r4(n$N)]Sb7D\b6WH8Qj$o25/?PIdM8m<L"%TG%QFU2'&1Z@4fB<l82/b_Is//n3Oq6(&kIj)!\9%.uA(;4V(!$ZNE0i^fNF/O*'[UkTmUXAu_o+"]u_\:eF0YHbkF'G(9lD+V]#/1M&\+%Y7rNpeLpe_3K\T)!r/#32[*#=F.EF/Km28%qqV`&,.6ua<G1`Cp+NQ<5#!c2SePuL'S9SJZt,[EMgo2k)Dg'TE]$SBR<dSdY1@2_2_WIQSnDmu+hV!I:C+-VRaHUskIPJ1s4t4<%hRS)nK+Fnn`$]8-KDUUFiDE$[/M4/$O9*ubN,jS(mu^m4DbL2?O'$h;kK-eV08o%H`Y??22rOIih-1Y&Co1rT5sg5).)PQ.#^OEZ%.Xf*m%sT=r$86Sf\eNCS\IJI@"DT[ee:d)?Na'6.gTO2e;lLqP^HhBE->fFYFG0m1!5Ln(WuWk)g*d!YL7LD4iX8DiH[.pHpm1-`%asrs]?U96^UJ>hpaSdj5q_4C*'F?1G?h0D72D*/LKM)n!//T<(0dh%+m`/h*ZkSEj-ep=/H=@2$K!)NcE;V6;!+pZ(*r*\hMm-8h%YmFtCY."a,]mm;Fis,BUgUKC!ZBY&p>n"dM[CTK=r:+Vr+,4]b6qh5M)='OUo1Ob6hOR'\0?f?d(7an[I302!8l/kG``AY\h\l6)%:bPB1eBT\1[/il.%mNXB*GUX36?Abi1[uS&+@K4O41no^$d!!.fd(F;b*?^m;"4+@(GU0W8`>^;[BNm@:B`:jKJRnob!j%;ZN=E,%CaXZSM+dR#D8SI3]i#t#6uBZK$UU@#L>GDm%J$B;?fk.e?[Xt_0DF(4=2*FDOmLDB81!"4F2$#3Boet^L[\uH>8`LdI[3+Yp[U9c%pTE[!S"!;/,l\]n(tZ?kB4g&#9,HaJ\a<EK!5ETs#5hV*X?]alX*-aSoFaglI7ISP#.^hum,=MdDuhUBWS0;Q4Sl)k8+Z<[3S:!S%R%3lQRpuN-4'`d@SObN]i\j--c<4sR3V:;_Cc'R'V(,lA,UoR:kj^<P]Ejd\nI%gA>t6P+=Wk1N28J]Ph,*sMRu0>o[>VXJ^dlsY%R`#+:AtF[lU,POBQA&m?$9XEa3CE?#X?YGXZ&qS?N4$WX[L-lFP@uWNZP!OFe<WLl3N6n>QUDcHNYh$q[P'VLS!GZ)o8Wm\kgP1;%-rS1!?F+]+T\(bE+a0WR)LuZ\gp-<P"YC0CR@_dB\;@'r/HV^s>:NB-gYgA<C5o2)d5GOXRZ.;hE+8LqAZE?>Q>IMJ9Qb=,7cZor%RhKn$&C]nBK/YnZRV=D7-ND`KcH<l_g;Ujt;q(ZC??,`OZ1BBM*PWN<ft%J'=F?Wj[[992BKL%+%:d^\/1Rf=.HZoK$U5,Wk:F'N%mDOImG/2.ajqBR92P0lU"=<6TSQPo,K4hMr13pKOdHES1<m4l\ZI^$ZIH9"Lrmr5B`m:]fRD7Rg\,_nPV'UX,?*X_GkNk\iKUYIb%EP>-WCMqS$>j"9Cc[VhcgJm?Z1nt;oLAM6_2's[\AL9k%%[.J[^#o*,>X),"hn2(u81;g:G6m*$bVkF(0(#h$4$!G,<YXq.PC:Kq%;JlGi#PXfqItI]:;re*SHcjfZ,14!tZF%\#n*I.D76R/fJc?_BVj-Vn'VTU3FbY\&ifcgj:P&jh:a*p:iak8L:aR=CGce!`kn*1O%l6%V=]JRi]Qn/^=fbaJ1Q^@>=9>g_R_7j=C!,(r$Y5PDDIG::4B29`7F=_o!fHb0UZP/.,0:_8n+7cotC\(^\DM$,O^8lGV5X6q\%!R,cl.N[El;X[`M2FpuL>>Ujj9%2"$&6)'YlTk0gf-%6D18h/qDY3@kL67#pjFWDbaO9F<I0C2_@ZM0!GW>Hi[p%r,AA!?Nojt,O%nR]NgNNf&T.q@p`jOu#SI>ci3nk2LLhaN"Y,(Dh.Aq_"oJe3ReWD$c_MW+Wn$6=[d!U[%Y)'ue15tDCE!Ptg9fDq(OQ%]PH==Gpb%>nBT+k]oN[#Y;(>oBE<HIR0BG!6IuQ>:X_'+UQ[Me^rAX8T`=$6O.Hc04/`8(>J1u^2'=sULL^DT(_Elr4a1f)Hd29iS%#dgh>Hm%`US[pGAY:ccF#Ci'eUBs>AYOMNr-RqaPS2#oO/>$-C[Ytg4X[/;sDo#N3k@27[&9f+CiJqb,cq9Q$*XK5\.*Tc8qbq8)"AE11o??%%TBht>*^B"k>U5;!1uL@Y`n*'8C8PIng1&!?^[]\(@*H-@tSSX/V8E:H.Nc=Hr55RH1Y<d)2fHR\Zr!IA8-/5*F0Uk"GbPtptRCT%cGTF$HhaQ1C#6:R>2r)A7&t0dHdJ4l\0RU.^d@+hMSQoPC6@:OD&1Kd'.O$Z'L`.)<?Oqt5SkYm<S3/(H_&Hk^`b([NFl3O_a]lM%:+SHgK**S5OX3r6"^33oJ5/b6'[__2=TUC9RR?N&1^l47S@lteDMPGFMEa(+Krp57m%6lT8ek6P$FN#bA-JV%;b?#s*:)di%%0N(%B.K\9Ut_Mf#s0L7KJ6'0eq5rQ&%f>0,M]dc-W!_pbmM21"nV;3CVfl&:_\:uG2>5<QY[o>mG_NsYI>n.P5*/nO^k3X'%9nP?D^&@%'X<S(TCV\pb#*^LTj/,dqBTQV\Nko[dM]a1//sQMh2tIG&`9%nQ>,M`;[T+,0[)f)]I.W_Oh<R+$9EI_WTB@VLMbkAUZbsd[!D51%f%#8<SH4cJW4@OY:NStDG%\fiH^e2(od^TSa$ICEWiZlJ)1@JUU_&M\.1ggNAT9b-mc[4:Q/P[E2![i%;6b\XYTT#GW"?!/3Godn%f@C+*niauKQ@&N#B^=]j?%05ID<o)?oeWD;Hc<IC$.T3<G)2hu9tc$;_-C97@QFnJ-CK9sD48"VBqf%_?^b^O[(f<.;>0(A'E6;A%^4[YQ]ZnXhJd(kdJZ@hVY1QNH_(kQV0R^]PX$s*ti&*IX2k9Nmd84UeCOY_qi^^-cMO2R?9]p6n*>B[R[Q$jI%p1%04&C*p=k'46%YW%t/F3ur$PU:&:*`XI+7"-o+%D2pV1n:d+2RD>/m"u[)e_en9cJDg@WH!<8$/$Jq8R_Eo7Y.BZ^c\Y+oZjmHWl\.ePU&IqB\Q^T%b+.i4e"RQoeOX$]kEs(5.=LNsCaH;5m&sqjTFi\hcET_QHti!tJk^qXFO6j[D^8OT04dLSRI_ZB%Y#aE\+CT3`+&29:SD)(d*&0H%D\;@8nV[-B&mRJ&ThTC!8NVBYLC$:>"dO?Mm]M:n-tWbWI_%KV'][HH%Y>AK8N45'.fFI'AVrh<D#iT*52S1/j;4\WEP%HN!Wia=%2qtc!Sa(NI-g]/8-FYA'[lpVABUG.\I7t$3T&S3u\$r/uMX<@!5MV>?ilkT1X)"be)qWXCmC4YsJtm-r:&)!!Z7=X2?W\-"\@+0>%T35A;Zi_q_N_PQ$g@^"#XK@S*VYGbainANqF$t]kbF='=4m]3t`L+h]7oY`JJg]fR.)fkHKj)L?EVif,?@RBsbtJL_Ophj6&:c@^%gqZM8]cfIp(/lJK#;:sMM<mZ3-f&#-<t=L(LR*^j;?3dV=iAWVnVs,!.1?phgpT0+VeG3S"'\Kbd%Ggu(p>?"<"tE,`a6u#CEY_/%I.-_h^a_5Y9GM4YkuQR.ONL*IIZ>U<&/4a18<BI]S.2``I6f3j(h\&Ue3eT(JZkMg65>G/JuFR85UR6P@+#OlhiiI,hN/"pMd9`u%54/*\QNsqBZq\:l6qUX*At3"V6cgO:ZLdhtFECK1iNA+U?OtC7'3,Y9qDB_M2kPW7\fCZI/(fm'1sIVeVjTKNQGWBfir'/I@>t%g%@TEanQj*2,9+@4d'1K!3a[g.'=YiueA(D&'f(^Oi"^ecOXDjmeR4C5!)6?KV>]6pH^FU8i3QlYeC9<lkmBM0UZ/61OIoU3Y[es`9%kbgDLnqYc[IR=1Rr7+HW%\eA2YsZ;=en-P?Qj@7i2I!;SWXl7KLCFZu!MG1<jX_*cL78B8k(LpBPV6*Akk7_i@H0eoee[2fT#/%:%$D#:X5[m3ZaZR^-.(%OO12SD[Cf$k[-=*]';uEIGM%2E\Y)14OTgmnI.tr(hU2r$BoM=3E8lcN3#1$i:X'MLq2.>@XZ"$M:9j(%M%g[%?YF#dbKSkjD0M]T3gTnZR4FL'&&&b[2MJN_&$@[G<pf^O/sX^'ZJ`1GO0_qCP:eNW4(q^IM2kMAXt$>i;1!HbKX%7G=nq%](_%Bh!F"WhqFBfu^ZngYCeshFViU@ObZAR1hu\0X>OY44?&?21$UFnAAnmh!%blf[>_Si6ubO&X2^eX`41/T`1I9Vq^\-j=jLPoF*lR%T1I2!(K!K'F&Krd2Bk7naBW",AP/b6`XI@SOuYT]mYX:lOme0!6QWmPe/PgpJm!0XP$u6h]Ookm)u4^<4s#4r@,UK1mgBWD52L,C%D.UEkNh?-R'+V`E^ZAMni(15J\gO%qUDKJJ:m"aE\J?]9ld@fWUE!]]:tMTJs'X8a:EZ9Z8[2u!/2.iMHCMQ95rfJ3lcALm%KXOk%RVK3'6?/t*<1(iWJKY?jM<_D#E_%ld!s0:H>hP,DU3"HfZa_P?6:-9V:LoOUGS.J_JdXfV<+eoAg57I7%JQfpT!fZ]<bAMkmgdf'%p8XB,B$^dp05ZLUHb;U'OG4ZDlr-0i965Y/.<WjP]4Pc%f&g@:c@k(H^^jY_-_n.8-giqTL[O!gA7+%Yn\K[`DWTM`>;l47A6V8S%[4Zg51:_eig@V]<X\H#U]WY!`GHOXqFQ/W\o5VfUR-O\Qq*BKD]JE30Fbaf/ZPVG=T-#%/Ch<Ja&uI,FcfU%a"hHic4HKsf$2o]o%%mYna-bMD3mA(JYPWe51r,"MT3i-j(g([A277dq`Ht%$XN-8d-Z%Ui+$n!m)7BfhE1'8W1"2/Gb6#3l,6/KSfWIb20Y>O\`joGo?%#`R\W"HcIB2sK<lM3*h[W&R"$`E^V@B3)-<H#XP])McLhEKbfZLO'sp]J+&gDd,$e"9V:H+OdF$9@2WPC5I!]6SM[e"h$j9s&>og%K4kU^SstT9"Zu=L$>_6d!F)-68":XT8.OPLo?<a&cZ'JMSYQf]#@!EM#5dR248NdnUJ3p:=?Q%iN"&(.J^[lBHGf$m3<Q"*@EF24%EQO%#dTeOPDHnk@Z=#2[j=Rej`WXQ)RQ6q.U]:.<[stSYh0etCD_!nP\F_6m\)-kCB8k91fsUHH2hh'Eco(c"D;EM:H+[0]G/6%`%%)Mn#KLfjE7?-7`GmTPi".6p*HqIP%N%fWT<)A/:Cl-Qu2*q9C>6?fr/u`R-H_V]F8\<uhR(K"LamTaL5pp]<N/`YRJb%I=?kMA;%%>o2)C9-L*.HO3nYe!e-4c$n(LP-7"nnV\GL#1ZQo1I]%9^P[)H$]>oTliR^_!/Arh:b@fL5nG#L%m4k@;/LQ*SuS?[L2T8\)Z(L%a,-nC]nKo0q_"S?=klp$9sPRn=/MD^lcMUof3Xn\]5_hr.8MTk2]18`:\\qQqg_8Q]cK,>AT-p\Fk0W&V?%^)cbAQ_X1Rh;LtgIR%]%9pUAJ<a`\J5kj2J(Q0S@34f=\E@#Fp7hC+1boiA5FtfP?q6:;jNs'F&s''%(SDs&DguCL[bN2lY9>\h#SrRUad&(15BNm&6Mg9%2Baf-JeZT[ik%NBCCY.OSl!k"U?f$*o1DnXgF.RdjHRd^Oae$]1R_/p9Z7Q$L;9@KdEPnCV4#On&7Yn0DpJ>62T_!GLd^J0R8?B_%]XC$pmXP6EgL`e,V(r#%H(q4Cbf-u8p,c>f)Ad=+Y0EkLR;GfJYK]!ZH,5I>2tkKhkPX4co<6]`I4@+,k9A`r05LUaP*J&M3kb]i%%F&AbL3:dQ0s#$!9G#9i5ncj(R"0%/4B[ES.$nsbh^lPQ-j1Lq3l*aQ*)JP1A+I";q;YBWN.G@#*qTGpcgL'<SuU-FQdTeRi2]qi%hnB(k,Wo7W.b?7O9$faY2mGX?U]Lg<\GA63J)gl@FB<o$g)bkZ%D%PiLZCsZ#X'XY':nPB+-_JSMARa1&b;>32)Zo#5DOV><QQG1%N6(&5,0OCWebe$h:eN"lq0k\Ujf'+o&R.!n=3t,*"i,M$`W1gDboH5#QOI>EI2>S/iP*)UNgR[6%-.%1<nc'\g,WLfBSpeWp)lGX%O+V#.Xmb,J_R7"*IAp?RfH[b;:j.AdSRPcd#=0=5$P9s:WY\$W!"jbFh^70'GUND^cbiMgBFBX;anup:Wb&#`:kF>BXHW4IeB"Ji%$F<t`1Lq<E[k'GDd[\2X+[`/uLODoJPJSdaa^0f3d7(In2?!!_R7*a.$a&\l$^=cO3eR"J[[,!l8[^)UCiuSa-lhoeDt&7VVi`%>%Qm"ae@[C"n-8KNlM5O,.n?`\XMWI_Mf*JYB++sHQRk27=(-l-ZdsYiFTiJUKb&u1`P7DPW@G693>X.bCP8:$eC>8EFYEAeLoRGqF%HDprC]:JpQIc#4f65C\lksdb,=f6S:baMC9CMK/N5kLs7(;8M2$jL(SI[dlsf?+<pECu%%#Q.l.a[M08r=k!mEW5_!9d1EQ_d[%M%^jV1rqDPqiKEYZ)#$\eFAdon\q*3r0i*tZffKa.A.-((ZWi?XP"n_#O4`7]o_pmWT'na5WFeo3X>+s2IM6@Pf88'6*akYGl$JW#%%@7RZe*e]]fbnf3(.#HSS=-a<Gm>9&$V9<:>aqM`-H\4@;W96r:p$a3`<Lb4g,>JI@s1f+ic3e78=Kqt+Y#qn2*b3G1m*8%8E:)9]%HXM2,ZO$<os(W5IDO^Zm\'4u+"#Td@N[K.LLL^n&_h$XB"Uc[2=i;52O*Xm+RneksKE+TDNfn/oaXf2b3\tIPX-IA<_Bn#>.7_es%`]"'>M6"`I._.t@Wo=Jl2T8NLD$cTaC_Ofe_BdN/j/bQU!g+JMMikDH#LdW\Gk]?)-2[hT;O^R%<Qh1+jeBub0(u:/lUiui_]h@[%8Q>a9ilpC]+tA*_WARV3V*Y/e*hR'Hm&,'1;G\*OEHZYPe[*B?!(Md?V,JM/%/EE]Rf\#h&[1mZ:X"?ICPG(jhjQ"0o!)X434*J`%5YYn9+NT?kR=pXphi6V?2pP(@inoaeD]@jO+]ZYn>D$96dXj1UL].YOQI5p[XaAH1Et-L4jAZhl'F:ZYom$Odk&;VIq'CinA'Lbh%p+^\UUt(A+^/*b,$0#9"a=4l5l?"FrADX&U2?8"1#[W-.!'<F]E6`JCpnh/H'[-l[Ol1L1eKI2V/(ZX'g;MOT#4]ffF5/jL^o>j;%493+WllO$*0[_;]`"TYj]PrMP4"3^._"_PkKX=KP6dcWK%5N<elQf%J;cFJ74,aWSqYOCncTqoXSo*N_!IOcN1;^<K@Uad'b_D)5%Zd$F06Fu3&4I50D$DIF*r>)G*Cd6_^_tmqR>TqWWYAH?\2sh*e>a]hur+f5lj0prB1b>_&5>Sn'!9_Ah"ha&iAmjNdG=-VQ)-e:o%8.k<mXn;rR4Xhhn5jj-MXYl07Yk3:!:O[(]la"%",^\HBIXM7WX@iZK+ZkKO=/E1d^"Y$4cmg0[W;?o&ppm)grd`c8XbhY`0H'gi%bbDr=(#ULe#:+":25ts=7jCJWj3$Hc,)7_D:a`\qX?t%QI<-c4]ieuJ_e4a6+IX[1BQC!D@F#hU:JK]+)nh/cH[$O!PQoCs\N7`a%g2DWpRMmk>6!+_Vl3Ij;ps:p-Q>TKY%Wg(U7ts7lc]S+8e`D@!=046XZh=C]fqe+J_\qiAds/;91r3,!dOsRi>Uhe*RG"c.<p%tV%Q\F,#hccK+Y<S=b=:]]M*8<he5Kh)Nr8LE-]S\OsO1hf"7VGV)e'=t'IX7f=qlhj(Db0h`cl)qV77Dn_O^DIm(NBJS=:@1%oj=78%(;V:8!2HJtK!,:J4@D"l_gfl[A=DBdb1Ln&j?fH`P9Ya:(I(ESJ.;\^UlSKm,hJ*d5Ws[jRe66ip=9<u:p^m$:'EtS]fJ2DD)_dq%ar^4RTVbCg*KY-:!tt0ji8X,KW'f[-pYI#`kiS<'Vt([^`F74rSHX8KNgq2b7[n#bp=;tt98!,T/VHdlnJ8UH1\5)mQY+=l)6TR+%Y<S=b8Kt.cc]e=]he24FDYMH0\ing]3qYG?/bLa/.f%]RgpTCtO&pAs0Y$65njG08%=sb%K7\SEbV(HW8Tnq(=h<p'!e#lT)A+W?%UX^6hLo<Ye!$$>*89F6BBtfLO<]p%C3>06GnJ%8<XEbID"iaE03,3PSDD?"I8mbJZfH;[0@lPhCKL.n/SOhIK4K\Q;\f7`7*kW.l%e]AW:Q=rp&dnLhmLuH]^*rg=9DSMV$!]AE6=NWG+k)+6go>Zcj1FL#ee[aE;O4Io]Hg8AkhsIn_b@^79h;UVNB/X\X6V2\Z-6`a2%n&10c!Z^AZcs=c`6K`:<D&7d/&7V.8cnZWpK<d7$SBlP6T.C*Le-n?.)D[LfDu<d:JlATiZ1)L>+s')(["+Ph?R--MKUb<^^,i2H%We*9"L%J+@@>bC*AW'.$i6Y+;6,VhC>YtDj*gHtS,pe+g"tDUEf3[#)*,?9dT5mIJ`59`M=bbi[%KoAs*Sf9EMa5/+/VnEJ;2\^7%T:uSh>+<f,2/Ds5l#aSI3_c<eA;$jec.Vrblo48kC47'sV,-fWe<71lbAI.+cPaZ%PJ,fuaQY8o"ZNTP"`LVS(tA/D9]PH"7H:$l%Iu/FjV(ri]jQ?GS\)DRq!T_3(r9*44bSECUru#a=@k@6_:W5*D,5_%eVDXEukY<J;!Z*E9ncQ@jmJc!@,8$0'lS^bG]<.EK0_lpr%=:H=X*&5_!R8W>09TIr>_R\g%@u?1-eBO0aFF%J13'Sro2TuX$G$*87:M&g[(7,1]hN*SLS#Z2adM!TKe<VdH;&:X1aKUnb6p+Oc%FojbhTJu)B>"d)>mH(dn-N`pL0<]ABrHchD59R&<`pJ_/"CZ_k5khTD[=js\o+X0B=IQ[hn8suiNq$V`1Y:4EI<b+rQKG:+Bh9(5%:Uk70J'N/G\n4'"#/=P05j-`-Li%:NKXbmDLu;*918>X^rG)gugFb4WUQ9kX3ScktR_mfG,4eoZ3q:6pHBZ,<1\g"jaJTPUVTSJn%Catp)"G/B=+ib)1;qiZ<g>4KdkM>[VWgc$b/oEW&nJb`k\6:R9OHM,MA9D)H.,ptE@mMMkF@-4_&/;_(O)0hIeI!<V+-f[M<i1SB%e/.]jG\,dh+_imHX`'_AXRtA4Mt]KB+EC9*F5*],BH"07;>,NN.]ra[:JW0QpYng&PkisA@RpRi8>=F!)?o]oRP!-3GC8iW2\g\p%6(N%RE`I)"iu"_'4(hE:VZ8#KD;NW106^;DZ>>uj2"OZ?(5Z91]'sg_\*]Xd74YgtmSbnX$bks1m5D&@rUI<RW,m-teMU"hhXgtU%YT)2q!>s:S4h-=/MFH1m/D:4OH\#0:Ti5#p`pK>c^Q;+A+n_k@8HkCLadqm>9`AW0?BjeiI;T%a%)A>"fJZ+K%c!a`UmEtO$BeTH%G<R0(LfXT/=aW?HF=hMEF02GO04DQ)#_fD;(qb\tjP,J\8I+7t:2_@kd!!:`Bn*D<@::m@BQ(&C>CF!Bicb2tbm!5Yfr)n269`=&%0hPU`oaOnU_9-WFe@Pps:C6pl!a>m&Hal9XjTp5Y,`,>qY"@G.p;<s=Y&pRo/*a5;3,'m8b-')s,_Xnk!Y>h(AMhd#k,CXZR'gWU%o'3Y$oLM2@Pg8S#$)i2inV9`+-?Q,8g/HTiX*)laC8`p2L/8Vq=-2i.XFTO1292'4leVbg4dh[#W>#b]8q)UF3p,T7SF\:N%e;ul%[?0)UNaR+==EDd.g?2cmY=t+Kp\'o>Fg:WP7S-["k,3Ca='$p\%sQ:,]ObNj]"D`c`P.-J<\02>@*Q^,hC_sa\VYXS2>'.;6i6>R%[Ct&?0&UB%iD!,N8;gR&#O.NNg]p6=+.&OLjurrR(hA!oOT2V%o^Z"[[M0=9r=,nf1$2-M/OIkt]#TR-B#BWa>cpLU6L*$C63/\4%Cu@RFN[n\XV2<[L<:Q7a6,WYQPcf3oV16.I#f)i+g$dD,#\CA[!eHY.<$bYsJBAH*JCgEtSOud:drs=kMJj_!npEf9cH;"aJuFaQ%9,0Q*8&T1qJKUATK0]6Q`,'-VeYl[)&>S&S@UMdH%<=Li5Q?iT>rjgU?H^o?c4%4oA-c#0XI6pP8o_O!n>pEfnFahZ6%&X9AeP-n%hKu5)r4D_&eN%OiPpV&j>ne*BOSCV\IE?I^((T4l1PZ']F`gqUR5?B':>2`F\e7FLOLGup>quf#bN>RuQ.+:%mE6[5GM[P"l!9pK%EYEV)`f%Gq[j@$$>"9DhkRt9nMCF%ln/^iopG,<-><J$3U^X:NDMYF"%'+lg91Z\Q*SI:QV#4mSTH@7*$E8,<P/1:qlGe#ka)RH=%#joD`-S2!,1,Xj4>ES%jq[2cKFrjKXZYaIBVrRU!Cr,D;$A]g3=/J)i%aaMp)$JL023X[g\n2Z2D_@F]$3Y.!6,UU'C&Cn6nYPC<%moKA<N-2gnEY"\+R5KcHYpeOZfenqH:g3:jECIehLF`COk0>Q[cb5ce2fFVd;24c!@rq=+#=!G,Mb*Bnj52s.(u!^bPj*<rWnuXA%mS?Z?q+ZP&6V?kFJd`4P"G]XFfhJV5f*'jl/NM/8J%hR;C24-aRIP,&od3IY]K7*g*"9:B^'0sim;mk[5M-SSY4oqQG)(JOV'&Ne%%Q'Tl9gq<ZfKS0H-MM6KAY`7Ae*]AGb+qp<PU(O[F0:[l-_6mhDmtR1*4D?>XuN`_FFW(gHR8Q!?Xp8WkSP;5+bc[<FULjT0+Su.%W_?*+4e6"78N3Y4jDYM9_WKT-<JAmk^Fk>,,'b6,+YF-ZLZ_/e]d0'\MbIC+aBSY_Mp^eJ<ZV[g4S3$,4$0e>h<DR7f\Z-fTLX?:%\2n\TB(l2gTCYj8A]Y#+9@dp0p@KX]YT&qqJBZ`9-1I(5[btHk/(WY5nb]HIAL?Z_ZM&0>?V(4`3cimm>O]fg[dLe1>o\IY6e\C$%qMDkRE5"Dk>%1h&"^J:T2*`<`MYO[g*7[-m0i)lR6qKgAb:Zd2gpF].&Tm84]-tOK*["#kr$J+"CfZPHN@Y:brGS,6_+?4h3fc?F%l8KOHS'AuKA[Kh+]UIAi>G3'r`%*j.QM_P?[:`3W)a(5;piKB2S@rj)$?P5&m27,W$JUng@t4Q7T;)F@&!=S$W+WM56\cPT>tR#g%d.0l/ai(HtK4.8d%;*`m^p$JfmBfCTHd1ht"o/?n]f+<0STMG9)e/dJ-#F_KOi$1s4=2oC%YRCd*Eklm/VoKjaa5?O-6DA"G='@N%G[[G\XFomb((f5[]Q\G=%Pm1KBit]).J[*Fs4I3ijg^IagE1lrH3Yo6;&8aGJf(:as2($L:d(WrZhsHgs-?.b,SI%d,gbAW?QCrT%@7TG)]lSs!KFc8X!kABeRCI2KYH1]M$2/g%TF;:F_^2A[f5dj(?%*9WAG`tLTgBAHjf6@mc"2/eN%-q#)R]$TYeN2FI[\BR\e<&3%!F5D9M`=odIm8k/_T+fM4Vk;0'CAYD[?.Kg/u8NqC12@2]l<B,MNO@Hm[@8hrVNXM$THZHQgV!r1e'CTN\9-n4Zr>uqU(ed>sT9D%m9aM?rGClA^>nrgdZ*SV)L?p2hMrOiH8R76T,Kks%WaE8*#2Zb*=%6C4%D$jR@Uc.$D+r;ACREGb*RZYj-8(mT1)$ITk3iHFC^J/%.Ice\l@sDI@JW:h%u5$S2D[^0OcE'Les-oVQjQ(?oI`O7ZA%+'=-?:E+k-@FP9e`;LJ,D?[-bIbN`fi7.?'XcVHN0]<r.3LV=\/F%Yp#,#_&N0'GHBcJ\'4!?qjt?Ao1`Ti,sQ;Y>OVI,Q[*H8c2O[[_Q3W6WR]<i"(FdE.6dgMPu:k!+Z#!O.Df!c@G%+@fIIGY&iaQj%7E8q^2.!_I6H[q@U2_e4-f89I!E^)!+8-]W7j`Zk&@\6se?07'Lonm)m9CU%MS=_Cd>jqNO/($[rR^!Rgte\W&p5$Po!'3ehVj</%0"!(*$5+#O%ZLGW9RLYAMfqTtNHlXLe@p4>*1]5j9X-V607M.d/3ZZIT3]S('++*[Q#t"c`n$ENXtuu$;HCd7)3WX?UcR@`*V+75%'4dNnW7X1h92t:p.!m$8%fK\E20lh-KCt*7n<2(XBCURMZ(Xi$]DCN@)H/R0L^"r/6q*;`Upeg$,_se(-U.te4<ouOUjbCC#ZK:D%gH5srDE'mRb\#?D3Yf(d0Mg'%".ZiGK'*F6KVnD+h7IX+#I<W87Ef+J97kO(Mr.V_M$lfFitmF8@Xhme=-t(1*gLHcm/cm;R)WXA%/Zh.Oe22`tQU<K>^c1n%J,'1jpIgE047qqrd)EU)JVuIRK!b;2(B`9,0*g-6Fr(;5DD);Zp"lG$d`l@>V7R,qV)n>,i_V)hddm2&%_mkeTIZopF^KQLE-%5W%k&H]g^C@LGZQ:Y=@@STT8Oa>OEu)Z<LULb)i%,VW:@pPT27B>Y6j>n9XG@Y9?mt9$q\^hp&N((iQ"@>b%&Fcr8c<j?7F,i8=L6Qu1M$i.3m<lsj43Ff0Si<s`BRqKV!d`CPU@Wlk6.mWm@mdh<qN]J(;&a9XNu6/+D(e<B(<-09K^Z;0n3c_Y%mND$Uh_o2`'["GH3rQR!/mtb.Z_=;ASh4OZN_)G/McY2^P;Vg;R3QRbmR.!io4TS4DruL5<r78mSC<'m5b3rXH/;enBH9I0;nZ'D%H]tQf@ro67\p#N,8&j\Ul^=rFoMa5V`l*B%:--Z;$8:eB@?t!$(Np^Ep<M\\::(RhqF<g54fd/%A$o6478Ena?UtAZ$VL68JNpSG%87P;EH3@8(QGhL!$E-$6pridQc;'I[gI%28GU*Ig2i#`OiDb!Db>qeidUt6(OW7I_76Ntbr!ijfli3-Gc*"pS:drZK!uqO6;XW[7%U.Jme9cqe':=EoF6*+T-RhA%-7-tYedB<.S^53UOjNn?lU(*5NKuUnpq@J9d>#pD>36)HIh1gfj8OqTe6GH0Xlr[a!k<q&jgB5nU%)mXN;cPYE'QZ)H0C?Kt)c&D'bo^X#HVOGbFGI"c&Hb-b4J&:m2=&&KTqrWD$^)>f;$mi*pS.>!+3G*f?W`1Ele3@_GoZCS`$I(%]%[BgAY#YYd<Oif\rk<SSTcQN9:B*AkTS,Zn\K%HJ+$g6'p!e`Y3@g8mYhc&]IaL>ZnGuG;BC8\P+9KV>q)q(;eQ_,98Vp?[3<q*$6%c_FCO)1Q\r,^0^q/.p'K7g76Y<,3YqD$9cn[Na9\DASXkMJQ1L;R=)s!B2DqrB(!We$,)HMgZh:MuIB"5n4Sl:i]0Q=t.knEHWKh%(bp[Q9n]"VQdb99V\@On&i/Gsn<m,WljeI][F;Q"*"K_gam%ValFD>Q1t.4:qbs^^dal!H":[]sa'e?phN)<-4>#oi4l=SQT5;d,%_J=t^4.XqbUhT[IAbpdK;t5=*k,"n,f6>PA\Tlk4=.3aI??Po,>-+ZC2f2SC^n0*AT\["[AP@8!pYsu#QS!*]?Y*+f=n%3=A*0Mu%=hUWVqcY0iI<rHZFN/ZQUMPV:*$p#;*ePlGNM9@q%'A%i*4CdGj:6-UL2XJX*)!,XlLVH>I-H9[1n1pG'`QhY`1W9Baq]fhL"'KR%2R2@/IZp9Gi3?8bNT^V_+PlpgL3Lk89&_*HLMB<>6hN\_VKAg*7?17SZW``+,sfL6UVM9=7AmJCkoa0c9P.*r=)C%;WrC8./l8>r%1'%`Bju+L2f@Y]igD1##k_,j-1,]:F_$/NR'D'u%QN="EpSjaI`>4&F#@7XB@FId3F$^+\8%1g%]psfeopT<Ykh5.)6X*"i0#aJ$%k]$P4d"EOiIe^:+5_6c21\tS?%m&tLMlF<]mD*nhd+VuSma#m3R_n:QhAk3,md$Wm+o.&)&]DS\f$[&0AetkVS)gHgl74fQ<]g2]%frij)QJq*cg,**sSi2T&][lVbk'O&3lko5\Uao.6<$f'!N-2S")tM$N#ACi!X&M;j(IJ6\p:1^A4AU_N<?VNMTtqiUKjk6.Xcd!'%[/\`W(.EgE4chHOdH%KoR"]D"B[J-&eV(ML6@;IB0*[_B7ZWMq+ee6n!Nq?Ldc6(g6*o7i_SFtA:KT"E>J+FS)LJ:h>EYTjjs.@^%]YGs/i7#_Sl"Po'j'WCJBd^i@#`o8%N=\ke[o+!pXu&)-j@';<QQV8-A=r6fk'),bKu?``EX"IUB3/2X\?e>Qjd2kJ7B^I0jj,i:%h_\qc3pB;89,Ra,>saE-fn4g/#mamOhm(d5<$NrB*fKk.s.e<a,cTO*-fMk#pTV;*E-0u*W>"SbaR.h"A@"jUZB]]BT#YpN2QM+n%r'@SDNY0aL.k-j/&""0aUTn,%dD`^5Ul.0KBE]qk<lDE#G/VASQF%.@^U'b8"EU%qGm*a+.dEo*gZ_qeDq9L(-@'0t+%XV'p7;3$%Tm(Q>"YPkVjO=%AiUmSs]dE@W%I+ghXZa`a[jqiMD8@bm7E_l/"P@DbYf?h\R5%"5D1Nn4CPLU.k4P`_oSbRBeoLW6.R_@cBasb,%8Kq<*o0ta$S,f]i$<+"9!UrY)mqH9_m@aRNT`)p6%),DPKmMd@%8i#d@Uf?('$meu.Om?0`hdHb,?gkX?(ebC+='t]n[L=VqgICi%^nJik_;3JRfar0gcjNSF%a(cKhgTg\H:>fd1.m^8^[oDaXNF%\Z>[0G!<u32\\MaDm-c[Yp(V,R\&C@#0\=KjdNC7c+1\ddYSOde%S+a/%Em%om2.OgA\9?VAZp/K_N=L\;bL+ME`cb*<HoKd*a)C&+m>X5+'7,XjcOR?Y^QY:9b6oc0W*S+(`&Ts6;";Ji^eedg-E!dd%?"gr(EpRM]I>P*YD(4KTGTM]"J``04UgjWu%V7lnTJ;IGa@g/5#X*EkKsELQ$1(&B[%<+j"GmWo4kP<qd;>AU0e)<+6u4'Q*4G'`%<ugEn8V;ag3#m6AV[`Tq1lIFaVmd%&Z>=p04K]59$NqVmN\a<YcJ:--mWp/.ib2E#Ok&R7Q$%CR8db/g?[$bK4<Q>Yk`""k1duON%U<u/t06;[h#Im9UB./J5JI2b56)<.'D"AO]g@HZYaj':\?fsJ$lHgDR$E9JlR?*]OA<FNcVnf-&A8`"3f)ngS$]p775Nl8CdsI"j%Wri"78P2%6h]+OmmE<uY/"NLS>0b[';`-=bpI22:=AfVlGfW`ql2i2EHa7-hkj+'^&C>Mei2DA[>)E#CK;me?)OGJM/^>\U6^_Q]%U6cW6:,X*:JkQY0-nW%_5]j$P29H^0YV-IY;"_<^D`p5UDt.hkr%O_go^1X1S"&G@Y9=#*m_638N#:DX8?3\HCFQC:Y-#[=<jp97%UghmBJi`O_Cb7)A]Xt+an`I.*1i4irFi%uI/QpZmif^]U[Cf6?MiB%Vi@_s"gZf67+@BuC>&`(g<NT&SnL^HL(WQ1ZnWXZmmn"]M%qTD_KSln5chW6d]qeQ2'qk5L-Q<5Hf3laQJW9oeP_mMsj9AoNt[1m=&'u1p8^I=tW'G5=*#GA.9*uXM7r%E73ePmq87[i2HWq*96%Yt&Q37B!hmSnMFe=nJCSD9_ChR/^tXEr_S!Utg_KFTd[g':]JDTBkJ^RV,tSke+WY3glW@bh:c*-0,_-1MV\t[8dP/j"I)&eUi;P%:phXR0[Uk'ctoN&TVskq$(16HjoWt3%m:-=YjPm1G"F""f`/VJ!HJ/P*3#c/mkfb_K$BmG&"22pQ_sSO`]cbKcQT04qm6<@P8Y/C%+BJ3\Fs1)Nk&oAa;ne6hqQ()hLoOAe9K;,)5H5QC_*f)!@`q;BkL_Z@"n(2&<8DiK</&QQ1fcmV2U-A%WG`[@3nUo8p>X#_&OG5d%\DEnLMs5]c_%h9E>6?n#Wo_agQ2BA"Q5SJO/Nc@]#=Jhe)mpphjb'+QfUD>S&qZ-"3d(g1SLJ'*;StDVYB7QWQU6WE%5<#K.L=I"%P,h&a4Kp/hROi;Ia:Lm%_(8VMClRSV2*`-(WmloR2lHGOX0">FCu<Lr%FjSt`$-de]8;lD@0&-5S/)+:,M5FeHB`?9N6oFQcCH!0%m[$Ld'Rr#-Ig-B"CmA/,dsRo1OXPb;7E6jfQp_rI3D+`BYImaZJFr=`ZG5p9.\`1RY4#bp[0N9!<*;_%6oClphEk2Sg!@(""W+61%I*&'NWD)foluCL(-q(RQNM.4&CSQl&CLKi%!ubS__OK_Dg:lg4qdP`grJ+-JrM]\'cKQVW?,M"9Wf)(\P`,:[e?7Ra<(X0/ROZp,%)_2_CRk#:n)XPFWs3DZFf:)(k8'\M4%M;V+,"K)'^F)>>b_K'b7%:5bI*Fs(E&tclF"3!F%[NI!eEZ](rEkQgLsY+JOl?@Pn$K#<%<l%'<ii!,#kQk%n=fXP0US$:p3E7T8%=qqsQ.rbS<+JAFPqomcDUOKRK3'r>$5UlTd*>*O!I2#AD87_!Mj^,WqrgZD:^:5tUd5n\%(^4\ng+/*Qc%Z3"g$]-9RukHg=ELOWfi<r:L_<Iu9WIqc]S)K]r_RGJ'ZJD0<3@3FT7`9*FOu&_7:3`TG:>GXH>qshc:S@m%U4b)%Nb;<W4A[Z)dM!ilbhP$+>u;Xpos?2m_*q'qj;:g<rKt5*YM$9Sf3!/6'nK2qOS#M)SZW\7k1JE%;m`Z65jmUUiV!YB9B-$a/p#ts%'8;tE?&[TJ?SCbX!B"\gMXd0Q-II*g[Ahe\IL,)P$Vj^V[kRXa:ZcAPnGlXTD4Cj(7Qs]h?)(T8?.$8lpC"[=BDLg+g9l@Z&iZq"%fC%Am6FQ?bJ9CD5)Gh`#G87%h\[r>nn`EG?mIdKeE&qBF>7V^X(K\Pq[s[-i]QM<@po7e5q0tZ6EP*CG"J8H+SKt.&Ak-Cac*N+6%Dm0bn%7LRj.=^s'3s6O8%M%GD_]^"t64gJEqlJu@d=sPDP(b4%.hGoEdZHs`ecl9GXDPq1_pe9a)GH^Jfs267l3.-WMgXFMWL,F5%Ljj'5NR9l<0p,Neb>nN:BDnGIIO!S7'f0)6ft=^1*a4Itr@pOYH!F)i!318a,d3Y<o@oek(LOhFl+L.OB6s=6/)Js-rVA*I9u&ap%@VZToS:W8IogsnOV>f:X7BmT][m'W-1/DF-\$qN(#R_lfg9*dQ?Kj]qGTs[cAQ5at1c`VdRG^'faPQ#dAqOWU\Is(P6a*9MC(m'@%kV&%3Wi#JYLX]o]'W2Jrr!9U"X#VJYEfqo*_VcDrj$[+-!#4QPAY2D&WZbb=&!qa`^])EbO\;l\H10Q*]peQ$?M/'0fR)9fJ'>\,%fei]O2iWu\9]A8K(]c3VEP:+hTOso%@a+q6j(WCFL%GeXgnM9KhQUNX_^U=e-dZjh$]scVIqr-^9gHLE]AJh0![se6PpDq\/F@C4%='6]@XTPoc-=1m[!Z)dZ)k)@D2qS]9C#4S#W[C^mR_h2p7Z`jl!s(%Npjp.iFk9mO3K:tf,5suG<hU-prMV-oM@4S?(SAG?Scrr+%\0Ncj%tA4i3eLR!'hU\D?K8o^jFhKUXThlgd4i:!,7AiVTD]pf1#auM^=2)TnH:l)<?%&[*l;hcXY8ja_,0l<>S5cZSE#fLbdoF]%SG*bJmEPQTIt']WV^?s6kPrQT^Oi9s,gBPdOnlSSF+LssF5oea3m335W8_9AWp8nU2-cN3SC+88/=D*5Xm/!,j[e\IFV-t<CNe^-%1K9nk#Gf)p.P:_f[!J'7[m37hOLBmO"BLGXP\2FfRtL0T\k`&dL%jMqO\Rc1"MsA0X\O0`fmN[<2Fjbm=;,(L4:^*!(a<Q3WZ+oE%/Fkl)H_n?+5VersFHI9i*BTA@!u"L]KSQ9?&iPB-cDSO$S84r#P@,[AO+PYHih(:j&i6N*PU%*5m2kR[GgusmYSWo3FYbiX%O8(i%<$@Yl=`VSb$P$33Yg_'98o8uUm9)9+6Gmk&Pfo[4._"H"o$_W*`qed_-4#2'nA'l6!?;AJd)2jGS),YqoUG6IGq:!Y&aKOAN'c@\%Rro/pB@Tr8kffI>N0A+8*_EG#ULio1;G/^r1E0Nko])*;Y(C/kNQAguoani?8=7Cq6s/=.7GUST2PnhD5*QuNjapX"'miSC([irE%`NuqZCifsN/KC<O]1YX!iSNSAV7Xo@WRor0Ubqi6&lOqMmNRg:ln5&kk'C&4rS>Hbn_$uOY&D9@28%(2&h/Wdnrl61GKZ0Ib.lfH%B5>Ba"tbti\&A#Q0tJr)kE3rLDMl2hWqeV>fVH,>6&:f?;C5'8@o>s=82p41$-+(#FVWmUIiKQ]N6*'cKCFL\g^3CK:(eJj[ZIKt%JGOZdBX(*01cT3#TTAm(2<f0&At$=u2'k&sk7V!d]aM0ed3MU.MOu6r_$`[]8Y0\C.:<4ToK2To>pZ@D#k,hfFD":S4m(&s7%;6A%R6"FN"pc0c"KU?n>=1;s@cXjsk:IM:OeBH:>=[r+@Bk?7b1Qor#Gt>G/E3G/l_,Nqa&UZF*"+%DC5OMrM*F<OFW:Nm;K[-G3P<Fj%KT5oel+.E+ooV;38T$jdA\7+A+oE9S+eNL(4+_WDe:saB+i_Nl^+c&Vq[;G1<`:_f%^FAOD!)eM8\^>Y2_ttArFXkOk3X)<7Ue=!%6,-4Np!Uo=]PHYfIs]Mg"nUM+F[7?uNI>r0m$Kl$DB$5@hDKRa]P7"F^Y`Gm$\*PXiP/o&^VT\`2#Sq&LOHh7FP>$M/RM&>g;JC4%gu5fnl)enJM4c"l?'Gjt]qJnk!tjpV9@qG$(inkV=REcQCJ=?Bm9_\n-/:<MBW,#"$&+*dhSiJ,T-c7b86;_#NJ[i$JAA)B]6b;7%c?rP%K=S,0U'BZDN-Ru$'O57QQpC*)5q]@/F/a:1P/6,U9M,Oa]>4(Ik[hoj'Hh\\CR8q%7)<"*J^-,WX$N0G?MNLO44uM\EZJ8-%pLaY&6IVBjB'YQ.gFr$cs1[R@b"oIb<UO<(-knLg14R@U[#`/F>aT%@h4J;-jlSt3,AhY)^OEq+ZG1kGRr3AT>r1FU)5jX.oT*of%7s">T<[eC)YCS7rB@hpaID0e#E@fe=eJ1,D,_)pQ@nNfDo/J-DRS?)24YK,\[9)@T_0NW=+A)Nr'`MdbCb^2l?7&Z>=FHo')#u]3%(/1BfF0U6p;B4g;KlZ*=/IcSW>J1^D3fuc0C?%;YJ;E>9pnYo8odNnMFT&A9L.clb,2/[9]c&V57J5O2W,>ZL%i3enf]@fj*\=To%=[V7)aQ1R0(":duD;11Q$Y/Jl3A.te__1d6Qc'&6&:/U3WBQ$aSe-.O#iGXI\@4IVVe)=33:G)s+Ngl0M)`.%nZ/7d2t]e^lqY9X%?CTCsSE-7B-ulY/!lEi%AH\p%oc4J"j/)HW076FKLD8;i4)H+Fp;p5rWP9P'm\nhsU#>BJZ-l,1QNoP$U-tmdLtS2,XZ7gUb"IR,%(F>r-m,(ePZ;'SZ9<>qGOsEMI&GoqPlnl1*<+fJNIOg'jd`?HLk`3IJg#p:aQ:+ltJ+HD18?mGfZ37+:.,fIj69p&pW'npt66:]'%-]8H.OPj^"6,g@2ma3G;*FR*JX=bB$@\:P85j9%[/kHj]]8!a6kWEKa/9';OfJ3pn<$Ir(XMN[YgF^j?$^5Pf[UA>_!eX5@134:.%oj1bPAkT:Z.eup?f9`A.[)St_*4fa+bX76V4TkM:L%TXa6q>8"OW9C?/MgNCnFqZX9$.*fZ$a2CChN=.Hh?V<X"fX\Y(iB8IQu%#%\G??V_[bHdX"uS8XQ-F-;d<n:j3grM\"W$T&%*"F:n&_A@WmW_'Ugtg:"7W(FAs8SCgu>nig=J?bMMVM7?=mgA8P$uGsET,?HPf1%$aCU62o*qu7@GBS5=Za>4qq^h,[;<5k$0$:H]"dncoKT"$]t@C3O!C8&IR</V\Tn$ZkBB!&t8e*ljl?&W-WRtG*nI@W0HMBlW?_B%o!m&Y!3/mh+cjRB<"dWNXO)AM?!:hpd3=2QMD0e3%N(gFBAl"_ka5bKM=deGY)iLt2Di!\*@c4"g4t4<Rhd3\p83hjceYuAopP7$%M;Il)QL^Voo[UD@cR/U7Ie5(#EO36oOfXHDS%,gNEGqF@B$j'$QEuo7!o6`fb4X1_>q)fS7&8O<!AGkhF/FcO7%#O`JFf69qoZj`%#B`DkerQ=XJ<uJW;frdRIHN"@>?K+;Pa@gOLM!<,H?t2Ne*'CmP43O]Np\T9;1q7,V<97G$K2Le6rD:R7T6nn`_$n!)4c<ZHB;91%_\igNJq!3*@r8Y-hqWc*i7[,;i\_D"9>9*:UW'$/4S-!LKDgbUgTsVuF0Z'15EEkU4I80^`Q+`"<gP3b]7[>7\B8Bk/ZR:IoUC]q%$W`qZ9fl07DV#M%=`_b%(=C?t2<_#`mG[&/4R^&"bpr'Arn]8F[#2WUGSQpbWD?c+9jjJ+h`g;ERgCe*XeVeqDIX"W0TI4f(ni2Z%8b9&JP;#f_"T'0:5?-L?Q^:3KqXq4hcnqe<n;rqB%Lg"!e9ES7dZT.^OIITP*,!k)-,g>;QK&[K'GZ$We0[KLn=d3O1O)(",!?#g%#Di[_>q]UK14&BNM:o?=NDjI_7YW17Se<q_a%6b2J.X#<(Y(qf9\pL&Zgq^iar8p^Ui7CkC3EAL\$-=ZJS3D0M6Q5s7BkmC:0K1^%0Z.#(3e6Z[MNO-?<*Oi4$d1\fl_9C.e8(TQ>69=f/m<]B:UV:/AhU/1YmHa-Y0gO\PEjDFZ4u\fS$o&,2m#M5A_15k$/Dp*gtc8*%iPsJPc#KN9[@E;E7'h+.-9M@kdoU_]7$d1\n(tJj^KV5bcU^E<2?@OZj2rUq;9C@i5he(rX,:)'W:m_,3D-SGQm,`/@[W"cV-M@5%s")J3KqKH!.7Aod=S6/1]rM_V<d,g0bjr(J"lb^OnoU%`3j)oYWneOo&$,Zq@j4XAkqPK?hW3.fAY^i7;Zon(1]+"godBm,=oorn%cCaBRKG_NE+I5ZOcu2WnnN#f1:#!s0M*qS^B/o*(cC6cdEs`mTg41&BdpVXAS.EFJ70iL=_!c5m5S6kI!E`Rhb6^:edD.,:Cd$[2%a$+=mcMDC:"`FaVIQs!bq3"lpGgilt>L\sQIJnVIEG5O31bW.HCLCMahdBpV.J2LUZEN/h1p^*gg2EA4a)_rmn>;i8kBrO-A@DLC%3'g=,Ap3`6V,:?9.RMQ,W'Y&lYX]eRW_^'U_d?cgKNR.\g,Y*u1uok>MKFpj"jj!6\4ac*p`p3Q&HIs]L\Wo9<O#!PR:6/g0]0-7%eXuqkg`02Q*/h%d4C"O[]WMYm:c+3MeNPO/r=c-0W:=D^'-P(e:J%6-"8<E(M4.Ic)JeJVSKO:Tg=ahlJT)o2fpa<dmVR:50H3RV%r2bPgcQ<,]>mZMc!h:%gq:Y_:35,kj=.G/'/s[(1^!3^gSW)hUGmO)b6pK8l0:O(laU.nube`$".m9QE<o8=?k,crGP,&6RfQ)K>%BMG`>QD*8CgCO?pcT9"8\7m$W95e"T@U7Zm&Wo4n>03K@]>@<<q=*:GQ&g.Urs$<+lKc^2'kO+8mb!;Y0]]?pne%+MrN@lF7`+6Y%9b@&pGSj=SS^NlR&ug0$CJT'D29In$H/k%T/k!Qjbobr/MZfS_LJ9=lY,d5:;4B(#/Oj,A=a8FPK"3<&=P2lD*Bit[,0*XMOqM\k%g%Y,\RGL2A3"erb>majckt:hMM_*/6/.ZL'[F:e2?!Vi"'u:M/2Z3ha%=o6.;l>^e2].'P]k'+M*'rtMG9X4=MH)6@.1Si(T8"\Q%A&g%k:1cIr,?e7+gngf)aHG=/6V2900sB.Sb%lnoAgb@nFf&414XF`J!t:LamI,=s=J(jfV5$7A'\Ar?eHh3Of?X2*1\Q3(kFGEB%GMgR<8;t\a4'R>!QF9odp2"S_S9rhq3_];79h31*`T`?8ZT2=&B6>#&mOZ>,U[<nIpQG2tp]2!V.DKkQTU54!"<8rfg]pBAn\*_+%=8>-\J/0r_U]0@q?-`2oMR9I]%PZ9r@\hX#,6]SV,Q!Su.>P9Z.)eDPV:_?d^>[jf:+54L-+Q:2b#2$LRj60c2AbI`M3gg@fJ)Oj%*/GCD%'-]F+]b6>jrVh.?(hE*=O?RL,^gq771@!R0>P8!!\K,g_qE\!eUhtP!AB^t`^;NclVTp+8KWZ\iXodc%&WF*q9QGbC>[[T%YRe/s[&$>neCR229=!S2hXQ[,aQB\5K^E$ZS^P8\,@A4S>KKM%n(EP4$+lLD\FZT"W/GZM>#]Lt[?ppCVL>Skr3L,;D2tL->;>j7%F?V8_)(IWpYj14OAC0+`H5a/ai]XooU&VfJnT%;Zr`a(HhYB.?o&ZXMi@>uKiYS-\2j]!1a/dLm\$97Rp=HCYpU@:&'4`;:lKN_`%U=CD%)23PS6-bVuQBdq(%`QX7StP6?Y<O9<&ul)*ba5L'WnH@U6h604JWiPcl3#=(o#D9dqkr/PGt]jI.tTc=Q1bNLXXMC*DM6TC%o<l!*".,P/ZnJdP#N@gd2fq;*^@;?1#8j4VrOkp<3p0-+@c7,F,]Hm`;f&UN@P5C.XQ\.s@Q3`k[`m1>+a0/BD1bPQ6ibWO/7ji&%[t7:LD_Ba&9%)SIK9KQnd5"7RokZ?R#j:!Y*KXnJO7.(E)[u2939(Psio.g":M4*m.l#>Lp\&(1*c,>3ruL0P=_M/eBc-^=Y%]G-%^cg^SbdqL0!l&Uka9m.c9LMG1>pJ=fD):\kr,skVO-i[j!l=s'KM;J;NoN*n#n#=':3CMU,,V/0gFN`9)CRMXAF74IU`_A9-Fu`p%-o9Q]Q_bc("dDWD&]TQ_&e6;&%ACLJdo6@*!u+T]*<m1k%Y\*NcI/O6A#seoUs70LMT,6H7.i3[p]NN&SLW/p@>Vc+D_b8`+kq$W%F\0W8iM\'6odpfdbY2$+Z5RM"Wi?>1(?.X>'GCRP"'etP!Qb_D6irufMKnHc9?.PGY724gE0DMWb[%^@Lo[@Di$R]pgE?FR9f0aE%;+<aIF[p^XIQ`qt^.hS$.oI'5$?qaP]T]eN]oI9!UkY\r2eXhO=Q5tfn&g%?0'MJVAeT]VW&^o\U^GY`W+X8Wf2ZVVR]0ai8C"*G%Upc@GqOC[:RB8C>'5DK*:.7or*#(2Gg$5J-a\VcCci[gj!kTVhs3d!Xr'KFBlu/tcd=+RZq*<!!K`mGccVU3F2FAq<@Yge,(T>Mi%qodS_GRY$hk&8:r0@tbIiL;>`[K#'j+AT?#eZaMGhKmPfRk$hPXkbk>U>ijdnb)eY\kkf.]/#&EgKPUMR==k\L[0V!=<TW+O1u2>%$BFSEf];sF4BsG7q;dZi70FEp_b4;64_7Ueec'TGqe1H,QSK'SoEBB1_+9,`V)[Xpo).%(Fi<lLL5sKgq-C'/P,4bQBtjAJ9:6/n%01!BG`??eV01^F^Pnd(H.RuqtQh\3_"SCuB_2T%<5T5C:U=_&2!u51NWYVX42b^hJ:Zo[J)+Nk$heT:YFBBeZc>69+1HId7&XV3m%Q:>:Kg9LEeg&>K4L*3iLl3sb9n@?%3"PHX%fjBJcTN769Kb!`7oOE$<lZJd_LZ"9]"D8tGaDd7?F="LC1R7RXR?oMiOAZ*M;'chM%='e7/&l[r#n[n@+:jFi'";VSYQfo].'h>UG'^G?\R!4W>dTE/`9mJSeg@th_.5Vdo>D@EqH8Ml,E@KE\7!oB<D0ebbr`%-pfp"u1%BY6t<ni-co;PgkK2EGYr'QKZe>r?`UPpI-bNcLEIKA/JYldB.BH:^]XBA:QN_o&]DANZlGBn='E/oc7h%sB_Iop<\3rRq4[UBdod%T-W@PT4dE*)V"9=.TGPOG9&0^]XndmML07nWf_aS2<s2Wolt0MhcZ(f?b:)O)=GaL\JVUFeg2,NY>!X3mb5<en,GF/)"4^rrsbE1%rQXDLl`YK!N_r#(h0sTe;QN61&(-hhMQE=E<.'c*-B02$9?%7L1=+^,PXRi=E.uuDW#%$Ol!g?ILd'Me4KKqfHm9hO^As*U^.L,?%D-'.HMlV%8@<\#Jl)U56<_)8hMi\9G7&/R:9EgH8k]AI(<;3SAka5e+j/98%c9BL8CT.jad7%!dMPl6_4B&P`V>_5&BXZ/7UEbps%ha>]H:KhDeMg+lu?T80SUY5Z#c2Jbc.q&h[mF_OuQp4Jp(sdKQ>+Qlp*REoBlp/Ypd^dk"qG=W:$ZiLgC1m6/27PaJ>eFhQg<k+]%5Sn?A_8Z.m[]A7u$cfL=2/Du3iftM?%,[;IIC7E8hs=,7"Q<RALFq+HBA$C\-R)FWQ`D_$DI+H'9_?Pi*UhAMo;OEscpDHJRpGNW%]W)?]JdaVpkmu"\&%/6sNe8^22YDc[l'Vs8>4e%A9ob=[,.<:OM1_GD*#D64V$H,7#?nW\.@RGubaZOt7t)i[,mu!b=j5,Sf)]GT%nc:ZTEb[?N1KCWpfQ&)8T.?)pP/elTd\@86,#9DQ4+B]iGonZO\'MTZ?C:_qhtIRFA58U@TWI+T&M0614YtI(RtbnH*WEBDr]dnk%Jo%V#`Cg=+QQT=cfMrLgY@mn!LPf$rUM-GDfh[(BPQ@n<)H(%sJ:7XWK4I;Ol%sd^Dk7-`nS=$cCq[;MVbUP82G8tp^+@Ze4t::%%lm2>"[88eP4`\LlN[.f1Gl`-"FEV$X<TN^>HkeK+`M?%2/KWo9:R1Q,=uK]5JfIp8R7[id"cSNTF^&iC_8n0.AX^,#pQL#dM^6KY%HeThXreC)UasFnN6P,aMoe\QoRJLhJ#.HkIh<Epf1O:9l8HiSdVY'M"bd$!S>bai]SaO2R1A?HZ($\UF)E#ZWb1TqhR>99KKSU0R%pj?;'D&e+](1!s4;,r,pOFpB:i)9S5S0_CW:!%;9"UCYHF>-(e3iiepbLUe<r=kZPFE7./MgVBI9OHGniK.c3KJ\PBflranG*WC1%cej=K<HtsNpHbeMS1WGH@ltbB)&,#N/)KW*YHD/NaH4I$mJah;`(O>7qL.8Tf<ou!/kG'#`@HJk[<Vof]2l*X@b:$LP%;o0&$X.b%gK-.GfD7/Sc2#J-gD]RFoo2sjiu5GeA@7'K9pJ0*WNVhn)&A-+T(\"R3-^@0-YR][_kDRqbWk\p8#t'$6GsZGlYoQFW#'SSRI;L\%1N_*qV"^4bSLXRgk%jMWZ//\%?]l3X)+#O$ALu9q`SbF7YM;4\:.=(T[0u)j:T:r01lP>TqFkp9")s9o<A(AGB)!33C3(q7="RPa%-FS:0'leu66d_$M=%SgkH.Q4&SKqWD.E#(%QJ>\2+b4IH!?LKXOf>qqTTLT(;Ae7?aaXsTa/.H#nD\6VHhFl_cHQ^VTeq68A+Mm)%g1nPeFlD.?]Mt/hA8OMICQIGb5MOM`p(0CCO)LkSqtd7V`h.+&4W[@lQECR3b],S.r3sLR(MmP<S*jC45Z)lO+\:@ZAI/"<CE!XI%[V$V,k["(q-pk1I,MK!?XlMqj\Y?=c7Xo2TT(@*98)(=5q50\&WOqh8f(:fXn[!`c2^M7Tf7E;qB"MAk*%n[e*;sa5e^>oI1U=$3%g!^B3aaq!E2lkCd-2c,[J9)j](9f/XA"_fb,#,Tn.Ekmu!*o\PM46W?XV'Fl1m/Qq=C:1rR+kVgJLI3\^=44Kga_bE@?XNc7g4i=%Z[.d4((_m!e>5O%OL((eAa;GpI=FZ`L`?!!l>*J)WaL?q>$*>kPBI:<.ql2Qn;ZE4lrhYQ8#:s7.pgdhN`\P7&4uq`_jV:a<!n/c%7b#WK;43F-],.2&H-sN^8>T8!N9JK@,&"+@e<9Te%eYE(98-7t?"5G1No>Xk,dKS.:9(5s%2C1RV$;tTM2c&t)-^A>'o`I/XBh=J%$]A/($+>OU,dSXcX>k>Gp@4XalAkS<.,c2CZ:/spY0360=m,8:bV%Q@6ETWX[P$FDmB>FAX]sJi4o6!CHIK`b`nn,nYMZgk>gL&s%k@/;\[.LQZYI4&PZ$Cu8he;CY0gLs^O2qo>AUkVi5&SJgfC,OG%hJs95N!G`IiOS_p8(Oho1DK)p/'dY5sunf&sGLHPfHBk8(JV:%6WWK5ENHHTVO>:0j9s<G:S7ePJVE*A&3J?<=WgNgpeXSXA\*s)hPI@6Cpodfm[CZ%i)@n:_2DYViRIElZ@65;#?R:&l`/K1kljbG%Tifm^_nmR`E?)>S2-G'L0!)?.V1sm%bc=Tii.no\;NA++jgYi;<,9qJ*/FLd`>eerVWK`&O4HtYUEPBY3BdjuTB;Ss0l:W!cOG!G%.BW\ZDt@jQYQH2OFtI.!?M82DiK<l9@BjJ5fn296FtI/Dc$MA=ZaeJ]?$q$L@Z562C>+gMWi/iDKD2qNh@f/OKdSWN<g)tMd#i)3%"o*!XbmoIQ*K-"^eI[hLOuus=)s,8EAp/t*`0IrhB"#di3"6U#`6N',cp'2eLs>hm^i>a>7enc!@3N`qMkuW;O/4j/UCVbu]ADue%a"g?t)/s"]AJH(TZe,,oZg0T'C/RRdfR>D)V;Lk=I@]f1g`;SfhBbN7)Q($bJ]ZR778:1l;SCGM>miSE<l3=^J/?\W/ur`U#G(Bk%6U='QdM<V#?N&OrR`2W#ic6t:MPY/REUj;_:b_2"!6X;S]Vh;S%+!`["eG/^Qlrf(kY*Pqi'mM6ZmD5\K2*;J]/2jjnjNNF.]Q&m%fJbqMC)^CEk\#rL;-TTCRETt,lS,GI2a@7=-F0>e-M3=B<?OsrZqlQ5f/p$j&kU+[8Q"/a/c-)WdrK;$Rrbu]l_Q3$f[47kRZOJ2%g$_\UGC!;kA>H%<cQ+HV1Pr1^Q!qVB#3&Y_mIZ#*'L\)_C,%W9%%b%GCF.6/&HiBimE!tb5.&neO%YCLFfsJn0'uj[4ba2G-dO$W%DrWRu3UrOh#'b1F1DoAa"[d,(O^7CA[L!E3DA3da[^V-thfh#;"b,4\/f#RGDo4O7a>^O9rS64'@tEh:[LG5nRi@.JPFGd3I':f>%6VV5ugW-nkect^<q[HcNfC/U+aMl,D`ZT9e<q>bnSS1.#7=<k]X)o"d^.j"P$+r:Q2,4n%*Z\-geh\%<NuV1$0IDM)rLb]PgBqb;%:b&1cn'518da,X;];%DcETU/?N@ERBbn43_TT[)77T%/r0ge`n:XNA'<cW5g1XIfgPBuk8a0:9mKbh]`V^-3d*<(Bm*8u]r<NTC^%[^UJD]cO*q8`kO9M1msGk-@bu\<"YgVDY^OG.&`[Xj5Jq^aeSO8i1).I,iG#(2$#\I2FK(V!V;0pb,&c'#`W8%aS',X!0#=C8>#X%LEelgJ1\YFWd/PUZ<ueu<KF-h;7,M`(%/iJHkje#/913XW\sM%Bik\s8>Bg(d8^bZ[ArmWg7RcLc*gE*ptZ_OBGTXagEs+Mck3N<%CiqpJFjSm"3]@QF$RVZ5TNrd?hJ_#)PagJcUik]L;d-`q4_)oEgbl"[6N-W_F](62c);T`nr$Z,BN/&dnDWc[i=9GuC](a(jZiL:%Dgoq9Fo,QlF4cm(HuKsp9=74CPJ+Ag%U-I9DpY[Y\QU*(H60:S;^@uP.E%W-=K$^Gk?*SLaR_5<k9u)Hl9dh+WM%l0WlL(Wq8,P+%FFHLf+H!3C[1ZMhOY'3CVs@U"3,Ua1%;9EAO=O;l!=_11CM4:ckkV'i^;Q/XcV:i3<P*4:n\sfr@RIDT(n^.oD>*_.\ELX1QmY20%<c]q14Ymf`USg)C@:3gFTGV;Oe$tR%_LAme5l#95c:_*HfGV+E;k)M'F=p1BSI(Q_]fDqSID'An:YXiF'?bRo@VThOfIKAHEda-H%4J6-]ReT8<DlUHu#(1\WT\uW:C<'HhZ8>KS"N+9j3B"i6Z3mF]8]&$lkEH(XTkrlre1-T@Lur7"fa_E,\#MVMd2h8WcqI;5#m&_c%f_TDoV5[M&I7l\rTPI0!1G-[FG;`uXWS8-YZ42Z1Sq=GjJrY0XLEtBN/LosFS>7Zt(U4Nql)-pldqPa)%D.:Wo3sXeE8[D%Hmesn%:!C&7Cn=;uD>`(@q.+_s7YO+^S^Xe"DjXN*a`cii&NsGTZi>lQm+U.kB.(<;-i9afjd:QrQ8/u;Sm3jNG1hEsW=DcYR3R3Cf/ogj%4>A)g0EEuQ=cPA?<Ic7<`3)3C7E.leb(>jFObM.nWojeJ+qad:BV[:?PMp;^Sn7\)QP('42iYO^_;pCq6;1(D*$nceNoX8/=X4;C%L,$,H<P:fsD+P6'GGa?O*BXt28ekfqc4K<V0*7Wl+NX@T^AL)=7nCi?(@mP:'-*\fic6]4RYMKQDXh0OrqE?5*0Vs5HgNOP=W#]+%XA9FK]n]qCk`>GQ+lA@$121#0lJt!Ki*?Z3QhI^)W?$moEIHGNP[W@S)VoYiDH6pibApY/@aB3u&:T?+S8/SkA3h<p_Iu^DRuJ1O%"0^[KlK=5<dtuVaFO>r.4t_#38kkrf`RhB&+\h]OBO*1IQ.1bDH=->7M]!!4-TPH"05j-IUR;95&EQh5oAUTJV=99470#]Lb!D=d%rP/df>9]WX?rsA>HTUMl[bqe88or*&krVE;'aFhn#pG"=(P9:9`e5(1VL8kZUS>sN"eCaRA^OH<gEWlFbS4"P'!N"AhY)rn5Sb_:%*Pp3.g&>2,6"sc-&@VG*AHA=C8M29XCQf\tX4X@>d"j74eKoE,lPCi3]Jt;)0,NL,q49_9qnJPSPjIj&Ult,kG!#PUgLKIG+["I/%.H</=S)6-d\+2L#&'cajQ5lQDeP9ttVn$oamGM<TL"14JB+55J\ml7c_qqeWjkfFYKO)6-'jn^_CDT5([emKVfD(MOgh7YY0IE*p%<?>q*[?5icrcU5Il0h)Nm$^EgP_!Q`Un-`!K?J/!W/:Ref]^%[aD=V09_MMKBS244$5c!tM7j<Zhi#FOV8,"i.U*0=5b7SVRY2l$%C@H2O]_69hf,03NG#E!X!.M+\mZ/A3>-O5WJE8Yopl"[[euQG.W7]*$B"JA74VbIBEd**;3b'!8A5:JWE\R?Wr?GuYgD^a2cM8#t%I2)PD8b7XN$-_B?h2/#Y7e1";.jX!s=*AQT;!"[FmKGl`0)Cr\75gRQGqG%IJk;<]S]/<PaXFsO%li+fgaND8WEP(Mj>6;>M5l=<%83&9;J5'1,Mk-Y)M%H<a'pY;">heC,%9M?D((_je#Z=c0e.Bo;i?JN,+$P1<8NqSuV!+)XY2]tUr94n6MLL6$n/(G.SQ'@6*VT41%\A`V6Rfho@TR+]);/AJa--o)NbU;.j.(/g8q_L-5j^5/#mBjLkj6QI<(%V%p%;TLFC0Rb"lh;@LM/]tO.n)9IRqkI-GB:0J`+=/+%a91(#0f$;?f$*XuIueaDnNq*am66RD?>kP)#kRY[f_qR%J+@'l/oZ?%V1q='<=!A_/WmiC("eZgQ`C6M"/^@Ze[+Bi3StHZ:91Pq%Y;QXom"=W]RTZA($Vi<5:MV,;.-2tAa,+"X_R;j.QTM^?I@q>d0Mkk@S(39e5@>(e*0RauK"Pq=FbY\&i_t?N:BJd*3-`/eZZUSR%_Qdst[a2tN<^"(eMD`'>P*O;LI*F]72IH*q+*,APZ2;+NI+_S;*C.'iA2J]Lj%p;?qW+XFUQ1L3+(p*#@^b48*\6&_DScG3''',9%)]^0m:>>$"XBdlS8gEG`nrhau:;>Qq18#:dMUaEUf$U#lf6]"U]oW?hJ]1:`2_McTFCqsI'TJZQk:p8dU$6YD9K"tdOJfp7ol/k+%I+2%aL9QW*It+H4Gf>X0^1=bUS$,td^ugQhoLhAcWF,P.s&nX%+dr$Vg-ium)4VWtM(k_,48d8j%18ZH$,Z&qT^(_tKa=sU0'u>R%b*AL6Kg,^Sa$.6@A3/Wf+7SZq!lGUE*ESY3SMu>,#'6W_m/seP0P04L7hg5#rrO)@F>(OEX[]#LGT"lfOikXGJ&&=J6etq:d`5sU%+0HJYoQ=l1UX0(q#CV0$S(@!BlJnXZAHQKRLEuYD/qd30cl-jOc7F!U0L>d.(LofU6"^jGY78Pu9a)*Fdk)'r104'Y8-m10@:hc!%i2`3eFoZ0+;=.Unl=->Yp?SLd,KBX&o@^%-MF+"r"M0t(Ik!hu+=WGQH'bEp(mQZ1np9FO#'(8$T@+L_W7#9<Kl9,nHOG$=`i.d2%QZ1$Xh7m;aq6o0<o>5ggI_W^JeRYms_.j)*[:/a2lrrr2n,%:P[@<J`9/g^52>ZZBo@NFif^gDa3G[d0Z0IC2OD-M!M[A@mp5KCj%qfBfu-0BE0O3O//AqCVQYiX8;3!bR>6<*FULE)S$ld2,jNJK]YU-D!SKkTi]_cnQ4bo0/%qfj5_$*3d<Emd"8MPE_h.A'9-7#X$\%_<O11;m?-mUD-_-fUO`p6m!Vi!eM=l.qPH>&!%KFJ#>1uP/3mZUL!uP*GN'XlrDuaXJ2LBe.Dq<e7)p0`YKt8m>!u`2l:d++B%_5%6BSdh0\%6%@0:#E$f@&aG6t"N+&pG!Q?Gm6M:OLJIGdU2+Z"&m<^_*+bQ;>!?ClQK'J=XAe^j<UbC3]bYl?_g_>sfg;5D8+V(pX%%ra_%Mq8UpTnq/OFW'qYAm/t-_a0e*YA4lWKH"hNT^_STXSr&:tB%P+g?emRqj`PbVD.TKO9MK6j?":K+J`g[`4.+fYT+qpn^/b.`%j`S"-r1d&:=JSmMa6gfck%$;R(_Zhb'aTK@?(qnAWf`X^YOmDZ,#,$f+@7=R'3HA;MZQtKNSo#rT:urk>+O*k>#p%uTgT')$[K\Q%S.C!g(qGO/EE''Y$=F\88:\EG7>OFr=Qcj3G7#'>UGm=PCqil)Z'XE!^c5,jNL#R"nYp>3Rlq3+<#9BD0OaXcl6.%H![FG+K]u+G%<)J>VB2RUMMnfmEX<@2:QgaKpchMMNP%6tLnN!EA'M<^=Oth?jC!#C!pDNP>UeU75FuS/n`\ihkE@e"%I[bZN_TZe?F7.YfHaBpS%E-M:]T%gZ'eI/]n"8]u<=i&FC3&b$XNHT800/]02[fe^(I2.0i*5cFH?XnCHB,l[r9\saJ8Sn;X-i"C0*tn2/*MCnC,ucfCAgPDZ%Fdj/oZ9.ImBW<Ws&MTUR'lUFa`R:UW-9S9WI*p4^4K`9bhL\fKGXW;uLZ]/+m&\n)YFH";E,@q>WPH>S(Tq^LQ9D4+n(\(kDr>ii%-\6/l3atULhDugUReGk-Z?D,h>t/?u#72Vq2ne-%q5!A<(;dp6OrT5C:uZg/IdrUIH7Ru>n`@(Ci?1ta5It`mLa)4T.R+R=L45\F%ebGkmpDB+5^0t,K5+_'<lqP#\<J\Cq7HDcgcJMC)?S[SZpU+KLld@BF3"TtFR>70H2@W%npTBA:i_:ZFgUb6q:AbpC@4F2SaqZ%8%3*G+lT3oVO`&Krqqtki<OhZ'&=8PInU,3/uLU3A1>,3@%_;l_M%CF:&VtL*fOISlaW](S6#HM,dG\33E-fS;1L,,tX'\J<hd1uPp%E,KkF\#AWsY"W%sEtf:&_keIZM7(@6K$)eeb'H2tc\:e$ar#:O-ds^X*A2EsB!S5!beDVlTj6]LLSkk2$HX_r4.X`k:"jG1g8*Sa%a:H(o5s*Wia43eEL[A2i9'&#YhSejrq0GS)C%g_6qr:4;m#"Qqj:/p;BNn#P)C&D_g<t4`BM@)r/^V/-p:6`+^G,QMs4EciD2W`V%TZ"^M%4lPU/LsrL]OqIq<P+Q9:=d$g%3M0^J1^Oj[Ra!rY<f=J,X-Eh2YZsCRQ/l1bp"[\bR#J2MjFq5>rq*S,[KQXMd(TZ>rH8J%Xfp4kMEPIgo*@E[kk51G<4OY+$)k3hi4bF$d;8>n=f@0>:g2)TB&6^o.fUoJ-:MZ!b1ndefjl@t-aX(@]A3*p&ld=7&aa=.4,02Z%3)t:X(*"MK5sNB[kRf5fr;8A]KEs6fa@[]<WRfm)*^_Z;A@?4/N#cXXk==1*V_&6[,`Z6)IWLPacUVl@(Zt/Op\icLQ-$0(;nM)X%%'EXE]fFT#\7ue?gYAneq=/QABtTjC*H[^ag0rDo]68sTq!XMXr<9C)p/YqA*@=1pU-u:g;&'./k#f.l(M2JlX>48TL+2;F;S("\%F-LTBjj'j,K"Bd(XF=&+Qm_CI<m?DeV[b2Z9RSW?;CF3X&HI&^8H%MmkjUfW-]%;MC@r*mf@lt*FU!VC<2h5uc:Ft^Y$i*F_6D-5%+OACEO'ACWOLj'M?bVV_hsH;i0Rp_(F^aQ7]@rc;IHBV`EUEH&0(A;['X!5*@M1nSZb()ns0J3NBCP<NI-6%Vi7ifjM26'ND!<XW%r:Pj/AV6]m:0$D1kTZH>PUaX6<=A1A=[>Oj$*0_-,f0Pr5_I3hM@14eJWu#+>R[4$SYh&7^o]$7Ob0%S%ii&js)Hc1X"QoT/26%_%N(go0e99oq<mM.B;\?aR^`oa7Pe9u0OOGtXhl$-)YItDuJcZ_h2$.h`(?MSIQWX=MfH5oX1T2Y3FXO:HEXLhVS-,3#iktmShn*X3%?Jg#'EXrb)K'%,/^"hB"Zc,gBnJ#0KZ$o(?0r4MrZ=eD%p)`@+mIM`q4^"'EW$Pf)2%HW$s6b&VaZ.6%]Or9P>O<<L!LU<,,)[=a%cUd-dm[B"1c:pYd"l-R)Mg-<sRELT0EWod.7dmfED$WF6fsI6^h9YM_L/U?dX5moiJ!#&n1_VG\j+#b7nDIs]+LLh8Kom@lYS"4G%.9.lS/;UH@=Y4tbrhqe;5ZfA'g,1'6gUu)uc27d-T*A:F&_;W#:QZ_QI8SF[1&i-X@(-Y(pGjRL&6(86-KkD=A0t_fS#o5l0=F.9%#P+2c\S3eEL'L4XKuO4KC_Om&;DW!m:Br_PAmZt?L)sp5m9lqU+jdG)s+C^%7dS`04KHM]hX1@olCYM=I&Se2;Mq`A!P'd[_nWq2%:Ef:SaU/m@ZNIg[cP!s@hmEX"EmGZj_G,C8@5fdt+'Hq9\afYElZj]Y&H,RZ@dF(&=Og]\1%W,o$rGhE@`.#_r)'f(ZfX-%DBm+,%=s*)l6HR6FL/3B7M/)Bj.f=E.@1@9B>0)=!i#.aBqnPFQp)dK_rj.@tbq-D-#hgiH[&7Mh7X"Zfh(Npf<$.Z+I6180/1sn85Q&h9%/@'ut:m`C86hR9W8XirV37,A>WGg&bYKOYM[:_\Us7rFYn(2C1Z*ELbm^9<;m2qnD##^jMQ\`We;He!"%Z9k8&#a3XhCsOC1nkVE%p/A7;PK="7VK::WbDuK?$$)IMomR!bp]I&5B^8shc/g6's.GdCCAjeiNib^AJk:?gm(GIBI\'u<o`+ArgV%,"CNRH$\8on*\8on.%fQ[(+_%)<;XMI*/Bb*>[L.1Sap2%TYDT=4d%k^f9]PGE4V<-EYr@]0^F.5n<*\o?[A%c>5LnZXDdgk.CB0;`OQ-PSmruL%1?m3u7%A3Zf$0iQ`N$;a.Do5pp(BkUqn*[o^t$GM*s.*+11#k(^\Yt5p8RP9.6-][sO+DTb8(E^A>otuIgs"E]%^[u+Uh0HI\N30RI6aHH8%0E$ENg>i4fF*BkAbQ>f9dVjP+h8OgcOAr*lc+s&"BT^hO@_lE:a)]fZYZ(q\2h4_eEsPh_`N(=$\FRW=2f7H:j8t>ndRCT=2A[fC%"P=:]i7pUM=I31/+=lb#@[fMX2%,o;0_ZOsj:7GY*YM(K([Q&[)(!p"3fZ&n(Ce5UqSPDiM%g[cP3e%fN]6an3QsIk)XF-FdqF3^%(CmC3D"0CH,@!j!0Vbpf2TgcMGcQ'Wc2"O\3hkc1%]EiGRG*oWHL[G)Y>2`;!ZDS^!ZJ;a:!qDAP-Y>`'^rXc0ks+`]8V**m>`aO%/0f8#Camp#2QDlj55<sXgP(Km_4@Rf]CmS@%;p*q$.eesg`t"%.DPApc8oQTS9QF6IV%e_SG4UD\N/P@U4rRrWhk`bBo,$im[<88%Fj`)Y$(LT_7#jMd==cs$>IRTi,J=Ni]5/+I)h[3pjU@d<:1.kWZR"m2c#F4\*&sn'_edHB4?uq529)>]OE&<\%UEqd*:%2P2H8M3%Ap*eam#+-miqtR+3obmr_cs0%pD%/]=BqY`I"c5n-62iUc9GW:nj2D>NsTZinh_$`?bV0mdTZ(8aWad<RP)<lDo1./[\h9>[@Kln%&,Wibp.tATe*LM@l>7_qVB0,X._AV;>Kl-*14Yp6/RM<SHr7MPZ=_*R87M^.:""PiY:WV!%($egPak`UnVE1X^\Z/]c9J4)?2*dP%%*,RmTBrIhDA6_/Zji<sQF1s*B4sI6he5g5X7Is[[SZ?Wc:77B>-"]>EQrW7[*0PYg]d5k,s2_ZB5<.Ad:nX92qNY:/DbLmba0Fd%p1&iZPO(&(JRY(NNoX#/?Hj#s;Xo@%8+C=b&:$G+A9LE9#D]6!p9P(c+cH'BgH@BifE8R5:3q0KhdRWYV=De?S4D=N7X^fh.e#C"%e*l#np0F3d6`]nJo]u>m$p`Y&2jhBqOkDSnFiiEH#(gu)B*bEDP7;$sE,=G\o?GFY$IZ-?s%gKaT=+_2h^p^0QS?-CXb_9:I8FCF%r\MuLMN,Lj%_8`2*AZe5SLNYQ;$f$Cec)iX5HB"(\/MU]@_pnb-FlPaJug:l[$V85j&>S@24&Ea_RMDSbu>$^gk`;6(1qdS_Hkc.%:;3kR*O71%PZZ%2<!=Z3c2t=06tA3Lpmp1s:#@7#Fl7A;e-FH`=hjp>!Q]lX>4_Ci'+r+)Yg&<4ck<\V]WKoudV';3q*`\7?2-K^%Qaokc+`dLc^8prrp67^1X[VUD)dkKhp)9OT)t(oP9J@gGLY0b,1SI4_W7t^$muM0bmt`6.QeiE.dJ<m4^SPK<@\Qr\_#13/m<GcL%3`bjYBXR%M<cc>uSWt=SO(Xcgq,S#]ZJXPO"tY4!)!Z&-q\RIRLqcZ:e5<MeP'6B(;;/GTB#u^_2b_!ZQ>$\\^1j*"oX9$OSGKQ3%a"9c,UP]!KH.9rQ^R5,*Y=jA_!rKOSUCrWaU@U\^LuT0MV8YJ*0s3@p)O=lSL\un/Kan3T=Y>G&)m<Cc-Vl\f+"jo$dNML.!;-r#%2V4`&Mk8qbpp)g!ZeN0ha,/[X89dC$DO5DD34O&7%rQYP1L%I6R7ifs+Ec(QI1[eFeLU"73S#Y\;Ji=EPk_/I[^lW)4gl`JSmLJV%n@^c#qa;li9KaD3WgIK2ec7qARd\<"rUc-@YYRJgH?&u]"i!EWg=+484UNR'>7:2m3R3YLBhAorf`JK`Sh3(Mis;_+h`OGIcX8Y7%8bX=i`*Y>$)r<IR]6<';m,EFLY`&5bJVuH]iSmKm.uN.r&2'FML.Qd*S/5J1Dett2pV00jDq"@#F!i9*E[QQg]p$OW,32M,s(eE$%@O`cj"P!u_@BH4CO&&P<j^n-R**XXs`b&ogAqe!i8Pe/N0reZLN\UUO/`95e*7NFWLE)%3KFM)ZB`Te6$P=r%CI#gDVkQ[Cnk2N+%0sZ[O'ZRV5l7s^<&p7Z\*1aE6=.;cJN)7S1fhY"/$"55Kf)h8SS>@WBka9#f]Rlm!/6#GbEbX`$NaT(9i9DY_#2%8_44kC`.W+_G%AS5M2lC*?/_*V\H0kC=;A^N>V)IB-RHWr)hI:4Y5n3oN\#GFqK)U??[o9e6Qo-XBhP6YB>0c=:'m7p$N3%c#q)_V7Bq-*I6Um/jd%Eu^Ce%QGg8o#^)n+&SN)Z3<p\+GIDK(s\\qBWj]`<ch^>P#_GK^DRr9"6\RFk.Gs9Fq%XA8N3$DdRcA72:p_pf#m/l)n)o`_6in$%pPiAerse,(-LWDds7[aDhs5Obs)Y"%4<\!KD)"kNG82O;W*bL:Z5P'`["oK&qL<**d=n\RJePhc,o/9icQJIJ>V_^HP+s92ibGNn%n5\Mu"V^ufJO:@me:eR[M`$P(IuqAgpK0cb;,sqnitRBg\\s@Q-QVC:4qu)fg4d[Rkh19%fQp/o4"+@s<k1*t#pufs[_uP?;?bm3%`3V$1H@(fR<\'!XhSlB8RhKbR9Tab/F]ihbAXZt2Ao`oK[Cf9nLr^TD^=uH2E,a2O(uD\.]6N3cm,D<oYY4_-__0fS%\@sl55o7\%pnXDMGX#dAWr4nG0rl$%+;cl?Po)\_WM<B<<]fmf.O29Q'h*p4q;:>7<651eE>7@hL`t9bW7)$pFAXWKeFrJ*,X[m^hn]IO9(OUO%88:LfCXnML0SbJhpdJh.T-?k;k[Lk34540;Y"qr_[XbqN1nl"agdf'&7Y]+QM9l+hFndPOZY9^De`ClVgdk>EmRY/K-Z&0UbV"bl%EH1=25@"S8&pR<'5Xs?`_AtZXF`BoIJ!$K6;`#?Hiu=/#NZdg6lUe(sEGX<LBE%V!pdLl5i@"0lBiL@8!QsFFh;helWRQ32hEr78%1gi-lSB>AB@#c#e;W/[;WM=dD"R2ckWcK%7f:_KTn"'=%i??t8LPh6AG.@XBRc)dZrOC.NLL184pP\V_nBU2h5QCLg/;C.Q]BbAh%8eWWD(Qi%#Q#IX4_V"75GC5s?VW"SuBg,YRnM+M_c@H/EamR2Z@\pqBfBCn/)kh7&Pg`hkf+m6unm8'>;FV!1%:),=QSC]:SZsVM%XUO;l3N\Gd03?aTpt2#em@3LD0g,(GSk"as`aaascpERMa4!po5c6<g7LLhfIU$i9@2Iimg=Z_t]$6drU<3+8TNGlK2c('t[i^Dq%@s:GIMg+mu;Q3m4_Un7GqngtRRleO>n!e[AfC->`KACQhIfNHW[mSf+h:j/,XM2$@gT<QVa0S1aq5.asVl]\tjc(%0:[X-4o_i'a%07G&gV3%`pj^<4_hLRem?F'oh*Z[1&$ZQs<qIq$6Y)'DMQ4W-6'U>Gn42!_urTlmj<7^-[cOIbcGd_[mDN,,poFM2b:S+JhJW`p2%<?]a1p[=B$%s.S4Q%Ql49"HYJC-LBaX$?&2G7i(b36&A\1`k/dZI8n+e(CSj/Sn&l:PL7DQD-BqIbf\l<g,EGBfCt7GUm=91,f]g%$[:;;E(>0Yja@$aXg8-"3G3TK6ZGJcTb"B;p^=\WdXr,E-$;o<($Q6D#l5)Efl`Y93'T1e,ZUtqkHK#4R/[+Kj%<&81g?JN<,T;9%p<riI">fR,J.lD4$m3`ZHGMlF'](XnT2+n51fD-kGKnVihD\Em6uF\Y]7/X>nX)5Z'k#:p_2>P\.[0h!e9/ZF5JI%Uh\M@eIDotq%g7Y<-Hhk"\)jLHDW5TEYS<I-ISQQ&`,WT0k3P=S$<i@5OUsOueWtn3:.Ul*#.I;0a*6=EiUm`$WR9A+5pcj]phdI]\)F\WJ4EtT)%EL[!_]kCh<\eOUMN"r!iVsODtkj_8H9TUb&\UJ<:;"?d:0$RX>7&I"$NpI->]YV?&%p\pmY9%15Z(eA&/25'-YlRE1m9=iefJ4D?%[%ei9\pZV=S-@c<(8eX/_u+".WE/cUMlZOqc0OU7jOt7+FS211,]7qDe/]`VI^N@AF7uY_?+5,R;=N\!3igP96%N@qnMQ?lHfc>%%<.01Wl<hY.+RXb?%u&5<\o&0hq?NE_rN@E7ARc%sn:fRM#LTG"^s)7).On83C*-]iO`ht#'J4r$qmEsU!9\e$1hYlN3O^mCV8+@h%&B,K18-qd\.B'`>`F[fe]71=K?tQ!;RdgEF?d'V\iMh<bO(7=-nU/>G9g3Zf/Ut*$ocjce0.er6pQq;nYl09aGUU%fRUYLZ`Q%!u%/2pj`_h+(1pAU6(jYna%,>NB&g$/A#KnoE.^%=#4lPAA,)W"SHrru[%n7DfnbNfVEUO@S%,4tVeJFB4V1_/EK"H3=9e^=K3E#?85%/%=LH";nG&Pi[VEAp895A-cT`l"HR5Lf0p<a^GLI;UiFJ')AQ#KMcoi(.-m]e#?@p.E.GqHWGQS\@Z(RjM%@Ajul<cES\4<#,ZEu%-T+@>^c\BW-%%q_PPq)m`0-(Z6Mp#"d-(b9H1lr2mJ74Ve]H'YZ$\Mo:kH]P%BW?IXe5P+rmda7O8p]4kAEq^_:,IK,Mre-\isio%?2L+F.!8rc4a3cO<'6N@@Zrh';lS.-40"VA*+B80(-O11MHXY8L=Q`RJ"Tf/+i\.V%.<N/rkDT8b`AeFoimg.QG0o4p>+ibGcK'p%*g0B\R+lRke&4.(lB:+@I+NIo\@TM$$&NRS?et\c"'3I`^'X,rI3[=4h_aBT&8W<VASX7QMn%$%*AJP:C9Vrt6SA$-[e<:A<Gp>,%]?brGjaN)M;`AplMe%7Ob7am=YY\.?,'qpEburZV%JpkbCi7Y=$'pc)[c5($0X&0g0UB;Z$->+bPB$&97*e+q.<@_`8+l>4g^.kW%$)M,/>dI3\Qt`Lm303$V@ngRJ@$%I[f%Y4]@7nB(jWSB.(_l2Ts-Q[+-+31Xh'Vmg4OmOk-Tl@!+LULjf2#pSP(mALQd_!O>=MU?%JDIL:q,20m[C8j+%I09?*7,<%hiI@&iRL_]@">l)L!Z<qA''3H:9d;!9fG2I!4se,]uW=_6Ej;$]R9N*`>Tg6S'0h0RnHa/DL`8.%Q!g([aM$?X1u"kq96=:[n[q."q7>^)]&8&7]X_Q3?bc&5cI_MDfFAoFS(?Woh6S38G2%UJ=PU/)]C7:#3c4Q!=d!^r^Y$toQ?:)H%Do(M('g5r@Y7UiDromRnj*SsSXchP6;QVR$5ip@+rUgEkQmm6>6+9FQjK%3sGq#d_1mOc2'KE<%WOPH;g,4dq@Jm+16?#h!omVWF%3eVcp#Nb%3^@d4j?Y_DADlUjA4'<eQ/hkhOZ!()N72>Fe.YQH@R=@V>8,Sm'B(S[YSF+GqIapb'L:jctSc2R$\ICU!Q`jk0fV81.%#F`L$YUJb`J[=+\C;KqC'HWZrLXB$?cP\EJSd2VPlL^q9/%4:8A&Kq[GIQE:ZY5iUr]IKMD9aDnDU'ORV0fQEp%rn'H.iC>Ro:\)%qdifHSC>71"HbQeZRjVTlWSeK^F?D`#oqfbNW^0]rosf=KB<B("Bi-rU^KXJVqIJtKIfA]R?!XqK@$]7iK$21?nram$OXfI3S_71%oS/Yb\Tjm2b)s7"$r1=NKsJNHZ#BC]_'>Z%!&ROS4X-==Lo.=Bh]>51"#5[9&DY_s@"`?mcCEXUK.pnr#L-f6oVCcO]QSjOFXG.K%.sMjPnK_6/jE5ZE_B4:*1c?IL4rYA7!c'$##\c[oP-Z<a53nfZ?No)KYPd=T&jd3lRLbOQbe:6"UcoCF`s;L!d3!EJ+lA@$11suT%&N5)C%cidiBU@DXNj%>!mGmO,>mmoADVBpFbUk>"Q[R=Xll<UZ;GN_NNRm[jFa2&$De7<`I'jGKlK@n&;gPo64@2;YZrQl?2+F;9%Vf9'_bECfec5XD[BO4.`K1Q+)7UFK$rhJkj?ocb[64g'iMa2)j'n\8a4Le[m_d<;a<?(OUP2``5gPqUO(fmt@L76K-2AA^np6CfJ%\9'T$Xi_4BV24<':M&L=?n=QX82rm]ef.Bhnj\SEG,\#:W<O\_ZPc/fIO<n#QA52*bo(MP48gRLNRVW1[&SB#(0.,\mD?Ithg_Q;%[Vt:a=Yu6/K*;DOf0Y2oTKS%d+2[':[RE?VHh6F?r)Om%OmI:Pjk/(`G3&_kcL8&D?F0lS2qkSB]6;pM@%Q#Y#_1u2S"QNmgF?m@%]$;pWhJN"(6S@gRlaY>#Y%XngM<V.p^\1aN+=;7.cb0^Y9.ml\k%b/s=O])l2[)Ca?[jUi32PZZh2*g?9@pZ^V:1NE,KFV1d^iZI%WA9c-TTB>__(hKFg[<O]+BBqq&l=%d?NhaA(/?iF1Yn=hjpdUS/!Zod\D?_N,"]6F`6kaULQ!4rd]$L<5)<^i0j8<7Q[[roq&jqe%H8J9aq6r)ZQY'YT:2eI2Y.nBlU`Ocu>j-B;2]Ehbj`'U7r$1=mGPb0^\(p!aI6_D3_g1Y!r<o"0N3OlF+4.J?4;*?<02m.q7fF_q%Knm$e@?7k!chUC.[J,os2`.Fq\e@h,V2\)MKi'6V7QqI/[GbXGjM>(9NF!Lmp*%74oA\V2CoVSo3>jAXD,*sc]_jW/-2t3^]3KaB%.\ttkb'![^94&Y^]<D2(YPQj8)p*U*7Ul8n#O+7dLf:Vm&&mB\W=9c0&u<gRpFX`%Gt6=lR:Dp7/Z'8/,p..AE87@q?rffa*Y9IC%4%.G1>j)^qC.[k\_';f1eIY/gYaDhV0Hjrb+N:?jHg0h&E9mi-&N/b%^$1V'F4!:`o])<uX=ai5;ke)RQQ`n2\bVp>_K=t!78ahG%:uh2F<dP2\7MI"[U2[1O6L.J!d@Q+<b7O'+0<M:=^p3'4a^:UYm&gDg5^"m6e`bVbT6Aj_VHoH1f,l?D;P0iBRRd!bV0(#<F"9L_%]!>o^G3,d?%ocL)Be5oB4O-0h=(X+m$Gh)eAA\3\*p[Ch?dl+#WICAM\2Vo1(>Lr-.Wu9+?h`%d6u!;fAS0YC,5\AUh\!A`koeDc%Gp4-PltH6P&u-*b'YG/f<2A'ZIU'876SnFGYfP:"?3oH8UDcquBaWX(6!-8]RXQO2qP>Jar7:kAdcED=X2S&P\$3AeIqbmkm"WKe%1pONVQ`f4Q?sJ0('%>%9@?IN*DL\(r*cG.oQgOU]U\Qj8gW+Bg1BVQ@$8oJbo8'r)p7-minWU"]PMh!\U,!k&9/@$ILJ[/5WhYaA%8:k^)ZIgo7SVa*9,0>S;8\7,Z4+I3k.?-_MI5eKU>JT>C^bDQ+dD+2h@`gSQ^_3aQ[S]&e2Q`5+jN]DKidt[*jk)O'Ai;/&H(q7Y%eBfc[cI1IKT%C&Ib;<JtYY[H5Q;7*:XWfoN.45ip&O%1l=(gp&#BC2DK.P&I#uR?lE-U,$n^CcXa'9!s4W7Ij]S%dZc8FrcGAJR#%Y^<<CSb6P,h`DSA*FZYX/VCi;n1GbD?6Q0YrV.Dmf>7bXPYdmfL/qJJ-nMd642._P9q:WLn6b6GQ'"%TaBgJChI=k6/Sdgp/AMFh%HH@O+%-mNh2JjTd+oeT?XFiGT.s)kLVm(qLiEK+JIY@?$)p($s)k>L[3MH.tbU42Xp?VHIRmfY^bA'K/Z"LO\+PO5.l'^nl/pXL7%lfHE]p?Q/jHPUENHHV$r)9UX#[U[E$I]b+ir>%uYX1TF[jYm2kTAihn++rRb_oWB[\J+n^(5qo8FVhQPdBolA3,C0+koSoj!--O?%1#2\GS""'@7U)j(4(Z+,Y;*-Z)me:0g@K=&mEcTp'diM%nZ/h/]^e5er_<&l,`t$J+0&'-71C?B:*3\T-8^jdPZ.CaMroP'6Q/Gn%3PGqUFS`HiK%[h7#eo0LRr\q*dn#6_MJJt0XX3P-4!5*oE)?B[-ND2$E_#*A:d78olAeSLJ_;LqqJdK:-p,tbc>)?kY!pOfcH;_I%IXiJ0borJ[[lnC7mF%!RiO[\8o&+ILgM\!eFb(rq"KWG5R_E$.-'9q^aZ/umi4:Na55J=f#S0M%:_P8R3Z:ns-I4lR4o:$/Z.0m2%6"FlmZ?g4Z$OV`VBR1/sDqX#8YjL-C*`P@?ps/h%2K[]oBMj+MpE%DVE9EFjBq,(qqj]8U^W-#m?h@P]/-&tj]`cjQZb6WFn+5s&%OC66@$UND50*PXq],9URgoqc!GMH1+icNP]_kOY\8R-9)ipXPq:mT_`./V5\]ijVJ4n;X)=qFi*_l!$JoV1rBL'T4X1tPO=m4_>H%S>tffZ-4+U(Y4s3N$rF-][>dD%9K'kE_qm&rc3VYh,QuR<)ZNAbfjj!.eK_M-**ZO8.j#'d;%7-,t9KV3N*<+$t60Mqo;\UNhEZU%^9[k>^p7BQQr"P!'eEf?L6=\O_U0Lc_<.V4CSlHB^+HMHbB,'c,S2m?X)15t.PnIcE9#<jo+n?mP3t`20VhmkAs59j"R\CS>Dk3k%5m@H.358DGL@`_*EU[>LeGoE///ja\X^SRC6VjtBZDD)]*KcKqe?$2?jb+#rPKnC?:V/O,m>53*)S8qObP*A+MM:Anrur9O[3kB]%!/L8,Mg;Yi=*N/[ho(7uJdp8sm@@aT<Qq4Y@.$cnLO'LT^FI,.UerUQB-n_5qWfJo#uD+pR3jqjJGt7%QH0;PfIk)L$1&A&QKed.%8gCRM6G#1apI!)p)Std\6or9i0phdXi)h@8@`nfjV(ZS=TAH\EG?tfk"2o/#M;u=7ls)HnM[)S-%jf.c[&de=Uete"mP3?-6s8\!%n2XS(L87(6m=!-"eP1C0\sf;G#4#+V(\2)@'K7p*KhI^F2.1?hI"5/uF*-S9aE"8G"A`:,DG(VNco6RL>sBsceGl%^CbXZk8qC_6%LtlHeZ3/Sr:]Q1E@6?/T-oC]ZCaNAc+'?n$A6+Y,)\t-Y?.2-TCY-'ebO(`7RAOg'"":cq@c2;dNU5*;rQie;_l]g0i?q'CS'A.#%P'p%A^jaL?c[)ETn*42U.braH?q?Z(SAjA3mHc]TB5t=9brk1S>";_S:`^;P@N7!O/-[M`lm@7YjAj;G7Lml),ck;MaGD4\'VVml%hi?ud>;CWWXWbDPlFDps.Q6kAE+DEQP@O2.YHScF&Aj&u'$$QjmgBbKAIWu83a8hj-6:W2mJ@^XJ[QH"ZM(*rRumaAmV^*3<$1N@%k(m?OZp9+%8p1esS0$n2X$*u=O,?WuHMb$Y\NGXHT0d6fk0i(@DmiR7\@:MR@b8^BmO]-KjEY#5^a;kC"[c+CIGY`<U;"G\\:3<T%o^FdVKF7AK-6]neF[gB)3o@b-5+]k8[.##]B8,C>Q+[jEb>5lsp34FRj-p==BqHu[-hN`0Z[<U(n<!AGF/abYW`ES`LOlu#"@d2A%(P$BOACdOZe=muE=<qu(/OoK3_Se*pB"(&t:cnEJY(3Q&Ol]S@WtIP#pb0+fDBW6r-==q>`[k+(_'2XEo$1uj=t.>J,VP#$;192,%!g7IJI6!3VObmsGOT&(PJ6(a2=Qo$jfYNMND*Q=VI&<B-'@PSdB_DJfEoC$tn%W;?7I8?LD>7DgpX7"WnD;Z9mIoW$7W)!dln#aQ%!$T4V$1NSN1P1+smWtuQr3O$7D*@TS'GfMp93E=o!,>.tLh\8$rRFP^#EsM%)GA<].IQCkXLe2Vo'Jhhfc(Y:krhGgCAb&n>0<:*%fRuW$[<-6r'bKiX(<`;O&as[$Hr)krMie`KdHm[JBDS0s8&Y30p#e'&rULHV>q.<!eWXV[8CE4O_"83Bc6GCnN#q\PdfM\K/tiWo%9@CX]-qTmrAJ5C=gthN2FpgJ=4\Mb5HmjsXHQ:X=?kQN(D-u=n[4`oi^jF:7HAiECLJ`(/:\B21-F=W,,Q6@eU15jDMjbj`%HbHc%\7m]rNSQO^T4MAZhe_A%hdAFeqqa3$2'pikcO'4=)[>s)a^bClDsbKHCBm11q8kST4PgSc,Fl30]dLMC,C5@N2BrsJ_kE_tYh=n%%0.fjQWs3n[`Usd,&d=1K4OeT&MT(;!UUhKs(cB:$E/IHd]ecCR+foT%EG"ZqD(a)7;1RpI_pJ],&'\0]]oduRc?'3Fh6Edk:IX2l%7.L`AA\0I_HI^'38UZpKpD@BT?S#lNNlD250*hZ-j\bE>P?.9!:BneBW%iY0;>#6VC;e]*HhXAsN3_WJ!lqXU)Oj6Ir(2f/KA%-N%;`co.B&snIO#j:h^7:PagrL_',UN0AA^7kt/K2==?F]tMMc&s2^<NVLp'.Q0$M"D5dJ^O+7u<=CD!*tUnZ/eTT8id;neJ(&?n!l_%."3`,LG;;s2F&#>3-;tfl@G2.=Cg*47i1Y]`9TqlLB&PG5p8u`!ErK^MSjreJ?VJ6[mLHcj(6$+Pe<Km&$O&I5fLs[*?rqrlAM=8%Ea%G#)`op>VKFcSQAg8IB\tF74RS_.'TIp!:g3@:&pju[Q%M3-!(#ER;!E,-MR%M(c4IpppTST;,4<gq'^qVj&UfMUhuu]3$"+N*%.&t(d7OhV;Psm7OVs$Dr!Y%u+rj__As6%H=@p>&tQipal-8n]t$:ujSJ/@Q`L#/D<R\%b?*;OkBQKJ@T@@_JH`*/Aa?h]T7IN>&I%]hOEtIiI]taX/jYD\^^sfXHcm5hrc+77t:.)oDI-?lbS@kuiT)7N8W$pj4O%d718]:@.SsDQ8#7A%Y?RSDiHkl)'ukM*1K[qQ:@i%Z.3ha$J5PRahRhB&1RA52B#21_WNr/,FR785+A)Z[s4R;*eLBq:dh*VSK^<f_,jXaSY58KVG&j)b1]->iM6IC+=RSuM/)aLB-Mme%KT%3`'a$9mmH/a`=a_5'Yam/1?4M2TJ?nIW7_h0(KN?^cfhN`'k7N?pYPONcFHKhgfQa]$aAfQ_/;ZJm1o,NrK6QBNUMMJr!eGp&%$Dl:RA8GVeg)js*McK))S76@be=OP+Yg@ZM1Zb%sYu6LHk5O]@rRiR)]062P)Km\4/B4h%fX:TWTXV==#=%MjDV2h@6%,]E/^+3q%qJ2$qE2\2.CtsBDFY@Q9>PrDO=j]$DJ,N7AT.PDj(hR#S>G0+^(5>D9]#((hJ2F)JNr4bYWH_$834@I33\>J/NQ,QGCrS+ddHGUW%MJg&E4]b6-eau:)md:`ke4<5"Vi'q&+TtFo;'dhsdAP4.;fPquF)_ni*XY#SEU"<942YgiDU#$'`T%rR<5!YgX88-[=I`[)j=*e"%=fpF%2KF7'k6#F2o2uh0%'=IB[P0mA([oe"IJplA@s6trS:1@M3GT6DfUOntq,bhrEBCdTp-'OV?siQW[PlS"4VSP9LsPHYQ5i)C%LbO\]\BDsjo3qRi#DE[E:_q$'a$(b71IprKjlqYN]%#7f-udOGm$+KSc_W_&_:6Z.$mY$rk]eEk/)mJMF<OHCBs!u\&r&n>aoI5s%H13+LRk@]t1:7gHa#cXZ,3P56fM>M6^JI&7hH4C5:O^OP9(eX4,K$Puh/,#FkYj+HOH8;XMR[t^(L(iml@?ll:S'A3mS+cDdG#>U%`Of'Y*r>=Qn`)R?l_a2:]@hT:+)ZO(J&<9lRGt.^7p_5YemK89cN%F*2->6R1T9O[[Ig02&Da5$HiD@41[L3]hAkeH!-do=XVT-@%!0ZDY.2N[iG^tY[/$3O:Gt;8pfBBsI:Pg%t&2&r)>7W1&KoA.dXi3lN<m*7[%\m;9K&bYa*m<j;5g%%3G<#.kLb3Qk@=E%?`pA@D%d2.j)R%t:_TMs"icT/Yj_Sq5\T`-6q]?4*\[tLS09I$\A5._+^:jR'tP![Smk(.iC2FqO'O'S3?<M2\2Y)Vp]Y@R?F[^FfLN1-BY%PIWI2&_U&V,"4++gk9juEYe"Lf63C-gp\>1^1ffXnf',NLl$O!ipp<T82QQ4g<jophmK9kpME"bbd[G$caNIQ[sPH\o]^eYpb=d,%J^r!QBP.\bDG"+;$^iT'%$9:qATF:kqm2Z%kd9jiHa6Ufq#3.\Z0JcQj`#s4$0i_Zm0rq\##+MTnJt*FrbF>I)FkH/EffQ;IuVb$%<58SBVWmDMgFbG4JiW/ukFZN(Hc>;\9..@0e6ueMlKRqklM/c<[6(9TqF\m^MU8O1f*m=G5fks9g((&-5s">m0(qoKHDalFb/pUf%@(i"TABR3T-8DMI>"q\^^C7@h31iLBYE"Wq:t&K!kM,<V=Zq#nO/*)!Q/@A;5&;t"qMdBYFo@)Vbr8lc2IWq00K3FHp'jdPJ(l<J%?2=c#e+MI--Wo.5LA)?4me9FO1O>nfSKa!L0Yiaq"G>`ZX7pJV<u#gh95jA<IYK7[S8%Vak9\IWMb_q:eE2uMJWpk/M0;FSZpQZI%?O7oal0MEG1Mq-/$KdWa'JJV3#Z-#;+luaM=ClGbd-e3YeYS:+#8q-^NnG?/MNY/@OfdDMH%Ze=JD@n!&dW>*M4E"M"k>%rBqeXl%0/Sc(#mHL"_+?(C<>rs/!cj<:3AiKgJsoE>SAIA@:1^-JQ_29d7H*O0_CqJ*0edEB-r+nU*jpa^UEca2lh"[^hh^QU6t6fB*#-r6%qXfAQRAD%d`2KF^LTbanX1t\n<Ic3"D2[lpDcN`9dK-e7[4djnB,qHrCKducH(UP9HuP#kPc`kQl]3,lZ+Fg.!k[8r28X.b?oN21%h-`5ES)%I69.+6(HIU,_KDfIeY-ai8ipA\+ki2c#^S/J728-0:)uH,#p7ELI#iXS@LKLLA/-a3's41P,R.K5>CC;Ij3k\NTa5psd%i=Gb9SV=T^"q#Qro^*VpUBlqN;:LYL-alfV>,kMr1"<fD%@'m*pJ*g9SH+5D<K`ns'Rb?W,Ucml$,',V?g+'',ruS>QJQ=CeB#nP%J`)r"&Hd4AFUD>b&DSqc1aT"rqmB@;Z%H)`8X65H7M)AqCAD]IAfXVSpVDnTCgkiAQf>%]]7!Hk_'h\Pp9$Xgr;&kn0FIXa`mT:K%\%h)0BmLPj.FrG"j#5XST((gXU[91F52)bo+6:p!8_X&B`\m6rkgV$2s5oVqaWS<Hh_kdl`HI6X3F2C'6GI'K0N9RY0TE9nGE(X9%XglV@Ulp2K6uFiC.u<%)s*-&4O*SB-94WV&Vr*QiH[4Cj:_sA%je2j4G`bBWFNR07GUZ?G=L'?m(T25J1K&<s`2+(ce6#]qWH,,L%gJ>RfgkRdGi#e0c0q@0!S<U]9C<VbA04n0-jXt4DZ@s0999_c6nrs-rG:0@p1m)PC9ue2C(Yf43+A,+-n7u#J'im`/R%8m1TKNT`%5=lcs0\`9!p<fE*;:8tu+??=3VelU^h4rF#(401U_FFcLJPG;F1Il#]:9"Kn_Q3Z3D:DC?eb%Uqq$X&D(=*qYAYnOubshI$?%Y/m%I*Z>Fdd.m30Zj3(o:OdSY;;`![d_%+Rafe%:,n!B=O6Q5F0*klfYQ7YnM]SIOkXm>-#%L\<7o"p#CDbb+I2<oXO9/.mU]UCOp\:n%hTAWX(MV4%:I3$dUoIOciYc*7W\G6?a/+&n%SZ[r8is7\'fBg4P"Q"0WY"bU839iDP#A^*hsO3ke0<_CkI4$B4$t2CZC!n8_R.F]%\OrMtmj"SXMTAunnljJ:.5[oYbLKIsL1gWUl;<Kp2Uib5;.;M,6j+:,dZt(5?o8tZ9BH\P^\74u*r>Wh'-<k?*$4scL`C^ZhsAlV%<]bKjUNq*<^Mt8!FKrB2>O],qhhr.b_u!BW`I!ec=)Lh.fC(Xl\6Za3jn@2*:AQCKYqbc-:AYdC3G8:/QhJ]Y96tIDZig*0f.lkV%eM1uZ^oJ*bEk/9+(,a(,M?9jtqVce+9C:*6QRZ+P=]6:hI]5%Q$nB\5B!:mN_]K%)l_%]sHTHRX[[tKXeYWWBN(P]+gq2&tW4=Fo%A(r"0F;M^AeuT`9a*h0!Aj-GedCW!qUlJ7QEi$;sNJ(b7,1O"(B[Q+nkt".;g)Z&&nB`WI,l<qdr9T!u55JZ/kWObpl0-hsX\Ka?%@X%=0IJ*(Uae_*,@ft:!G)jG[,VoX,bm(1rg*K<=[!@I5>4IYH#gL-!dtB'e'cPO.:GIZAUh"TbZ:bGL@&\dL4uX7f:8EQ^[_Wr>%=A7.T(2`B?')'I`Y]/i\RK)02AB\Xlao&*g*lE&K#5+J&kipstJ2Zi]US)E#RB+p!_&[IYj,S\K(2Lh"2J\fA^=@7Um+SRI]5P5r%jkI5e`I$1Zn(kEZ]6N4bRAT:dp`cL*L)hd&34IrZ5M,7!qHN-O79Qh21$M4,jN#t:K:_h/8eeA>fK:TodtVm%k.M0DFJY%mkb+#J%-de+]MgYWPC$#Q0Sn).E]"`'?FHB$4&K%;bf''j5=t3[ZL&RoDQk;_fP89AMO$>,(@94>")<1\JhRW!oPpG,W$ht5mi@kOe5DI,n%+J8^K+:[b;d%C_I!h+OkDP;d`HeI-8OdT_aP7aCKX<MNlfZcGcO#Z=4\[t#5m>WT9Kc,@0[p/3hfmZCo.kI++&u/@_B(Kol&TS0c%V^kJM9tKaAHX3QOYAjFlgLl9!'pYAJI&-??[boliMYPb-X?5QseXHnP67m>=9O7%$[Ff*QOR1`6"Xs]47>,>+(@Ka;228\;n7G+t%=b1*oh(C<6NR/E)KkkjSB5jnOM.s])$7W)9<70]'%s53BO\PFb,[>B?**l$kCst#e,=Nq(;[uHu5"E;\gUG2j!C(1m!PA,=Ks$;D%4Y#(m3TP0Rc^o2,BJUB$EgWn4U!F6ojD82.AKNt!$Olp;[[n7R1U[+f9UfFTIFq=)Ik']GIX9Nea^7r1e&>R.3pf$$D1s&f?aWHS%9ls!]]i90.=jAIV;>BR0e3(+fA,K=nD*<8#(]=6!q;(gjYOdf,b9j!tD5Eg+4PDoB:G!foDD*7s[!.iL7>'F8A7PA#'E)(G$];4$%9+$Bfh*pF82jY8C[(W[\]Y1\r[e:N(S*Ls8lRpWA=CTVE&PPe7O*CeqqU[Yg!XmP.H:=HF:EgQ\GP,4.;nU!#$nXX<oeo0=JZ$DA%"K>sa\rmPi<TpD"_W9aS,Xsg&FQkr42t_F#;?.`OYF$79M1$\!&@,O[&3pmj1P05:ph#^TeD$3@kWL3mkuX=7@\.=t6oI%Sm3-(6%0\0[:FAF@m1CHU@>!;$8gO7_c[Y<X@i0'BI!WI!&g>PRGFkab_8YE'];FF5Y=]*uF><?/sTo&?8[ZB1hV+&LUn(VZ&[\Z(`5$IN@%'`f-@$eh0q&"P65IAM9d@/o7PGUZfD(B_,aZtRJp_C[mV`E;_:-rI-@(]nO4fet>Z_9,!B/lJZIB.`D;S6h],;ARIq`"9UoBPaF2%#.IQ2&ih\q7kU;L@f.(;"U6^7s-rgPOHf%VH5gJ&F`*6&(qI:"+6l?""RO7l(taGBo^Le,K%j4)b2mJ%-",T<<"$:GD:Km(9l%/Q%qtA1j?&RfMn(K>UqmP%HSGW1'4\rCi"g_Q?n$=*CU"@=F,4[\i9cC.p5POE-q].BcWP-ea=u5a-BY08j$^km:-WrlO1>@+5IpeE3%Z&5%3SBEX8KEnr-?JmFM>F'Xtd:<>L'M![o66K9G@"GFpjgX@G`lY%?de0VW,3)]R%CD%3+9lk)R3)kL#tcp5e2NPS[NCM(MN/KI%^&f?>f"\>hqLb2]1D<:T-(>q"n?01oTtenqACer:Tp^f$!,B@#RmVBKT_?l^\#]CET#&&-rq12*Gl'VH=muB.bLrD<-dKLF[IZ3r%Kqf9fI:HJ1&A\8*gWI0m\U8/DEj<tP.i+mX3fod+r5ta@1Us_m840kq8`nfLY<fbjK_1)/W&e(I\01c">-CL6JQ1CU=b(PB0.1`$%r$uX<OdMK.D6%!uBE1\cL_nc1Mq#<`m43Sd1L-Fa"aGKqN_%R^iA:E.kLr=!^1@r2]C-WpCAU_P%Y*qQT6ur3?abnXq3GIJ_3I)h%=-$6n3_8&:`T(D(keT,RQ22t$aHZdo]iZlNc@\9pW3]=B(^Sf(oZ3E6C_;-3>uW7Gd?uB^IQ2C2jY6/qUFt(GT2CT=`rLti5uKcJ%n??`$g5qaqMBo5c+L*mP-pT7jY.jAZMoEuf)13j<,9:Sj>:S4"[j43BE$m4@DPE2J0GDT'G0e,p+o-34*k=n\,`:QVBdhZK;Y?j=%??:,ticln5O$>3G2+\aeAacC(kZjQ)&`ISUN(^:Rl\6I'WfWY(TqC\[oMZFjZ_XJ0cW<I#g4iL7X7n8@#o)1p$nj'C&Qnu)>)DV`%TB5E=/k+^biE)$SFs)ntf!.pu;cfd7=r2NYO%^:AH%%2d7riYnJ@hfNSo"Mfa\AHH]ITdn.DJn,C`r2I>uXo:X`>]fl?g-S$VO@`%[dZ58&!=l#JGcp1=l.oaFH/WJ/qiK-EZrHZ?8+QfCWTBUhHi#sG^nBHJD+<h2L'`90R.s7f\kTI_s?#]5Tn<pQOjA1]nfEdlb.\a%V+^(K6".]-O.GbtHkT=l0D<dGjI`)kDTh[p>Xkc?DA-s36]LH6XW!W@kI-Es=(ar"YaFV-r?"IX8md`:HVXJ?$0"WYok:@J;=pc/%3"pF'7qX967Gk?eC/1WkQX+PO7\]90QSVi4[pMCjVMK[/,4@R2Wj"0?q3B?.1)YP1jGpM@VY2`H>O1fXgi`iD)NKXPObQs(JTfm:%qifi<+"gV[cGnPYbqm)I"Cst@1UT%m8o_2&K^F:A6/P[p6\]^)0r4<k@YB]98P7<NA2:)_k\=Cn5#jU7RK:(s[BZK$h<nA^&bSBA%p0%#i4c5ko9@5)r6=*^BMT^ZJBj4WH2F3Jt3Go=]")><>P8K]++*!!MchBkDqaiZ0W"^e[TO$l:aW-",hq=W_Me2gW,^j0JB<dIc%,O?]S(Y`oQ7)rDM^>4]cm2T@cH?JM9]f>8*_SWjrCZD)8G-.:>]66pNHIL:kW:/HONSV$d`bsNmK=<G(Wq`aAHU[':X1nb3?,?*(%CA2@oadi<j*MVZMKRd[?5C:DajL`oFDJ&o`8"$eBFAe-*FAei&/nB*G*&TnZToX5\]!k&6iN,%<%G6hGE:t6:W%N`H=)QkOE\[4_%Lo)pNN8.$2<9D^#,V/E,^(0Vg>to#EK:5&44tW^,LYWE0c'TtG7<TBm0@\C8J33-uRFJPC(I`aQ.()@<$)XI6o`9T<M/q/49ZsPK%fhF6J!'R2U2Gb:83;HQ&*Rs&uP4o'nZ_:qr;:konY*o>O4gpV;MRMEME(eBG<Z2ob'FoInXUsRC:V=l#4iAi5&%59]T/CI'g"nW'%h=IOo4Hm*i(Dq:0VI;sNSSPr[Ha_TA\*"^GcM!2QG^%HLl^Tiu-dfWjcMY!R+mh?Z)&'sR[jn!FdAFXM@/J1HRJ9a&5N:h`/JkhU%B4]s'$bX0-e6*KA:XTT#kHjYj@eT)XUpt_F"?5p^*aBm@@hF16YfP-7^)1O0EN>"-Z:7VA+UB&U>R@42!.POW]V#Fj?3+9f)(INL%Y1]/k-tkm^Z;E"ViquAtQp$ehFnR\PT9F+Pod4dSH$F1J'i+3/J[mck9ePb"V&F8I7D$ZumhZ4L!=pfu52u:!5e=Rk'//ra5=!kI%F)sK)oq"J'Rs]62gXC(npC2YbhDG=s:YSA.qR:Oji($=B?Z3FPcRs(*qUP']5e,Oh,#Gb44!\B_@'+H\RRld4g_hZk$a0J-q8R\i%+b;5XdbIpga@@e?@rka35W,l=3btMNFCBb[(S_\;euh-jhkWG8""M-4B3`#ME4)3s<:7fQPp8AMM\`?Pp9(CZp=:Xi3lq-j''3)J%?qZL.90dZ5n7B`K'<7eR5ilZpi-!RfRuFh4l:#nt=(*@@4>4o!%CM;bB]F&R\UC[;X^+9<e+Y2fOc)!J]^k7f6jOO\Nc]>O(9T*Z%\m)R%AK-l,\#j0!$FfAS[^fZO\_m1*ToF#-Cg2`<)k2$1'6&u.>Z39JME^Q[C:2Q,b$IF_O?J:7W:<;[?_IcC6[Sm<0QpP'ZI@!Q%5YDNDR;S(M(]?YGU-HH@n6T%,[E*'^C'MG06W.H&3LcKOoV7!K4-VC2%r(\M!nJQZ]K")"Z`pmE/[k'jY^K,C^L5ES?q-"p]Y^)(%RQ-&pGrr("95N!o"9'Y3^Lp/Pk,7^A@oWfn2TQNh1^?d/\j5M?g^hMFLgOF]`F?C""lBVe1N`o<C,X=F]A_W;']K;e>m\#PFXYpD%!#JCFpe;n'nqa$W8^6DU`3ap'VX1_XWO)<L0D1i2=UY->]Co]DpFXBNP?Ts*aMglSZ,-<\__:I^Nkag1gUX?NosrZFZB>/Hg$?8a%7sNF:3?<A!#\t2-6Y+]Iarn.e07McBk]`]kh((r_[+"WY%1qE%_T&!YPc?plKAkfJ:EdWi-i1;DlM-R#]-5EFC7J1]hH1C9M%%id%E/5F1k9(unQURAE,q7S)'ZqaM7B^[.kI;EWL"EPq_?R6MRk^sb9!Xe@QI,u_p60;a9(Y\He6GUeOFS</pNYhVSrA-ff)BoVCVoH^%7[D54Ni+GDZ`dRk5Z@!W'mL%,cORTdB?q2=3c<ZgaZ"IZ?0733Zp*(c?6lZ!QaD4Ak?Ppi&Q^ET$s-Fd0;,pdDoH4k[gE&FcaHFd%'ekr2oJ*IWZiW./5;UpMZG+H"kUO<*f<O_+#T5.aM>t@F+2flPB)[!)NKW`>e28$'b*)9>W6pCZiYK+9Mb@9W4iHP7jMPUY[P0iG%VlCD!j"d&`07o+C%R`TZb+?<F6n=(Z=L!>J<*"0@ILW6]g;QqGaam'$Y9<iocH/OC4/pXh<d2;lccaQ,W,[niatkIK2!XA@L3%U<%%f^J`SkFNJRp>01ST&l/;V3(8D2#7Lf&@4HAM9il[Oh]X^0R5%^#2#RGqQA(l_QaN`3u7-C^Z)UT#=`X>^2lJfh$ZEAp!nh,U%jY%Dkn\-A0DX)\$UB@:d,4daJWKBNHaXCY(6C`\E)2.]*+nYNO"Gm-'':$aIEhuns]]H\0qoY_'pu(\A)pJ0\^>+!iFO`^\=ukNlqf&%1Td,+6=M3XTH$9\Wedsf/YLY,;mVBPK,IF5WR(^RRO!n2;(*qHE,UXU9S,_>iR-J@U9k$BWoiQ(r4$9u^jf3bo1ITI98b]1l:/&E%2Z\F^1ABhSH"$iY.BBj\B09a+,^m-2MkogMB`\+f2(j(1?1VOl[XjQIh__V8l1KsobXk[X0sbX&BO-b^j[DH#3<Z^f[a--g;&^QU%Jf;12_!NQGfJdAnA#Vp/&n?O(FbaVOrCPO<f@ZbL]WY6[G;>DD;_$@o,LO0.f[#u6j`T6k-,;uGH?&;3md*i.n5[CF=R8;&RRF!#%m92UfH@+oqi*fH>'HVAe[J):RLC,Po)E_fhOX=)F4@@:8N+s9FP4(QOmC+7Jd9K-c=iaaRD;W&?E3@Q7WR8[n[1Fuc.#Vr=3EJ;E%1c5X$_Q+RN9tiP9`VEm[Y,RYn]AK59%PI4=#7-<+"$r9$gI0+\D]9".q/%ngT!N,Zm+LQiau(KMY3=`W87MCd/\3uu]gEr/#4f*&%-W_r^qA&.<gd#f,]Jfj3#IQF>#S=nF/sSk)Q#:.cVUJWY"V5UJdr\DeW'/+#A6*LN=Hjms_'7'T8ALe;=:t\Ua=<jBOe8N^_hG.F%RnrSLS$)E%.(*-dod]6E71r+eEM\7Zkc;cLTPcX-W=B_$8k6O0E6SgS@S]hu!V%Z1`aX%5%gQYrBk\A6nClm'HHeN*]#u(aGe&<_%AkJtD,F*Rh538#K3/?LjH&r]m2%WY0]-ah4GJcsBc#9).UU`;mjc<;23S.A><)P>G8[1NQ/B;r/%Au:bR\%:@8Q"bW5-k,]*@bUN%<-(/m-,N"s$0cP(:'Vn8.B5FHJXgDu%tq93jOLo>:?-s1?2"Jf/LltD<.PD4Hafk.E?@GYXVS0F>kZFFPrD;^<WK\5Op/A=GuQg'%#J=pZ6;hI#;p/H`]%.YF8\%aV"V1/OkBUn"JnXg")KOFC&skU&GAs:Xgag'[V+?HOW)MQ$)="Q)pa<Ic<19^(s$3K(1Pa:/d1p$d%LN@[IVC<pZ`R+p45GY8+iB,t2Vr%*Y+&&hU>@]@QQ6f<G$2Uc"0b_QF)[_4i@Od=dK!@"Whcq#3D_ODIao4DtH""#YhR7hq-MmmS%7QEtY8nRf35-M$.UPW\_\NjFnc:NjK0Y1Tu6\&Et02O!Ea'ao7Oa9>mh6iX#5?jWZ_P0,.*;6>DQn(Ob^3;JtL'Z*eS>uAbItSA8%C/&A\=PC0/j9NfGKdtsT[N3it-_4tk+u>A$_?X/lH*k$Il_7`*8]@n9#uPbQZM-dYq=?j4[4#FYh4[(7nSaq>@4cAZDt?R3,TW^O%(DF13qO*K_Mfgcs:p(U!_[R%U&Em`$MK_>6,M"<td^W7R=ml!P6s)47"&KN\i?&ZpT0UWS.j@6e(_J=<%D4p'E4Gt:Gis-OZX-(q%<NN>`c!="q8o06,F35[4$GLd$AE9`6;n2HN3,*ZYl^P>\iS2q]^&/31\'BS"$e/d;V@Df=h7#_"l7$nT#Mli,294I[ki^OGD=KgQ%iOE'lb88\sH_k:r*K]d>q98O^)LBG4R;IqW(EK'/:LJ\LH;+\@^UC__jO\&Q!Kqr>St8i#`s?O5)^ji`nmUNMSmb<@8gN=k`,Hfa%-3El;K=<7b82L;tW9[V.4a@rC'<T)EFn+3e`Vi'4MUnjJiPKCcN;J5p$f8.3]^70S/8gbXber%R/CmOR,Mt*TiX]J+)4R&!NR.%u%Z(aDA%*KH$k)9.XFofoin48n_SPRS-Y!6>I21C$5jZ2eUVhXZdkjdf]RFAdjfG!H@M6hLtf3]Hld@<Ju2Fka!#J0\5X(CmY6P`YL%@Y1).(+#B1c`\7d.@!-h8h2b%bflo<9b#TcPOr"UMGY@Y%c]lr<%)UkRFY7Q?)Gl6\(13=l7*6IZS9[UVTt65`\CI*RE2R3C9;S:%fkq1s=]\e-!(hd-==5jphVb11#s$t1(@:XNB6c*RBF;`@6sT!dSU/s;PjH&#a:@oM\C:*:]Q0V%S<s4[<3GDup(o41F4m/ra9Tlb%:,I5]:ke(a\,a'R;un;fDudTq"kWqmPOu[O!Xagik-Mg"kJF,ub@.l`8Tcne*70"n9OEAQE,]AF5L/U8HrHNWJ-U2p!rNc>*YL4^%#P8/24CuX#b>$<@NsS71d&&lF@M,IOJ?EbP(EP]iF);).]e,%5l'tP`G[90Soul=NHMNNUIf0[=CBC)C><$g6?FGP07g`U3>D3q#%6Pred5JNqXKQ(9dUX$qM+AM5T^paNaSK16@0*nN+kZijQ=TKjjC68j:Uk^+.L!P`V>D'/?&+]mT*1/Z_bhQ-JHOXRiqfH>I$lVde%=;l7D:)/Q@E/YfDN;ZaQAWAnf?625MMHqE:Cr-+XeKL+BrJ\^=5s6cTm@q%5:kY3UIjf$D\#"$pSgO,`^b>mDcMl==hL<pOc'LmX%VriW[lHY@XD*)fJ0$ECYi9Zsg06\AZe)lBipS5(d`47m@,H?g"q-*d+Am6?A3sjD"%__aI]Z/nYD.8/"l+OK4V)7AE8K^>spFA)6%fe/KheCr"i%P[+BFV[Dal#$'WZ(38AQ]u5[G',>fC<]+FCG7OE3p0+Q_R:XN)!q2J1O/Ya$)oB?,iK!.<^8pAM@1V[A.P0<?4qG^%%l5eP4itZ5Jjl5NA1D*Ipg"A[,=?))Uo(e#:6>H;XWQW&m6o9`@+8n-]<X""FW@_E,cZC[b5hDh!]>(231f@hL+lPJD%S=8A6#*\%iC'9sieFK#iTn3)OU-ZU=sEf4QSITm0ESCpR=Ph&1^)gH*E-A;gbB"'JF&YUDuQ(B":TnFR)Dudc-J8)QVR/D43aCRLTV81`B9h:%+Gons"OeP<8;#Cp*4HWlTnFOEd*W$88SFKSrVdBX$=q9Fe?8JPg9>",'?m6DU.\L[_(7A'jGh3Ol4Lis.n81uE[FAY()1Ml0>p.Q%V$,%iTa062S'rP5)Y)Y"Ncc/i9B+1&4eTWY"s>BqC)=a$2(0j!l:l4tArU$eRgJK:"R2e^2B1@QYWo'^O.@NEH-JEa6u(`*ZmSZA%DY2SP0b\:F[(.`No#FC`(JZcucJQN@ISI1*D;5--/p/=5fRZsSmoTY'dZ,o(%Vj$&f^&:uJWY9pJ`F=Q'Agb/IB0k)Yk_P9GQB^p%%;Zg9!mQV%oW3;kQA@,Z0*$2MH4WmH,MP^E:EgPIhABshU)+/c`@qSP@[N\AogZ>mDsTX0M'H$cYh%iI>!B+!L]eN9?rU9e"N#,2%<5]r7U8_8FlU_BgD=O;@1b.jpc@3Dq5):%L=sETO;+^1RJYA4,93rW/JnCr#6rH@KW&7T^?WsEoQ;B%^R504%hAK_]TVg)losKN#%)6PVHpEbZAc2K0^p?Y'9V?Ru0NS,)[R"<5Ip@YIJHEZP,NF3h8n+p7H$X66`D40F4[BHY"kHlq./CZ\+!PFPBH2@!Z]\:o\RH=>>%k13#ic)qN2S6m5G3Q!cGN&eW,&NAkJM6hSa_TY/<NDhp6Ka[/"TXO^'GBAbkj@Ul@"%DXG!6rjl)?\c*#H=!.iqBGVOY0?/Ah9P$%iGFq.D8q/_(938G5oQ`(R#FCKGBB3\"[t+/K(q?V^NA^SF$1e[I":?Q/2\2HKlM14fsMS']r6R"4k4rrQ7X19%LD\8r/(*h_DTsB%+C-;o;:O5uUJFe.ilX6T@Ld?K9!Ugk4a+/jMj"o`o=kXd>mDXC!;<J0=-UUX)I2/ERP,i:e\QD>0EW4^:jM9*!m"9&*0^o=^Ifc1%?N^:GDe.KnKeX%/"X]!,n:T3j,1osKp$;dmPdcM&%M8"Ydi5Il+]O9AW^^S8$[eh+O8F5q(HYQ@0,MZ\B`%BZUh5\C5loZa1Lg_L%EFjM[8k,@#Y`<OF:D`UTSMWH7hDIG8]OuUME6%kZVVX'n)nBU52K6tJD;_Q7C/22Gn`1tQUP=)P3Bkh-cg\Y_OFOWpF[o[7TSs&7%i9*:6CscLkiM@ZZ/_iNP_>sI7^IsZq?T(,c9X%If2?^Mu1/28h!6;SA&]7f#dG%-@m2)FU(9&d>4_0Ki0F!Ul1H;W;F<4,'4Gk=-%BJ7ZU@crb)AJ&[El2bSj]1K:^HRIHs(0bHjFD3XOFNKc"Vhfe[qcU@<)8VaC)&mu%_i]T#8OlrcWTO7E]Ucl1qa?#5iK,hq:ppkn%gnN'rh?,G$rY]+hQTa=_abXnllGQh1D+(Tsd*i4Qpr>;'^mmW+d9g.n5@GD0a(<RRK_F4Y%`WCU#D9JpKYcCiU>+N^OrrN4Eiu+K%1q&q3fQ'uSa[>'hVhn&=(/BX187Gq]8q>qcZ@^.1cH:a?fbK[oVm1;n!X^iek$Rr<AZ9l1mP+19m(.16MpO-1hZD)a7B?R4BI%D\%G_0G)X<-k1!WjKnakXT4IZO`di+n4Zq&\Un8Fd6o+IFYi'%%/m#9dr^`\Y?P]ADb>dlpKnS>^\jjgboqn9(f8LlI9^#Yo]T3dTZf%M?9d.:b??-b%E3\g#@kK@qKf'8#B2mqB85LBC)cX'A2li[)R<1._32TRIXQ@Vc.+"-58[bF%R<rhPB#E*hG9pm">nHp5'H0#!lt+%O62=Pq=id"@`,5=P=$?g49]kh/_,\i2`2!9lX<B8U+gnZ36\Y5=TnJQ+.(Ua-5G5K$IOOq78]%=2mcAs"*5Tt9/F@I.B/sBq)dQk%/&8p""u_pU)Dlg'6MR;7;du`"GH)4,Oar\'2E[$pM9&'V(9Vs>@%=7L3X?mDa<S<MkCM9gfkGoa3QiH@8Y?oCXZ@!^+[mHt(1LY)%F`t`a?s\OM5c8=ONV;3dOf.$I&mS7)<toW*q8O_n%s1B;S0cZH"&2d&^[?U.P!YX&AZMc>5[8#3edojU`HT"mdGJS?\UGFbb9TPY%gij7io4HkSKNYB.k$l59gkKMsCsP'X\Rut0mO\NLleXB/SO)-lP5AM3:GS/I:H[CjodCeH@,5`Eb%N+$\\6:O^-n2;T<Unq-3,k?%KZrU\AmdD18daAj%pHdPE`&5^>;)Xl30W`gcNX445c6&lKLJB=DcYs]TI4]QoVF[oqK$+P"FGka?sE:N<F@uT(F9m]4H%&Ggq(AN%IeW>lJ,OH]\=@f=G4G-IC4g]d.Rg_HpNkiEIsq"<aRWtfT'h8o">`ulR+QPXSmd0pM7laK<$uSfj[;+8[(n<.&Ko<sReH9%HS&8F%M%;SujZq`8Bluh>5WZI]lEX,T\hLdtcn81_F]p,qI`aAH^O.gQ[AeTSGVc%_\inC/nL_Q$2tUQH.`J>KS-'\tCJ=;L%U&,e9-ps@%q70&HTgS3^pZ,U>gl.V$:sk^-'Y62aTcAI`\3`Z;K[n@Td6o!_NjX".\t@W10tluGp88,01t1jJ;#Go./(Y^U:Z[:hQ!cYEq]tVD%h_Gt4.V0pS>`qHeajK,M,dN0-ZrBHNrEr-t"XmNWg>8O<`))`6<Ak7r2G_ZBVOK`d?)pQt/[?&lNZZ]-m(Sl1R9AZ8c\>5R(%sm[%]"5a-V?_<<+'??/8#7XI/G"<WCFQp(@-X'jd^q7!>:Hbj[m)^X[cd8d:Y;VY\m6hOLULWhN8([<eQFeHQ%I]Nek3>d_d9<-m9/d*%$?"Ou?L!R$T!XH'[At>&I<P?a%BtoT7))m0W\+8C@,6&jID7Gj>?`ecI)n5@)HcF,:Z-L)Qe6!j[P/%d/l@_K6<%L-#$,Ahm-%De%J.5Rg@_.F-ZLhJS[REr-AAM88J.pg6mD,r)Y5FY=d=?rt6n`^1bKDD!2sg]-q$$B5>SPO#&c;rY.<0%!BN@jF+eQ$qA?sIaPM*FR%+KT+!e$Q#M*#J]s"BZ>"THd@:]i.4)kFmo&%qV2iDL`p^I1hRn!Sr\pN6o,>R:S++Jbtct:bL%s%[Q,!YomQ"cGE?@C8/Eh=h-h$%qos4t?aPj!PA8Ha^ftE9_V"u4c'fOCFAfji,7WaZa3UIYliZJ@KMS?#rR.UZ('O@?S1=@BDpZcd'M/203'cb[!?>+NBor2$A<#FL%o?H[K]9$5&()bkun4SE?*n?1I4TS/rF/mtTQoHuLo563u;*/3f0Ze7#/"I%e"q-fD_dm1?^>*DhdIteMdqHpD6""Mr/k+$CN>Hit%jlQrCoCi^hmNB,n&O4ZrcT'SRGVnm;b.!d.qRl.bqcP/N]1tQD41k>bbWEZn"`;\Gc7b*UK3D6ClPjlGLH`j$q\!9FkV*Y-ciaSt%-+>!M&*;ebCFkj$EFI5AFIQ`U%J[TE!;4RBKm.0VXK+"jO\T2r@Ks&b81Y?WpboWqPol[Q,'2K6+`fXR$-Tb'!Y\%#HE`l-]>F-.%QD,2f$7uVEp%$,%"#?Z-EVg'1p*%lO`?*'\iW6e=np"ZY1[?uHAi20Gj46AY!Y!8?cPo\0IkD:D'B4;IhL-L@qN_$F+hE8QAZ]CJ%Bko#Z5hE%t?U(,2PdMIGS=!)q[uD9eb:]DcidmY'`P^Q%=8Ctt1FnF()0:-;'QNR=rdZ!\j)#sGjDXI?/cY03c+2.NHhk]m<MoRl%-"\15Cl>5FW)kC9?)B7$Ol/7^]?FiHK)O=3>SZ\I\[IUZ]Og`$MV^"Ub@G3CLm`tn3TS,g7]WWd0OFRu&q]NYa:f+-e30Qe)0fJI%'">iN1gSooJ=$fY9@S8QG!`PaYc9jZq0AAlX>^HiW\):7:SLJd>,*"FfMt@t^=7LR#'dKs=p2E/$-^uIZl^MXA/Njd0!,DT+pJQE%M8qEhe_Rb<"A$3PEN"0'"V6shgE75chEA04A3;Uj\6,Qh@G6tM,.RTW:CjAcYBS_SV4p<3)f04hGhD!\46iP#DQ!iSZT-arQ=*@.%i/Y0Bh`^"Cr6UD0mHb^RL2NCl,<(R<MVX:Q0lG1-(q=E\4QNYBSX?FlI_#&7e[1qH,fo4IqRoYnoIU1c%7i^/^*aq$Bi>;X[Orc4%"O;iRo>hP+>M#h:MaN?F@@#mTm87WH6KZ)lqNTD9C563RD46=aSX*jj#j<UO^[RVpLI[ae?H*!BBr8&_@^dHq8:@E!5>S!@<W<7K%j_H28?7=:6C'SgS,KgK3hLPm*C;?]C>]d>2O8D,S9'0=)*<G1.%0tgrP+?bTA2u"XZF8HjmOSpa#X=UDb@[?T^]!YU*?El.$3ZpZ%AOr+2M3-YJ"bXRC[q>Vbr*j<CKo2)WqPD#X=eq)I9KVO=fd/E1RpR,F2oG:4>s?=$l#"YM4nZfWgSf1*qJMM/_JDI6-<Eid[+DM,%qFtK>ROUQ#0%[;H[k,kA9ErQ`e9=Wl^YB,8%)Kda_9A_53'!t?KK]N.LNJ%P%U:D'%"9(jQc?S9apU3-*6J&5P'jc#Z<\quL>$Rf%>33Kr86?4h(#2Bm&+CJ_p^-_PckU@@"<g6Q["DJTnm!CB"C5_4DZrZ8a%+Y8Pid&o?-EF6oFBJl8;O4l*"#_\^c,Z(7WVimaM%+<%bb[j#HBn_Xd\@<5P)1P6&a.DqQherLY_cDtBA3\EG"YV)rOTX#q&6n-rUTf.%7%YiXpGC6]P.LpjE&Q'8*mJC)T'Z-qq\jB0tE0`%H7]$'B`7`Am6E?`p#\r`?-9Zr$Tm>fWS]+Yi$5O+>.=)]Ihq)(iB*bZeSc-E3k7*uf%DbC]1#sK]oYUmq[A/d1)p/Zl3,)[[,d7V%,+o^bX*5@^9a$KqeSoJF@JPRjE/8TD6@h/a,Q'cg,gldYiWG;^b&?_$:85b5ISd`jJ_92,]*!1jXr,Ag6_0kC-N3IsFQ974I^Reg%5hko]+3sTGh_(Pif=u1H\9WciF)Jm=Af[64np,G/pYqUmHi;gV?^'jCMM]m`e6HX3>Rs"!,1JVHR.DLqQ$?#rnKUX]Y9L$NI?4KI%qF"lrm@\Z"2Q542Mh5TGX!Jbl'"sO:&_X&;`/l_ZPY\e?]fK=3)/^B_Dj.t%p>m_[qf5:G!?u.Q:oB!q2:3peI:c?^,XAb.PXeTZ%E`8X%P/cIqn4iDJ8;`uL4)o@?f05H-d77-LL'q1%pg'Cdij_Sl)F3-<n>+QB%]nrE_OF*EZ(Kn1R:>4uD6485'C7?ElTaY,dTe@2%QN@BXi=#ZAOA)6$!s7IF6a5ctcP13RVD6`E9liQhHH.-6iHIu4?hX5Rie;"8:Up)SVjXo"-S.s!SXJ2XX17DFY1R>;!;;Q7bef@j%Hk08o?[P%kB#&CrP:uQd&D'ETEBC<.0cgrFY3.m:"7KXSM_YQ1Q">e@678N$!]''a>l`q68;^&J8dY4M<F'b,If_1QPsGf2<uP&j%5[IkeV<EI!Gd+Gbo!;r[I"pfV<JWs@9Emn"_-bCBGRl#ApS$$<p-73dJ=kD&b8'Brk(@dZ)q?pe?*Hf9MCh%UHng,aD,(J</;@rK%KX^[<rDMaJ;WZ.T>;Z3(hYK`HeK]P`n&ra]+)d]k[)CB)f6-i]KmmA*RdDt\>g/Z+E/Fg$hO<NW^MQ]OJ7b-C1s4&Z::9J)4-P*P%-/C*>4E8O242*rD:Rpu33e$sRPh`q.Q22R*mJ"t*5O"K%8%V,VRF+L46TSA)p<MHGr)^3^9TW_[)$@KbUJk@!Xh%S/nK//Lj\F;M%e0+Ag3$''hfVK/X#`FWJcZO9`r?4a?UeZ&1!^n<iB^q5@;Pm3h[$_9!(.Kb")Uoh@C^MU@SH%'7N>%ie:m]Bp7")j$(t6L@(d7'k%:arf_%PX?_?76?G#h_nlce0t:-:ButBqTUtQJ]p/gC[YmhkV>//L&R0ihEhN!g-TcUMTGL`!R%pN`dR?CruR0.H``4ao^`NPj!@<%*qAPtqIq6JJ_!f&5;H`Zfe1fRpg?$%@9srr)sC1hdka"0GAHn"k$1'Q>I2Vr]m48Ok00$Xgn&lKna>bI(Nn^7hdo>;D;a*R!L$.2%,Pu8PC\h7o$?h7(oJioF9K4Pi;5^/%]O\Umb!7"/3,=]l9YB1R=MV.;jp1HZ8jFPd`[Xk^+DguL/^T'ucpS:oe)<rMoY".K/=M\;%:I=[78R*NkLc@^*0b_3OBY`>uBg)j9IA&ZNp7a\5V)n\3@?_I<S"d/tKgGqIai&a0#=5L7Ksa"JG#5Pgnrj;sijfde\!uGRbaC)%%cC0(?/tFp5(i7LQ@NsHo4$Dh2ZhN8/SQ@AC5GNDb:Z+I'*3N=Cs3cD@`%jXSn**CkC@#KVc)f/l@h-u8ImPG+;Nd26jYCX;WX+Eh%:?6p'9c2m^?X94AhDMS="WN6B'IbF"]:hR!nFD88GP2+#6nL5nWpR.:]*3qZ/H@`\T9oYFij"sM-U"6M(anlL_6'PrI2k\N;"6FY%^J,;W_jUgAl%un=r**AC3;F@,`_XgF0(7#O#&_\R=:_lQD(-E25&\K2rVk#(s0d+-gq?5kT.NW^AZlR&r+">_OmZL"(ZZ$X3_Wt_%-e+id0T5<(CEH<Y]Z?!V;^YjgDgJl;<o>l\QY3VM_EQ#,#1XGK\.QG*Uo]+/6!@p`.BN+(c;icOdahM3ds7Td[&kh/.enT!3SXS'%mm,X`)"?+A)mP]Be`*SsO\+T>5`f\$67ttRM]1A:ZT))[5E[5\=KQ1R9F9_>U^(i',n5'47$.Q!&D9nKnfPoT56tDJ&ANOrX):l&%OkL'_HF5osXgpRf($:L'(a"WP#j-!"Q:*K0T!u>qiOlr)D.i!<s0aZV81S"/qmtt6k25E@0"(`rT\-K"f=uak$LUHj2_F"A4\-/b%4P#^AD`doDX%d+'lllkHF$<A(13NdcJ0i[p62:$(Xu0V"8S70ueUt1J+.4p`J;Vt8$oE1eMJ@?=pKM[$>J(0?,>h.M$[!Ws3rrM=%>cBd/[]gqE-l3'sLm"Wu5;%V%+d\TCK+]3EW]jBp*P)%YWdX2Ibd=FZM/)4eL;DgOO<g#d;eLAX1+4QIWX=mc;DeK$f:tR`_T's7%*<rY-<.m>M+=289MmBC3[>/C9Q7q`'>SBR1HG$4@_KB:krhUaARVZ5%-]'")fMG1h&#SRSh7cBceJ@L)iI*Y?D9VjB?4f%hLZ],p%:Y?1Y2_53,d>mUECYH!6)n'BD%,A03SoE#1m\-U4Z6EB:q7[m*q:ZY;ddq*=;g;P>GKt+>+3o&-;tdQoeY?AB#kAA4)N`"$>Ce.6%I'3bY4Vh%ii^RHL;f,8l-"]t$0\2[=V*9PY9$?+[bo)tHF<>><"2LDgnKaJo/&%38<,BWL0&@b>%fE4MVeIat[2Mh+?qXhKek'k:%.D]/ecC$_as6B#E9+Jj7Ku[</1o_qX3;BUJF7SOJ0_Xm.hgL^-XD0MDf%IJTrSHoL&<M[42Hfc`*f5oo!T`6JoGjB@Pb$Rs*L+)$%''cECpqEp\$+[ZfT.g>%8aVlGX[<mDJdpEj"X$]i`aC#Mc%2Ij4bM\#Sm`8`e:YE._u6;7GqFgK^qgGKK566-(ISjm^C),nc9t%n%mm*/Fc+9?P!dk[oMN$b:79D-5/s%@LU2XXNL?X:Y(JF<7)^jlcc0=I/E)/TEBi:_&W#TL#k*#KrV""T\r]sj%]f<$BE;kZS0gj7<%?/@7"=)EB9'HK@sF&Mg&r-).[_'=.3`JZ?#leq^m]$frOMt,=NffIFN8$a+HF;P`)0e,G1%*?IMi5Q>)3_p>>N@3TOZ0%,>e6&gK%^Y#0>$[;2>\=6UXL<-B3+3XbTiOoDPF2#,KrUD:,1W_HPd`ONS\lpX9VnROu_<Zc&kjkU)gkoe4fSBb#>)DZnf1oB2Dp)$XY1p@L%4++imlp\KBV_$tep2U@K<=FrJ#66W/PGTY5T:RMpZtjs2F@&LGM.O9$h<.iHp)lgd8pV0P10gDHS9"gU)4SM6L@k<laHj7u!sqAt%c@`r2'/7%L6^O=8"eVRL:=1fFQC]12%?R0IQV:b`-:@Df#a!;`dV@,^[E8OOPE"pD[WmlC_8c7'_S6nQZ;XZX1+#M8,=>ilTtr6l%O]-8Y=:(`:jSHTTLpSR5?'\ZXD+YQI(%8)V;?[$Xp&.`L1#tn`?/#8WE:RB9[Pe#eJ(l^Yjh!0)!WC`k7R0:M_[JdhC`1)3\':LW%$npB%G7tY_C,1c?XoJg#PqQ&^*,Zhb_d:']+G)+McY0IUP,Y!CkrJgu(5"+5I<0`.:W$nE%T3k_8<qg_0V<u,@oP?[I%`G.U/?5"%PjG09-f\jeh\0E']qPDYq6juUpG+Z*lC$EF/96SOUJsHd2'j$Fs!W&e]4^)>mNSIPU9l7lVGi]42q;m3@GRqXg%VLY6nB45BMl<1%Ma"^U`CD/_*GIC@:FM%_fm3'6J#jXM,itN=V38Kh%"QR;NX=>b]kIUcmi,kH__qt?7dc[rhs$.Ur+Od&Et.+tG4?*+>q@B[_;_KD%g05lj>MTVERPIfq3\`.i-MIO548KTPb,hmjU%,BeO2V;/9Wj2<8:?59gU`O_Kn1He>-V=*+r?i/J@PZUUs31H8@MS9g;&j2NG,?:%fi8Y_R\\%kPSF7sWJ>3EN*47uNqIY-BV"a#AOI%=`PqZB-2`"i`JDN$[]oU+hX(siBNOr*cj"A_U6")t7WVZj-^'VT9][@iY^#k`%^.9gC8M&G#;2$8`<]]F8WsY=LJfI`W8M+qU2iCrQ-S]tMBq;6m^_c5n=*Y:!Zu[cs=f<>1oNNhlZ*AJp^HmtbL>oA]P7#'PK@OH(%ku9L($%ctb[;=]:c0ONg@L8pb[/4KDWPjm6U><G5&h;@BWKOri-4<"C`=]3[>lfi>?sM`;+RcOUFYn!i*2:*e4$4e#]-N!!]8n(p%7rjRsg(E[<p/&(hW9#VnK,Sj;9YYn_c`O)N"*3W[ls@'nSZi.a?C+lINS:T=6L>4TTH!Q5>?JMuV:K&/nqK;HWdNDBSm+>I>aosM%:HVuHn]<P%[>Yild&on5TP_;oB;0aGZ]A5,-@MT"6he)!".+?)S.:6b6]<&u=eI"OX!N"ui+V&68d%"ULbYd%Enacp(-&9S>A[Z"%jF!61Stj^RUX`d-=nD$LNZKg(_Ek<.](f7<h'!\IQ-gnX')0tQ@:]HE%)s%K4[=49jO_^7>1A[J3o5XO8`W$Ne\Q*5VJDg/h]iUo%0)]r=UPHk1HlWF1k(%`7hoMY&\=u,W/s&S;/u&d#Z]F+l@uo243bE-\Lh8s+!W/`MkF$BmHZUm&gX#BWdNV4SoG3Ct/PXlF.R^Zq%$=s58`?n9Vh:GU)*%G^8-bp%8A2E,K82fT>S$ZTC<b\<]\'*C<m9$6Fg9F?k[UG^hf:IE]*k*]mPSr7d?+?V<g@`ae(WEa3AMYmW%iokE8&:Wj7X"7C>P`6k`*.)&'aNd*%LJauKHa"VpkY?.g(2j]67e]AF)NkFAT=/D;Ve/D0&6_l67.M9Qr,[7(+X(Q,P<h!a&a:+Q%1i^qe-)nXKks6&QJo_1?LcLHPT$8(Z>lhsYk_5:bf:\]tcO%8oWf-"tFPGMgh[3"/$ojq:OHb?`9?YjR.pO&@FE,8NE2sjUYXP+&%l\[XjX+`Atq9OcqfP?TPApC)tGS3)$SHE#K)bN^_3J%58qlXtenXD_5R#)n.Q`taSS2)$=\Jp:`$/eHNa%#G5O1FC7jo]JGjT]7j%p.WOKDUXD:c-6."r;#CcY.(mTa<Orj_`8fYS2:8FQc_41XUZI<[TL.9nI>=@;TY,-*b_/SY&dK:(NG82DQPI75#ia-H8CX-<sYr+%!CtA"^m)s$inJ?Y]uo50-I_=!e`>3Od(Q+">.`CPDDu>Zn^QE&I6T.i![^a9Z)m'<Q:Qgf;jFnEWl=M:\?F$P5^!FMZtPBCr)r_*%Rau0M\kA^Y[YeGcD9d\)n?r3#L@@Je@`1nck>0>W=1;e0JNNJI::E%.m&N3h9tG^j[X#`2k5.YFJY,$a03$kB;h8;dVltp$">[XV%7eTsk@Yl9di'Cs<V0/s]j$.K8(HQ";-8fS(&<lKU!:MX"o4'&=KTC\@G$ALc`oLEUcl_MnRSjF%g!F`0k`dRD6eS/.H[ts9j`0AD%"F>JeY8$`JU@tP4h&N;l@J5pS3-jddJ4b/;9:/N#<$;dQ24qQZTN%48eSklj4d_Sc\7#mZ?"]K$Bn^Pa@_R-j.SX;^Q2C.]p1%IE%^ZT&;gN6q$bcdpl0:lSkG53-4TWM?d.X#Hr\]Ki!k*9c-olIBl?-h,M@1.E'hMDSl8Tc:AmO?[Tb"'sji?,"@H;[Tqc/e+MM(Z,,%iI9"8>_f:NS%2-qY<sF$Bj8HQ1hC.j<D?K%/4NcJYSB?!(*^:KMCpB"M\u[+L%CqnI^&uWI$TYc9dn])F<,b/'YpZggOjk%^kA,d%^_S>P.aj)@CXF=S=-]f5r[i2H?U"=-'Bne[INQcFf66;to=gR:&f%sJH1KtKc:mbUhjph2VTcU-f(Hl_p,l#V=XE7hr6(73\"K-Q%E]\uo8o/.lNB*?.9W<gNY3!<LgndToKfJ0^KjW+L03q1JV45tn(C`PnFM(V,3g9.72Q8MA%FlQ)GdKZ8r=HC(7'#F:[ar)![.`ir%\sI-nKLn#cHYnOuaoP'FKf7<uBKDkt]dQ%?qs.]W.8Je#nBmkXo<NL&d\WnE;ffn-NEK`C`]Sg`]mQ[o[5D%O0#'JPcbFn!2d\4s%?PbDF>pj/GH<rEHcIG&uM.gY!PhDRB6gBiB2i$maF@fWc:+D@S))JR^I9'8#oQ3I$6$H"nT]rBV$`4":hE6ZA_9)d9L>rFCHg#]R%P7QPVNm\c0PWO(7[<HOlFF]^[^8-!BAR$pI`$j]j-&>F0iu4E>W:#Y_ZN+_Bi`clQ*9tuH6kRA\V:8_+AO'gq_s/r,Y0$lQ20pY4%qh.Xm:8B8c#(?.gs-WL1'UtgcDjPco&$1:sHZidApFO-roGb4=J_6POi)T3u"!]J-Ld.mMlWgK8l,1**h=[dSA5`m]N[B_9G%'U#%+u)[jgXs+5+NY;eUrY'rO9T9PB6=2n1c;S9iLH[5qg#,Z)-ual[NW=!J01NVkVVq9&m>T7+V]J<EUG!qSmc(PJ-,UFnNAr'e_jie%V@W<RAg&'*F.DIQIIST_[]lh@#EB4J\`2Grs1?kAL]0Je(j#Kfe+GTX3>jq-7I&uCm">&VVR-#o_>3H2CE'hY[d@\As1[r`U7:WL%M/W<N9dG]g+nhkfHt*[9/O)jHnl*&=l$8G*#A'Wpl(C+tKZ.T93!Cm&-G@--ciVn`OCf046[/%9TqDYt%m+r6]_6K@B15p6ag3;)%N=3Z8C38^C)K@1P*K*i0XYkn-fgR`Opk9%YO[tLp(CFTM\lH*l$KO;f3?;\Oa9:K)lAZRLqY3lH:L1o`<^b=KkU`V78+ns(><6T"%U-h\Z<bVA8EWi%(9&;jIQgC5<<#U,X$oUHtI!5'1igW66hCbr(l);BlNrXu5.dI0heF$l$a%gGU%lO'NR"q`boJ)?fMHq,'T/7'2%D]8t7G>3aq]10ZiD)5<'gj=dmi,)Cq;fIJr>ZJN,>]Y1QmlOmjmtk!kB'2"PRI+t5"%m1#-@O@@C3rk1_5re;OgHi0P)4D[39<B>%"lHmf5blj`go`o$3J_CI3S2TniFb,(`KjFp^?al)&-gf>qRUP.-7AhhD)'GVEtF]?cj/&hd93<eQ7GWB'bUim"U7]LrF4f_$gp8c%0M/ks,1!uf#LKhO_.eJOP./sk::k4+,BsX/!dC.$.CM_0@*q5Dr?>JfF\0T>_DjV5+j>H_j?NaR6*jA4XS;CDaH"n:1>jjDI/DO!%rgM>e>t*%XZ..Y;HdF+K@hIFiG&9S?Z=Oc0gpIM1,^Yincop.1URkm7f451Mf03MC!mbHb4QOof\@:,8jX!c55rf3$C5')ZKR?&1%At)$ndLZVOP3g8M1Zm-N09N^f*(Me,Ud_)=Yb"uQQa0O&*Rs"aiSI:ESGCWX.A14-C:#Um@i!`#k8SpZ=8*mKTHaU!W+O\6G\Bli%hW=-5?YaQZ(+EB3B]#M@V_:IAg$0heF`b(DqBV5(Q\s!hWgruTN*8;^f.6GNNcF7`e=D7_.P)@0+l^Jk7T29ODm1H.1A&P,7/a%a%/Vq6q6^UY^Dc<1G)+fqq'CdGX>s2mC]"Df$nm$B57/ln_O_B[/2&"g>VP33EfejMXm'DZ4Kobn&^!g;U$\aO@:73/Y'nq(e[2I3c%\@pGpnDdjDY5In0aOU-MHQCe0"F9:Y[%X#$D85rG)a?4V?G"1UgOFD<%dieZ/q(>jY4osMqEI8$Y2j@cJQFVP2CrnuD>,TLetjh]%cG='$ENph<n>gsI:su:$+PVToVs@93F11BiVOn3\@7C-Np#_es!=02`?aY2=kme/u/'NBGZC;<9iX[Pn6G`!D/*_"MYT\Q1/'JBL%BGET1PTh2LX8Kr0L@Sbm[&H"Z2?6s3$K_E_;jS/YD&t_DO2ZZYs)$BSi.3nn9%+Oa4Wpnt-k.@G)5H]r@A^=+_*oT<M/'h"E,J3o%Jccn;7'eg#S<b&u4L<K^ctEF`R@jmO/nt#S2OPB<kd,[s/Prm(F-"BB6fu$\D=5p7gXQtdcY']qJ?<A."K6Q](]ag!4YuT-`Ju*d%"87Hun?VeI_)LDP)oMW%^UN,"O';_^p$Jg3^\jGpgP<QBcX6_CYM]A/34sS9qS3!jhgb[pJ,d^lrp0$&J+`:1prbmO^\Q(1rl4^3%rdX9ADZ9V'^]3?orl<oG^\PqMqN(Zs'cV2kq!6NRrp.U+ruWZ4F>j~>%AI9_PrivateDataEnd